{"version":3,"sources":["assets/images/deflogo.png","pages/Survey/steps/Step1.js","pages/Survey/steps/Step2.js","pages/Survey/steps/Step3.js","pages/Survey/steps/Step4.js","pages/Survey/steps/Step6.js","pages/Survey/steps/Step7.js","pages/Survey/steps/Step8.js","pages/Survey/steps/Step9.js","pages/Survey/steps/ReportPdf.js","components/CircularProgressWithLabel.js","assets/images/profile/pic1.jpg","components/SurveyHeader.js","components/CheckBox.js","pages/test.js","assets/images/w2.jpg","pages/Survey/Instruction.js","pages/Survey/StepCheck.js","assets/images/Welcome.png","pages/Survey/welcomescreen.js","pages/Survey/SurveyForm.js","assets/images/default-logo.png","pages/Survey/TokenExpiredPage.js","SurveyRouting.js","App.js","reportWebVitals.js","index.js","components/GraphVerticalBars.js","pages/Survey/steps/Step5.js","assets/images/star_img.jpg"],"names":["Step1","props","BaseURL","process","REACT_APP_Base_URL_Backend","token","localStorage","getItem","useState","first_name","setfirst_name","last_name","setlast_name","question","setquestion","uid","JSON","parse","loading","setloading","OptData","setOptData","OptionVal","setOptionVal","range_val","impVal","setimpVal","inputListFinal","setInputListFinal","questionId","setquestionId","RecordeData","setRecordeData","value","setValue","handleInputChange","e","target","name","list","console","log","handleSubmit","values","length","myHeaders","Headers","append","requestOptions","method","headers","body","stringify","feature","updated_by","userId","redirect","fetch","then","response","json","resData","status","GetAllRecords","next","catch","error","employee_id","employeeId","surveyor_id","question_id","manager_id","managerId","company_id","companyId","created_by","stepOneValidationSchema","Yup","response3","result","data","qID","id","response4","MyValues","map","x","i","Feature","eval","getOptions","resIdC","rwsOpt","answer","useEffect","className","validationSchema","initialValues","onSubmit","formik","errors","touched","handleBlur","isValid","dirty","size","replace","type","onChange","defaultValue","min","max","style","backgroundColor","inputVal","Step2","OptionData","setOptionData","SurveyAnswers","setSurveyAnswers","a","response2","responseSurveyAnswer","surveyResult","feature1","index","getFilteredValue","optionVal","pointerEvents","item","filter","option_id","option","ips","onClick","prev","Step3","inpV","inputValue","setinputValue","validate","ssr","key","nextFunction","feature2","OptionDataCol1","setOptionDataCol1","OptionDataCol2","setOptionDataCol2","OptionDataCol3","setOptionDataCol3","range_val1","range_val2","check","feature3","halfwayPoint","columnA","splice","columnB","columnC","valInp","setvalInp","feature5","raw1","OptionDataCol","setOptionDataCol","OptionDataColUnfav","setOptionDataColUnfav","setinputListFinal","inputListFinal1","setinputListFinal1","inputListFinal2","setinputListFinal2","Val1","setVal1","Val2","setVal2","showError","setshowError","Display","setDisplay","notification","setnotification","countInputList","favstatus","unfstatus","feature6","checked","Array","from","favoption_id","unfavoption_id","favoption_name","unfoption_name","MyValues2","getSelectedOptions","raw","column","show","onHide","centered","Header","closeButton","Title","Body","cursor","width","border","cellPadding","cellSpacing","height","colSpan","align","valign","comment","feature7","rows","placeholder","Step9","DisplayDiv","setDisplayDiv","pdfShowDes","setpdfShowDes","history","useHistory","beliverName","setbeliverName","SurveyVal","setSurveyVal","feat","setfeat","monthNames","currDateForm","Date","getMonth","substring","getFullYear","exportPDFWithMethod","setTimeout","pdfExportComponent","current","save","React","useRef","impVal2Devided1","set_impVal2Devided1","impVal2Devided2","set_impVal2Devided2","survey_count","set_survey_count","managers_length","set_managers_length","company_length","set_company_length","viewModal","setviewModal","feedbackData","setfeedbackData","answer0","setanswer0","answer1","setanswer1","answer2","setanswer2","answer3","setanswer3","answer4","setanswer4","answer5","setanswer5","answer6","setanswer6","options0","setoptions0","options1","setoptions1","options2","setoptions2","options3","setoptions3","options4","setoptions4","options5","setoptions5","options6","setoptions6","heights","setheights","impVal2","setimpVal2","impVal3","setimpVal3","impVal4","setimpVal4","impVal5","setimpVal5","impVal6","setimpVal6","impVal7","setimpVal7","impVal8","setimpVal8","impVal9","setimpVal9","Val","setVal","Val3","setVal3","Val4","setVal4","Val5","setVal5","Val6","setVal6","Val7","setVal7","Val8","setVal8","Val9","setVal9","ans","setans","OptionDataCol5","setOptionDataCol5","OptionDataCol5_2","setOptionDataCol5_2","OptionDataCol5_3","setOptionDataCol5_3","ReportData","setReportData","step_1","setstep_1","step_2","setstep_2","step_3","setstep_3","step_4","setstep_4","cal","setcal","list1","setlist1","SurveyLength","setSurveyLength","email","password","que1","setData","percentage","percentage_1","parseInt","percentage_2","percentage_3","percentage_4","percentage2","val1","data_g","options","legend","title","slices","color","colorOptions","options_2","checkUserHosting","hostEmail","callback","managersData","companyData","managersDataJson","companyDataJson","ManagersLength","myHeaders4","requestOptions4","result4","result5","impValFn","val","valmed","intoVal","parseFloat","requestOptions2","user_email","result1","result2","result3","Devided1","Devided2","result3_1","GetSurveyFeedRec","surveyMean","internalBenchmark","externalBenchmark","data_g_1","checkbtn","calculate","jsonData","calco","len","manager_count","totalItems","company_count","sumArray","array","sum","feature1_sum0","feature1Sum0","feature1Sum1","feature1Sum2","feature1Sum3","feature1Sum4","feature1Sum5","feature1Sum6","feature1Sum7","feature1Sum8","feature1Sum9","feature2Sum0","feature2Sum1","feature2Sum2","feature2Sum3","feature2Sum4","feature3Sum0","feature3Sum1","feature3Sum2","feature5_sum0","featArr0","featArr1","featArr2","featArr3","featArr4","feat1","feat2","feat3","feat5","survey_mean","internal_benchmark","external_benchmark","arraylength","push","Feature1","Feature2","Feature3","Feature4","feature4","Feature5","Feature6","Feature7","optionVal1","optionVal2","padding","float","paddingLeft","fontSize","textTransform","paddingRight","src","logo_icon","alt","position","top","left","textAlign","MozTextAlignLast","bottom","Math","ceil","toFixed","fontWeight","transform","borderRadius","opacity","borderLeft","margin","right","marginLeft","CompanyId","company_name","internal_bench","external_bench","strokeWidth","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","pathTransition","pathColor","textColor","borderTop","borderRight","class","slice","visibility","borderBlockEnd","paddingTop","marginTop","boder","maxWidth","lineHeight","text","xmlns","viewBox","cx","cy","r","fill","d","paperSize","ref","fileName","location","pathname","textAlignLast","flex","period_start","split","period_end","ManagerId","createdAt","ReportPdf","param_id","window","search","CircularProgressWithLabel","propData","sumVal","setsumVal","GetRecords","Feature8","feature8","f1","f2","reduce","n","f3","f4","f5","SurveyHeader","isActive","setActive","setvalidToken","ImageUrl","setImageUrl","state","token_ele","chekAuthUser","prof_img","role","charAt","href","stroke","strokeLinejoin","points","x1","y1","x2","y2","Checkbox","isChecked","toggleCheckboxChange","handleCheckboxChange","label","setState","this","Component","items","Instruction","Display1","setDisplay1","img_urls","setimg_urls","required","request","Modal","validateOnBlur","validateOnChange","formdata","FormData","OnSubmitForm","render","setFieldValue","handleReset","files","URL","createObjectURL","welcome","Step5","Map","inputChange","optionID","questionIdwiseData","alreadyVal","survey_id","survey_user_mapping_id","WelcomeScreen","validToken","useParams","toISOString","survey_user","setItem","SurveyForm","currentStep","setCurrentStep","setWidth","makeRequest","formData","handleNextStep","newData","final","handlePrevStep","steps","marginBottom","TokenExpiredPage","useLocation","image","SuperAdminRouting","exact","path","to","App","basename","SurveyRouting","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","GraphVerticalBars","OptionLenght","setOptionLenght","noti","setNoti","setInputListFinal1","setInputListFinal2"],"mappings":"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","file":"static/js/main.49ec38df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/deflogo.06ecaef6.png\";","import React, { useState, useEffect } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// import LinearProgress from '@material-ui/core/CircularProgress';\r\nimport CircularProgressWithLabel from '../../../components/CircularProgressWithLabel'\r\nexport default function Step1(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\");\r\n    const [question, setquestion] = useState(\"\");\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n    const [loading, setloading] = useState(0);\r\n\r\n\r\n    const [OptData, setOptData] = useState(\"\")\r\n    const [OptionVal, setOptionVal] = useState(\"\")\r\n    const [impVal, setimpVal] = useState([{ range_val: 0 }])\r\n    const [inputListFinal, setInputListFinal] = useState([{ range_val: 0 }]);\r\n\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [RecordeData, setRecordeData] = useState()\r\n\r\n\r\n    // let uid = 1;\r\n    const [value, setValue] = useState(0);\r\n    const handleInputChange = (e) => {\r\n        // let name=e.tar\r\n        // setimpVal([...impVal,{range_val:e.target.value}]);\r\n        // setimpVal(impVal => [...impVal, { range_val: e.target.value }])\r\n        // inputListFinal.push({ range_val: e.target.value })\r\n        const { name, value } = e.target;\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value\", list);\r\n        list[0][name] = value;\r\n        setInputListFinal(list);\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleSubmit = (values) => {\r\n        console.log(RecordeData)\r\n        // console.log(RecordeData ? \"true\" : \"false\")\r\n\r\n        // return false\r\n        // if (impVal == 0) {\r\n        //     return false\r\n        // }\r\n        // console.log(questionId);\r\n\r\n\r\n        // props.next(values);\r\n        if (RecordeData.length > 0) {\r\n            console.log(\"update\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                feature: inputListFinal,\r\n                updated_by: uid.userId\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        props.next(values);\r\n                        console.log(resData);\r\n\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        } else {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                employee_id: uid.employeeId,\r\n                surveyor_id: uid.userId,\r\n                question_id: questionId,\r\n                manager_id: uid.managerId,\r\n                company_id: uid.companyId,\r\n                feature: inputListFinal,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_feedback`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        props.next(values);\r\n                        console.log(resData);\r\n\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const stepOneValidationSchema = Yup.object({\r\n        // first_name: Yup.number().required().label(\"First name\").min(1, \"Please select a value\")\r\n        // last_name: Yup.string().required().label(\"Last name\")\r\n    });\r\n\r\n    const GetAllRecords = () => {\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        console.log(uid.userId)\r\n\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            }).then(() => {\r\n                fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        // setlistRecord(result.data);\r\n                        console.log(result.data[0], \"hh\")\r\n\r\n                        let qID = result.data[0].id;\r\n                        setquestionId(qID);\r\n                        console.log(result.data[0].id)\r\n                        console.log(result.data[0].id)\r\n                        setquestion(result.data[0].question);\r\n                        // getOptions(result.data[0].id);\r\n                    })\r\n\r\n                    .catch(error => console.log('error', error));\r\n            }).then(() => setloading(0))\r\n\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                if (result.status == 200) {\r\n                    // console.log(result)\r\n                    setRecordeData(result.data)\r\n\r\n                    let MyValues = result.data;\r\n\r\n                    MyValues.map((x, i) => {\r\n                        var Feature = eval(x.feature);\r\n                        console.log(\"feature\", Feature);\r\n                        if (Feature) {\r\n                            console.log(\"feature\", Feature);\r\n                            setInputListFinal(Feature)\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    const getOptions = (resIdC) => {\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n\r\n                // console.log(questionId, \"jj\")\r\n                if (rwsOpt.data) {\r\n                    console.log(rwsOpt.data.id)\r\n                    console.log(rwsOpt.data.answer)\r\n\r\n                    setOptData(rwsOpt.data.id);\r\n                    setOptionVal(rwsOpt.data.answer)\r\n                    setimpVal(rwsOpt.data.answer)\r\n                    setInputListFinal(rwsOpt.data.answer)\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords()\r\n    }, []);\r\n\r\n    if (loading === 1) {\r\n        return <div className=\"loader\"> <CircularProgress /></div>\r\n    }\r\n\r\n    return (\r\n        // <fieldset>\r\n        <div>\r\n            <Formik\r\n                validationSchema={stepOneValidationSchema}\r\n                initialValues={props.data}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {(formik) => {\r\n                    const {\r\n                        values,\r\n                        // handleInputChange,\r\n                        handleSubmit,\r\n                        errors,\r\n                        touched,\r\n                        handleBlur,\r\n                        isValid,\r\n                        dirty\r\n                    } = formik;\r\n                    return (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\"></div>\r\n                                {console.log(inputListFinal[0].range_val)}\r\n\r\n                                <div className=\"col-4\">\r\n                                    {/* <CircularProgressWithLabel value={50}  /> */}\r\n                                    <div className=\"steps\"><CircularProgressWithLabel size={70} data={uid.userId} value={inputListFinal[0].range_val * 10} />\r\n                                    </div>\r\n                                    {/* <LinearProgress value={10} /> */}\r\n                                    {/* <CircularProgress variant=\"determinate\" value={50} /> */}\r\n\r\n                                    {/* <h3 className=\"smtxt\">1 = Poor &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Outstanding &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3> */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-card\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                                        <p className=\"fs-title-m\">First, we’d like you to give us an overall rating (all things considered) for the performance period.</p>\r\n                                        <h2 className=\"fs-title1\">[1-10 scale] Overall, {question.replace(\"[FIRST NAME]\", first_name)}</h2>\r\n                                        {/* <hr /> */}\r\n                                        <h3 className=\"smtxt\">1 = Poor &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Outstanding &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n\r\n                                        <br />\r\n                                        <br />\r\n\r\n                                        <div className=\"card pad-card\">\r\n                                            <div className=\"range-slider\">\r\n                                                <input className=\"range-slider__range\" type=\"range\" name=\"range_val\" onChange={handleInputChange} value={inputListFinal[0].range_val} defaultValue={OptionVal} min={0} max={10} />\r\n                                                {/* <span className=\"range-slider__value\" >{inputListFinal[0].range_val}</span>  */}\r\n                                                <span className=\"range-slider__value\" style={{ backgroundColor: inputListFinal[0].range_val == 0 || inputListFinal[0].range_val == \"\" || inputListFinal[0].range_val == \"NA\" ? \"rgb(221,38,60)\" : \"\" }} >{inputListFinal[0].range_val == 0 ? \"NA\" : inputListFinal[0].range_val}</span>\r\n\r\n                                            </div>\r\n                                            {/* <span className=\"range-slider__value\" style={{backgroundColor:\"rgb(221,38,60)\"}} >{impVal == 0 ? \"NA\" : impVal}</span> </div> */}\r\n\r\n                                            <div>\r\n                                                {errors.inputVal && touched.inputVal && (\r\n                                                    <span className=\"error\">{errors.inputVal}</span>\r\n                                                )}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"button btn-align-step\">\r\n                                            <button type=\"submit\" className=\"btn-next-step\">Next</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <input type=\"button\" onClick={() => props.next()} name=\"next\" className=\"next action-button\" defaultValue=\"Next\" /> */}\r\n\r\n                        </Form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n        //  </fieldset >\r\n    )\r\n}\r\n\r\n","// chrome-extension://chphlpgkkbolifaimnlloiipkdnihall/onetab.html  \r\nimport { CircularProgress } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport CircularProgressWithLabel from '../../../components/CircularProgressWithLabel';\r\n\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n    const [question, setquestion] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [loading, setloading] = useState(0);\r\n    const [inputListFinal, setInputListFinal] = useState([{ range_val: 0 }, { range_val: 0 }, { range_val: 0 }, { range_val: 0 }, { range_val: 0 }, { range_val: 0 }, { range_val: 0 }, { range_val: 0 }, { range_val: 0 }, { range_val: 0 }]);\r\n    const [RecordeData, setRecordeData] = useState();\r\n\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(inputListFinal)\r\n        // console.log(inputListFinal[0].range_val)\r\n\r\n        // return false\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                let qID = result.data[1].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[1].id)\r\n                console.log(result.data[1].id)\r\n                setquestion(result.data[1].question);\r\n                getOptions(result.data[1].id);\r\n                // getOptions1(result.data[0].id);\r\n            })\r\n\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n            })\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                if (result.status == 200) {\r\n\r\n                    console.log(result)\r\n                    console.log(result.data)\r\n                    setRecordeData(result.data)\r\n                    console.log(result.data.feature)\r\n\r\n                    let MyValues = result.data;\r\n                    // if (MyValues.length > 0) {\r\n                    //   setedituser(true);\r\n                    //   setUpid(result.data[0].id);\r\n                    // }\r\n                    console.log(\"Edit Values\", MyValues);\r\n                    if (MyValues.length > 0) {\r\n                        MyValues.map((x, i) => {\r\n                            let Feature = eval(x.feature1);\r\n                            if (Feature) {\r\n                                setInputListFinal(Feature)\r\n\r\n                            }\r\n                        })\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            })\r\n\r\n\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                setOptionData(rwsOpt.data);\r\n\r\n                console.log(rwsOpt.data)\r\n                let optionDataResult = rwsOpt.data\r\n                let val = [];\r\n                // if (optionDataResult.length != inputListFinal.length) {\r\n                //     optionDataResult.map((item, index) => {\r\n                //         setInputListFinal(inputListFinal => [...inputListFinal, { range_val: 0 }])\r\n                //     })\r\n                // }\r\n\r\n\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // setInputListFinal(\"\")\r\n\r\n\r\n\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            setloading(0)\r\n        })\r\n\r\n        // console.log(inputListFinal)\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault()\r\n    //     console.log(inputListFinal)\r\n    // }\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n        console.log(e.target.value)\r\n        console.log(e.target.name)\r\n\r\n        const { name, value } = e.target;\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value\", list);\r\n        list[index][name] = value;\r\n        setInputListFinal(list);\r\n\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        console.log(RecordeData)\r\n        // console.log(RecordeData ? \"true\" : \"false\")\r\n\r\n        // return false\r\n        // if (impVal == 0) {\r\n        //     return false\r\n        // }\r\n        console.log(questionId);\r\n\r\n\r\n        // props.next(values);\r\n        console.log(\"update\")\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        // inputList.map((item,key)=>{\r\n        var raw = JSON.stringify({\r\n            feature1: inputListFinal,\r\n            updated_by: uid.userId\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.status == 200) {\r\n                    console.log(\"Values Submitted Succesfully\");\r\n                    GetAllRecords();\r\n                    props.next(values);\r\n                    console.log(resData);\r\n                }\r\n                // GetAllRecords();\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n    };\r\n\r\n\r\n    const getFilteredValue = (optionVal) => {\r\n        return optionVal.length != 0 ? optionVal[0].answer : null\r\n    }\r\n    return (\r\n        <>\r\n            {loading === 1 ? (<div className=\"loader\"> <CircularProgress /></div>) : null}\r\n            <fieldset style={{ pointerEvents: loading === 1 ? \"none\" : \"all\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"steps\">\r\n                            <CircularProgressWithLabel size={70} data={uid.userId} value={5 * 10} />\r\n                        </div>                        {/* <h3 className=\"smtxt\">1 = Poor &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Outstanding &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-card\">\r\n                    <p className='fs-title-m'>Next, {question.replace(\"[FIRST NAME]\", first_name)}</p>\r\n                    <hr />\r\n                    {/* <br /> */}\r\n                    <br />\r\n                    <h3 className=\"smtxt\">1 = Poor &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Outstanding &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n                    <br />\r\n\r\n                    <div className=\"row\">\r\n                        {OptionData.map((item, i) => {\r\n                            // console.log(item.id)\r\n                            // console.log(SurveyAnswers)\r\n                            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n\r\n                            if (optionVal.length > 0) {\r\n                                // console.log(optionVal[0].answer)\r\n                            }\r\n\r\n                            return (\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"card pad-card\">\r\n                                        {inputListFinal ? (\r\n                                            <div className=\"range-slider\">\r\n                                                <div className=\"sub-q\" data-tip={item.option}>{item.option}</div>\r\n                                                <ReactTooltip />\r\n\r\n                                                <input className=\"range-slider__range\"\r\n                                                    type=\"range\"\r\n                                                    id={item.id}\r\n                                                    // value={getFilteredValue(optionVal)}\r\n                                                    defaultValue={0}\r\n                                                    min={0}\r\n                                                    max={10}\r\n                                                    name=\"range_val\"\r\n                                                    value={inputListFinal[i].range_val}\r\n                                                    ips=\"0\"\r\n                                                    onChange={(e) => handleInputChange(e, i)}\r\n                                                />\r\n                                                {/* <span>{inputListFinal[i].range_val}</span> */}\r\n                                                <span className=\"range-slider__value\" style={{ backgroundColor: inputListFinal[i].range_val == 0 || inputListFinal[i].range_val == null || inputListFinal[i].range_val == \"\" || inputListFinal[i].range_val == \"NA\" || \"\" ? \"rgb(221,38,60)\" : \"\" }}>\r\n                                                    {(inputListFinal[i].range_val == 0 ? \"NA\" : inputListFinal[i].range_val)}\r\n                                                </span>\r\n                                            </div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"button btn-align-step2\">\r\n                        <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                        <input type=\"button\" onClick={handleSubmit} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { ListItem, CircularProgress } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport CircularProgressWithLabel from '../../../components/CircularProgressWithLabel';\r\n\r\nexport default function Step3(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [inputValue, setinputValue] = useState([{ inpV: \"\" }])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [loading, setloading] = useState(0)\r\n    // const [inputListFinal, setInputListFinal] = useState([{ range_value: 0, range_value: 0, range_value: 0, range_value: 0, range_value: 0 }]);\r\n    // let uid.userId = 1;\r\n    const [inputListFinal, setInputListFinal] = useState([{ range_val: 0 }, { range_val: 0 }, { range_val: 0 }, { range_val: 0 }, { range_val: 0 }]);\r\n    const [RecordeData, setRecordeData] = useState()\r\n\r\n\r\n    function validate() {\r\n        var ssr = true;\r\n        OptionData.map((item, key) => {\r\n            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n            if (optionVal.length == 0) {\r\n                console.log(false)\r\n                ssr = false\r\n            }\r\n\r\n            optionVal.map((item, key) => {\r\n                if (item.answer == 0) {\r\n                    ssr = false\r\n                }\r\n            })\r\n        })\r\n        return ssr\r\n    }\r\n\r\n    const nextFunction = () => {\r\n        // if (validate()) {\r\n        //     props.next()\r\n        // }\r\n        props.next()\r\n    }\r\n\r\n\r\n\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[2].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[2].id)\r\n                console.log(result.data[2].id)\r\n                setquestion(result.data[2].question);\r\n                getOptions(result.data[2].id);\r\n                // }\r\n\r\n            })\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                console.log(result.data)\r\n                setRecordeData(result.data)\r\n                console.log(result.data.feature)\r\n\r\n                let MyValues = result.data;\r\n                // if (MyValues.length > 0) {\r\n                //   setedituser(true);\r\n                //   setUpid(result.data[0].id);\r\n                // }\r\n                console.log(\"Edit Values\", MyValues);\r\n\r\n                MyValues.map((x, i) => {\r\n                    console.log(i)\r\n                    let Feature = eval(x.feature2);\r\n                    console.log(\"feature\", Feature);\r\n                    if (Feature) {\r\n                        setInputListFinal(Feature)\r\n\r\n                    }\r\n                })\r\n\r\n\r\n\r\n            })\r\n\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                setOptionData(rwsOpt.data);\r\n\r\n                console.log(questionId, \"jj\")\r\n\r\n                console.log(rwsOpt.data)\r\n\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getFilteredValue = (optionVal) => {\r\n        return optionVal.length != 0 ? optionVal[0].answer : null\r\n    }\r\n\r\n    const handleInputChange = (e, index) => {\r\n        console.log(e.target.value)\r\n        console.log(e.target.name)\r\n        // alert(index)\r\n\r\n        const { name, value } = e.target;\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value\", list);\r\n        list[index][name] = value;\r\n        setInputListFinal(list);\r\n\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        console.log(RecordeData)\r\n        console.log(questionId);\r\n        // props.next(values);\r\n        console.log(\"update\")\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            feature2: inputListFinal,\r\n            updated_by: uid.userId\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.status == 200) {\r\n                    console.log(\"Values Submitted Succesfully\");\r\n                    GetAllRecords();\r\n                    props.next(values);\r\n                    console.log(resData);\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading === 1 ? (<div className=\"loader\"> <CircularProgress /></div>) : null}\r\n\r\n            <fieldset style={{ pointerEvents: loading === 1 ? \"none\" : \"all\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"steps\">\r\n                            <CircularProgressWithLabel size={70} data={uid.userId} value={5 * 10} />\r\n                        </div>\r\n                        {/* <h2 className=\"steps\">30%</h2> */}\r\n                        {/* <h3 className=\"smtxt\">1 = Completely Disagree &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Completely Agree &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-card\">\r\n                    <div className=\"row\">\r\n                        {/* <p>Next, we’d like you to tell us how you’d rate [FIRST NAME] on a few competencies that help predict their\r\n                        future potential. On a 10-point scale, give us your agreement rating on the following.</p> */}\r\n\r\n                        <p className='fs-title-m'>Next, {question.replace(\"[FIRST NAME]\", first_name)}</p>\r\n                        <hr />\r\n                        <br />\r\n                        <br />\r\n                        {/* <br /> */}\r\n                        <h3 className=\"smtxt\">1 = Completely Disagree &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Completely Agree &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n                        <br />\r\n                        <br />\r\n\r\n\r\n\r\n                        {OptionData.map((item, i) => {\r\n                            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n\r\n                            return (\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"card pad-card\">\r\n                                        {inputListFinal ? (\r\n                                            <div className=\"range-slider\">\r\n                                                {/* <h3 className=\"sub-q\">{item.option}</h3> */}\r\n                                                <div className=\"sub-q\" data-tip={item.option}>{item.option}</div>\r\n                                                <ReactTooltip />\r\n\r\n                                                <input className=\"range-slider__range\" type=\"range\" id={item.id}\r\n                                                    // value={getFilteredValue(optionVal)}\r\n                                                    name=\"range_val\"\r\n                                                    value={inputListFinal[i].range_val}\r\n                                                    defaultValue={0}\r\n                                                    min={0}\r\n                                                    max={10}\r\n                                                    onChange={(e) => handleInputChange(e, i)} />\r\n\r\n                                                <span className=\"range-slider__value\" style={{ backgroundColor: inputListFinal[i].range_val == 0 || inputListFinal[i].range_val == null || inputListFinal[i].range_val == \"\" || inputListFinal[i].range_val == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>\r\n                                                    {(inputListFinal[i].range_val == 0 ? \"NA\" : inputListFinal[i].range_val)}\r\n\r\n                                                </span>\r\n                                            </div>\r\n                                        ) : null}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"button btn-align-step2\">\r\n                    <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                    <input type=\"button\" onClick={handleSubmit} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                </div>\r\n            </fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport CircularProgressWithLabel from '../../../components/CircularProgressWithLabel';\r\nimport \"../../../assets/css/steps.css\"\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\r\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\r\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\r\n    const [inputValue, setinputValue] = useState([{ inpV: \"\" }])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [loading, setloading] = useState(0)\r\n    const [inputListFinal, setInputListFinal] = useState([{ range_val: 0, range_val1: 0, range_val2: 0 }, { range_val: 0, range_val1: 0, range_val2: 0 }, { range_val: 0, range_val1: 0, range_val2: 0 }]);\r\n    const [RecordeData, setRecordeData] = useState()\r\n\r\n    // let uid.userId = 1;\r\n\r\n    function validate() {\r\n        var ssr = true;\r\n        OptionDataCol1.map((item, key) => {\r\n            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n            if (optionVal.length == 0) {\r\n                ssr = false\r\n            }\r\n\r\n            optionVal.map((item, key) => {\r\n                // console.log(item)\r\n                if (item.answer == 0) {\r\n                    ssr = false\r\n                }\r\n            })\r\n        })\r\n        OptionDataCol2.map((item, key) => {\r\n            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n            if (optionVal.length == 0) {\r\n                ssr = false\r\n            }\r\n            optionVal.map((item, key) => {\r\n                // console.log(item)\r\n                if (item.answer == 0) {\r\n                    ssr = false\r\n                }\r\n            })\r\n        })\r\n        OptionDataCol3.map((item, key) => {\r\n            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n            if (optionVal.length == 0) {\r\n                ssr = false\r\n            }\r\n            optionVal.map((item, key) => {\r\n                // console.log(item)\r\n                if (item.answer == 0) {\r\n                    ssr = false\r\n                }\r\n            })\r\n        })\r\n        return ssr\r\n    }\r\n\r\n    const nextFunction = () => {\r\n        console.log(validate())\r\n        var check = validate()\r\n        console.log(check)\r\n        // if (check) {\r\n        //     props.next()\r\n        // }\r\n        props.next()\r\n\r\n    }\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[3].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[3].id)\r\n                console.log(result.data[3].id)\r\n                setquestion(result.data[3].question);\r\n                getOptions(result.data[3].id);\r\n                // }\r\n\r\n            })\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                console.log(result.data)\r\n                setRecordeData(result.data)\r\n                console.log(result.data.feature)\r\n\r\n                let MyValues = result.data;\r\n                console.log(\"Edit Values\", MyValues);\r\n\r\n                MyValues.map((x, i) => {\r\n                    // console.log(i)\r\n                    let Feature = eval(x.feature3);\r\n                    console.log(\"feature\", Feature);\r\n                    if (Feature) {\r\n                        setInputListFinal(Feature)\r\n\r\n                    }\r\n                })\r\n\r\n\r\n\r\n            })\r\n\r\n\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                setOptionData(rwsOpt.data);\r\n\r\n                console.log(questionId, \"jj\")\r\n\r\n                console.log(rwsOpt.data)\r\n                console.log(rwsOpt.data.length, \"d\")\r\n                let halfwayPoint = rwsOpt.data.length / 3;\r\n                console.log(halfwayPoint);\r\n                let columnA = rwsOpt.data.splice(0, halfwayPoint)\r\n                let columnB = rwsOpt.data.splice(0, halfwayPoint)\r\n                let columnC = rwsOpt.data.splice(0)\r\n                setOptionDataCol1(columnA);\r\n                setOptionDataCol2(columnB);\r\n                setOptionDataCol3(columnC);\r\n\r\n                console.log(columnA);\r\n                console.log(columnB);\r\n                console.log(columnC);\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n\r\n    // if (loading === 1) {\r\n    //     return <div className=\"loader\"> <CircularProgress /></div>\r\n    // }\r\n\r\n\r\n\r\n\r\n    const handleInputChange = (e, index) => {\r\n\r\n        console.log(index)\r\n        console.log(e.target.value)\r\n        console.log(e.target.name)\r\n        const { name, value } = e.target;\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value\", list);\r\n        list[index][name] = value;\r\n        setInputListFinal(list);\r\n\r\n    }\r\n\r\n\r\n    const handleSubmit = (values) => {\r\n        console.log(RecordeData)\r\n        console.log(questionId);\r\n        // props.next(values);\r\n        console.log(\"update\")\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            feature3: inputListFinal,\r\n            updated_by: uid.userId\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.status == 200) {\r\n                    console.log(\"Values Submitted Succesfully\");\r\n                    GetAllRecords();\r\n                    props.next(values);\r\n                    console.log(resData);\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading === 1 ? (<div className=\"loader\"> <CircularProgress /></div>) : null}\r\n\r\n            <fieldset style={{ pointerEvents: loading === 1 ? \"none\" : \"all\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"steps\">\r\n                            <CircularProgressWithLabel size={70} data={uid.userId} value={5 * 10} />\r\n                        </div>\r\n                        {/* <h2 className=\"steps\">40%</h2> */}\r\n                        {/* <h3 className=\"smtxt\">1 = Completely Disagree &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Completely Agree &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-card\">\r\n                    <p className='fs-title-m'>{question.replace(\"[FIRST NAME]\", first_name).replace(\"[FIRST NAME]\", first_name)}</p>\r\n                    <hr />\r\n                    <br />\r\n                    {/* <br /> */}\r\n                    {/* <br /> */}\r\n                    <h3 className=\"smtxt\">1 = Completely Disagree &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Completely Agree &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n                    <br />\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"colOwn\" >\r\n                            <div className=\"cardp pad-cardp\">\r\n                                <h2 className=\"fs-title\">{first_name} THINKS</h2>\r\n                            </div>\r\n\r\n                            {OptionDataCol1.map((item, i) => {\r\n                                var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n\r\n                                return (\r\n\r\n                                    <div className=\"cardp pad-cardp\" >\r\n                                        <div className=\"range-slider\" >\r\n                                            <h3 className=\"sub-q min-height\">{item.option}</h3>\r\n                                            <input className=\"range-slider__range\" type=\"range\" id={item.id} value={inputListFinal[i].range_val} name=\"range_val\" onChange={(e) => handleInputChange(e, i)} defaultValue={0} min={0} max={10} />\r\n                                            <span className=\"range-slider__value \" style={{ backgroundColor: inputListFinal[i].range_val == 0 || inputListFinal[i].range_val == \"\" || inputListFinal[i].range_val == null || inputListFinal[i].range_val == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>\r\n                                                {(inputListFinal[i].range_val == 0 ? \"NA\" : inputListFinal[i].range_val)}\r\n                                            </span> </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n\r\n                        <div className=\"colOwn\" >\r\n\r\n                            <div className=\"cardp pad-cardp\">\r\n                                <h2 className=\"fs-title\">{first_name} ACTS</h2>\r\n                            </div>\r\n\r\n\r\n                            {OptionDataCol2.map((item, i) => {\r\n                                var optionVal1 = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n\r\n                                return (\r\n\r\n                                    <div className=\"cardp pad-cardp\" >\r\n                                        <div className=\"range-slider\" >\r\n                                            <h3 className=\"sub-q min-height\">{item.option}</h3>\r\n                                            <input className=\"range-slider__range\" type=\"range\"\r\n                                                id={item.id}\r\n                                                name=\"range_val1\"\r\n                                                value={inputListFinal[i].range_val1}\r\n                                                onChange={(e) => handleInputChange(e, i)}\r\n                                                defaultValue={0}\r\n                                                min={0}\r\n                                                max={10} />\r\n                                            <span className=\"range-slider__value\" style={{ backgroundColor: inputListFinal[i].range_val1 == 0 || inputListFinal[i].range_val1 == \"\" || inputListFinal[i].range_val1 == null || inputListFinal[i].range_val1 == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>\r\n                                                {(inputListFinal[i].range_val1 == 0 ? \"NA\" : inputListFinal[i].range_val1)}\r\n\r\n                                            </span> </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n\r\n                        <div className=\"colOwn\" >\r\n\r\n                            <div className=\"cardp pad-cardp\">\r\n                                <h2 className=\"fs-title\">{first_name} Makes Me FEEL</h2>\r\n                            </div>\r\n\r\n                            {OptionDataCol3.map((item, i) => {\r\n                                var optionVal2 = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n\r\n                                return (\r\n\r\n                                    <div className=\"cardp pad-cardp\" >\r\n                                        <div className=\"range-slider\" >\r\n                                            <h3 className=\"sub-q min-height\">{item.option}</h3>\r\n                                            <input className=\"range-slider__range\" type=\"range\"\r\n                                                id={item.id}\r\n                                                value={inputListFinal[i].range_val2}\r\n                                                // onChange={inputChange}\r\n                                                name=\"range_val2\"\r\n                                                onChange={(e) => handleInputChange(e, i)}\r\n                                                defaultValue={0}\r\n                                                min={0}\r\n                                                max={10} />\r\n                                            <span className=\"range-slider__value\" style={{ backgroundColor: inputListFinal[i].range_val2 == 0 || inputListFinal[i].range_val2 == \"\" || inputListFinal[i].range_val2 == null || inputListFinal[i].range_val2 == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>\r\n                                                {(inputListFinal[i].range_val2 == 0 ? \"NA\" : inputListFinal[i].range_val2)}\r\n\r\n                                            </span> </div>\r\n                                        {/* <span>{optionVal2.length > 0 ? optionVal2[0].answer : null}</span> */}\r\n\r\n                                    </div>\r\n                                )\r\n                            })}\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"button btn-align-step2\">\r\n                        <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                        <input type=\"button\" onClick={handleSubmit} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport CircularProgressWithLabel from \"../../../components/CircularProgressWithLabel\";\r\n\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [inputValue, setinputValue] = useState([{ inpV: \"\" }])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n\r\n    const [OptData, setOptData] = useState(\"\")\r\n    const [OptionVal, setOptionVal] = useState(\"\")\r\n    const [impVal, setimpVal] = useState(0)\r\n    const [loading, setloading] = useState(0)\r\n    const [RecordeData, setRecordeData] = useState()\r\n    const [inputListFinal, setInputListFinal] = useState([{ range_val: 0 }]);\r\n    const [valInp, setvalInp] = useState([{ range_val: 0 }]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n\r\n    if (loading === 1) {\r\n        return <div className=\"loader\"> <CircularProgress /></div>\r\n    }\r\n\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[5].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[5].id)\r\n                console.log(result.data[5].id)\r\n                setquestion(result.data[5].question);\r\n                getOptions(result.data[5].id);\r\n                // }\r\n\r\n            })\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                console.log(result.data)\r\n                setRecordeData(result.data)\r\n                console.log(result.data.feature)\r\n\r\n                let MyValues = result.data;\r\n                // if (MyValues.length > 0) {\r\n                //   setedituser(true);\r\n                //   setUpid(result.data[0].id);\r\n                // }\r\n                console.log(\"Edit Values\", MyValues);\r\n                MyValues.map((x, i) => {\r\n                    console.log(i)\r\n                    let Feature = eval(x.feature5);\r\n                    if (Feature) {\r\n                        console.log(\"feature\", Feature);\r\n                        setvalInp(Feature)\r\n                    }\r\n\r\n                })\r\n\r\n\r\n\r\n            })\r\n\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        // console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw1 = JSON.stringify({\r\n            surveyor_id: uid.userId,\r\n            question_id: resIdC,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw1,\r\n            redirect: \"follow\",\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/survey_answers_same`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n\r\n                // console.log(questionId, \"jj\")\r\n                if (rwsOpt.data) {\r\n                    console.log(rwsOpt.data.id)\r\n                    setOptData(rwsOpt.data.id);\r\n                    setOptionVal(rwsOpt.data.answer)\r\n                    setimpVal(rwsOpt.data.answer)\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        // if (impVal == 0) {\r\n        //     return false\r\n        // }\r\n\r\n        console.log(\"update\")\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        // inputList.map((item,key)=>{\r\n        var raw = JSON.stringify({\r\n            feature5: valInp,\r\n            updated_by: uid.userId\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.status == 200) {\r\n                    console.log(\"Values Submitted Succesfully\");\r\n                    GetAllRecords();\r\n                    props.next(values);\r\n                    console.log(resData);\r\n                }\r\n                // GetAllRecords();\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n    };\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        // let name=e.tar\r\n        // setimpVal([...impVal,{range_val:e.target.value}]);\r\n        // setimpVal(impVal => [...impVal, { range_val: e.target.value }])\r\n        // valInp.push({ range_val: e.target.value })\r\n\r\n        const { name, value } = e.target;\r\n        console.log(value)\r\n        const list = [...valInp];\r\n        console.log(\"Here is the Value\", valInp);\r\n        list[0][name] = value;\r\n        setvalInp(list);\r\n\r\n    }\r\n\r\n\r\n    const stepOneValidationSchema = Yup.object({\r\n        // first_name: Yup.number().required().label(\"First name\").min(1, \"Please select a value\")\r\n        // last_name: Yup.string().required().label(\"Last name\")\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                validationSchema={stepOneValidationSchema}\r\n                initialValues={props.data}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {(formik) => {\r\n                    const {\r\n                        values,\r\n                        // handleInputChange,\r\n                        handleSubmit,\r\n                        errors,\r\n                        touched,\r\n                        handleBlur,\r\n                        isValid,\r\n                        dirty\r\n                    } = formik;\r\n                    return (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\"></div>\r\n\r\n                                <div className=\"col-4\">\r\n                                    {/* <CircularProgressWithLabel value={50}  /> */}\r\n                                    <div className=\"steps\"><CircularProgressWithLabel size={70} data={uid.userId} value={impVal * 10} />\r\n                                    </div>\r\n                                    {/* <LinearProgress value={10} /> */}\r\n                                    {/* <CircularProgress variant=\"determinate\" value={50} /> */}\r\n\r\n                                    {/* <h3 className=\"smtxt\">1 = Poor &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Outstanding &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3> */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-card\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                                        <p className=\"fs-title-m\">First, we’d like you to give us an overall rating (all things considered) for the performance period.</p>\r\n                                        <h2 className=\"fs-title1\">[1-10 scale] Overall, {question.replace(\"[FIRST NAME]\", first_name)}</h2>\r\n                                        {/* <hr /> */}\r\n                                        \r\n                                        <h3 className=\"smtxt\">1 = Poor &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Outstanding &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n\r\n                                        <br />\r\n                                        <br />\r\n\r\n                                        <div className=\"card pad-card\">\r\n\r\n                                            <div className=\"range-slider\">\r\n                                                <input className=\"range-slider__range\" type=\"range\" name=\"range_val\" onChange={handleInputChange} value={valInp[0].range_val} defaultValue={OptionVal} min={0} max={10} />\r\n                                                <span className=\"range-slider__value\" style={{ backgroundColor: valInp[0].range_val == 0 || valInp[0].range_val == \"\" || valInp[0].range_val == \"NA\" ? \"rgb(221,38,60)\" : \"\" }} >{valInp[0].range_val == 0 ? \"NA\" : valInp[0].range_val}</span>\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                {errors.inputVal && touched.inputVal && (\r\n                                                    <span className=\"error\">{errors.inputVal}</span>\r\n                                                )}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"button btn-align-step2\">\r\n                                            <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                                            <button type=\"submit\" name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" >Next</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <input type=\"button\" onClick={() => props.next()} name=\"next\" className=\"next action-button\" defaultValue=\"Next\" /> */}\r\n\r\n                        </Form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { Checkbox, CircularProgress } from '@material-ui/core';\r\nimport '../../../assets/css/Step7.css'\r\nimport CircularProgressWithLabel from \"../../../components/CircularProgressWithLabel\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionDataCol, setOptionDataCol] = useState([])\r\n    const [OptionDataColUnfav, setOptionDataColUnfav] = useState([])\r\n    const [inputListFinal, setinputListFinal] = useState([])\r\n    const [inputListFinal1, setinputListFinal1] = useState([])\r\n    const [inputListFinal2, setinputListFinal2] = useState([])\r\n\r\n    const [Val1, setVal1] = useState([])\r\n    const [Val2, setVal2] = useState([])\r\n\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [showError, setshowError] = useState(false)\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const [Display, setDisplay] = useState(false);\r\n    const [notification, setnotification] = useState(false);\r\n    const [RecordeData, setRecordeData] = useState()\r\n\r\n\r\n    // let uid.userId = 1;\r\n\r\n    const handleSubmit = (values) => {\r\n\r\n\r\n        // console.log(inputListFinal)\r\n        var countInputList = inputListFinal.filter(({ favstatus }) => favstatus == true).length + inputListFinal.filter(({ unfstatus }) => unfstatus == true).length;\r\n        console.log(countInputList)\r\n\r\n\r\n        if (countInputList != 5) {\r\n            setnotification(\"Please Select Any Five Optons\")\r\n            setDisplay(true)\r\n            return false\r\n        }\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            feature6: inputListFinal,\r\n            updated_by: uid.userId\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.status == 200) {\r\n                    console.log(\"Values Submitted Succesfully\");\r\n                    GetAllRecords();\r\n                    props.next(values);\r\n                    console.log(resData);\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleInputChange = (e, i, option) => {\r\n        // let check = checkCount();\r\n        // console.log(check)\r\n        console.log(inputListFinal)\r\n        const { id, name, value, checked } = e.target;\r\n        console.log(checked)\r\n        const list = [...inputListFinal];\r\n\r\n        // const unlist = [...inputListFinal2];\r\n\r\n        console.log(\"Here is the Value\", list);\r\n\r\n        var countInputList = list.filter(({ favstatus }) => favstatus == true).length + list.filter(({ unfstatus }) => unfstatus == true).length;\r\n        console.log(countInputList)\r\n        if (countInputList == 5 && e.target.checked == true) {\r\n            setnotification(\"You Can Select Only Five Options\")\r\n            setDisplay(true)\r\n            return false\r\n        }\r\n        list[i][`${name}option_id`] = id;\r\n        list[i][`${name}option_name`] = option;\r\n        list[i][`${name}status`] = checked;\r\n        setinputListFinal(list)\r\n\r\n        // setinputListFinal([{ list }, { unlist }])\r\n\r\n    }\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        if (inputListFinal.length != 100) {\r\n            Array.from({ length: 100 }, (item, index) => {\r\n                setinputListFinal(inputListFinal => [...inputListFinal, { favoption_id: 0, unfavoption_id: 0, favoption_name: \"\", unfoption_name: \"\", favstatus: false, unfstatus: false }])\r\n            })\r\n        }\r\n\r\n\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[6].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[6].id)\r\n                console.log(result.data[6].id)\r\n                setquestion(result.data[6].question);\r\n                getOptions(result.data[6].id);\r\n                // }\r\n\r\n            })\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                console.log(result.data)\r\n                setRecordeData(result.data)\r\n                console.log(result.data.feature)\r\n\r\n                let MyValues = result.data;\r\n                let MyValues2 = result.data;\r\n\r\n                console.log(\"Edit Values\", MyValues);\r\n\r\n                MyValues.map((x, i) => {\r\n                    // console.log(i)\r\n                    let Feature = eval(x.feature6);\r\n                    // let Feature2 = eval(x.feature7);\r\n\r\n                    console.log(\"feature\", Feature);\r\n                    if (Feature) {\r\n                        // setinputListFinal(Feature)\r\n                        console.log(\"feature1\", Feature);\r\n                        setinputListFinal(Feature)\r\n                        // setinputListFinal2(Feature2)\r\n\r\n\r\n                    }\r\n                })\r\n\r\n\r\n\r\n\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const getSelectedOptions = async () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        var raw = JSON.stringify({\r\n            question_id: 27,\r\n            surveyor_id: uid.userId\r\n        })\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        }\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/survey_answers/step5-7`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(resData => {\r\n                console.log(\"0008\", resData.data)\r\n                // setOptionLenght(resData.data)\r\n                if (resData.data > 5) {\r\n                    // alert(\"false\")\r\n                    console.log(\"morethan 5\")\r\n                    setnotification(\"!Oops sorry, you can select only five options\")\r\n                    setDisplay(true)\r\n                    // window.scrollTo(0, 0)\r\n                    setloading(0)\r\n                    return false\r\n                }\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        setloading(1)\r\n\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                // setOptionData(rwsOpt.data);\r\n\r\n                console.log(questionId, \"s\")\r\n\r\n                console.log(rwsOpt.data)\r\n                console.log(rwsOpt.data.length, \"d\")\r\n                // let halfwayPoint = rwsOpt.data.length / 2;\r\n                let halfwayPoint = rwsOpt.data;\r\n                console.log(halfwayPoint);\r\n                let column = rwsOpt.data;\r\n                // let columnA = rwsOpt.data.splice(0, halfwayPoint)\r\n                // let columnB = rwsOpt.data.splice(0)\r\n                setOptionDataCol(halfwayPoint);\r\n\r\n                if (column.length != inputListFinal1.length) {\r\n                    column.map((item, index) => {\r\n                        setinputListFinal1(inputListFinal1 => [...inputListFinal1, { option_id: null, range_val: 0, option: \"\", status: false }])\r\n                    })\r\n                    setloading(0)\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            })\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/option/opt/unfav/${resIdC}`, requestOptions)\r\n            .then(response4 => response4.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                // setOptionData(rwsOpt.data);\r\n                setloading(0)\r\n\r\n\r\n                console.log(questionId, \"s\")\r\n\r\n                console.log(rwsOpt.data)\r\n                console.log(rwsOpt.data.length, \"d\")\r\n                // let halfwayPoint = rwsOpt.data.length / 2;\r\n                let halfwayPoint = rwsOpt.data;\r\n                console.log(halfwayPoint);\r\n                // let columnA = rwsOpt.data.splice(0, halfwayPoint)\r\n                // let columnB = rwsOpt.data.splice(0)\r\n                let column2 = rwsOpt.data;\r\n                setOptionDataColUnfav(halfwayPoint);\r\n                // if (column2.length != inputListFinal2.length) {\r\n                //     column2.map((item, index) => {\r\n                //         setinputListFinal2(inputListFinal2 => [...inputListFinal2, { option_id: null, range_val: 0, option: \"\", status: false }])\r\n                //     })\r\n\r\n                // }\r\n\r\n\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            getSelectedOptions()\r\n            setloading(0)\r\n        })\r\n\r\n        // console.log(inputListFinal)\r\n\r\n    }, []);\r\n\r\n    if (loading !== 0) {\r\n        return <div className=\"loader\"> <CircularProgress /></div>\r\n    }\r\n\r\n\r\n    // if (inputListFinal2.length != 40) {\r\n    //     console.log(inputListFinal2.length)\r\n    //     return <div className=\"loader\"> <CircularProgress /></div>\r\n    // }\r\n\r\n\r\n    return (\r\n        <fieldset>\r\n            {console.log(inputListFinal2)}\r\n\r\n            <Modal\r\n                size=\"md\"\r\n                show={Display}\r\n                onHide={() => setDisplay(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-md\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Notification</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className=\"success text-center mt-5\">\r\n                    {/* <img style={{ height: \"80px\", width: \"80px\" }} src={Ico12} /> */}\r\n                    {/* <FaIconz.FaTimesCircle style={{ height: \"60px\", width: \"60px\" }} /> */}\r\n                </Modal.Body>\r\n\r\n                <Modal.Body className=\"success text-center text-danger bold h3\">{notification}</Modal.Body>\r\n                <Modal.Body className=\"success text-center text-black bold\" ><p style={{ cursor: 'pointer' }} onClick={() => setDisplay(false)} >Ok</p></Modal.Body>\r\n\r\n            </Modal>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    {/* <h2 className=\"steps\">70%</h2> */}\r\n                    <div className=\"steps\">\r\n                        <CircularProgressWithLabel size={70} data={uid.userId} value={5 * 10} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-card\">\r\n                <div className=\"row\">\r\n                    <p className=\"fs-title-m\">{question.replace(\"[FIRST NAME]\", first_name + \" \")}</p>\r\n\r\n                    <hr />\r\n                    <br />\r\n                    <br />\r\n\r\n                    {showError == true ? (<span className=\"text-center bold text-danger\">Please select only 5 options</span>) : null}\r\n                    <div className=\"col-12\">\r\n\r\n                        {/*<h2 class=\"fs-title\">[1-10 scale] Overall, how would you rate the (year/ quarter) [FIRST NAME] has had?</h2>*/}\r\n                        <table width=\"100%\" border={0} cellPadding={0} cellSpacing={0}>\r\n                            <tbody>\r\n                                <tr className=\"row p-5\">\r\n                                    <td className=\"col-6\" height={40} colSpan={2} align=\"center\" valign=\"top\"><strong className=\"font-sixe\">Favorable</strong></td>\r\n                                    <td className=\"col-6\" colSpan={2} align=\"center\" valign=\"top\"><strong className=\"font-sixe\">Unfavorable</strong></td>\r\n                                </tr>\r\n\r\n                                <div className=\"row justify-content-center\" style={{ width: \"110%\" }}>\r\n                                    <div className=\"col-6\">\r\n                                        <tr className='row '>\r\n                                            {OptionDataCol.map((item, i) => {\r\n                                                return (\r\n                                                    <div className='col-sm-6' >\r\n                                                        <div className=\"container\" >\r\n                                                            <div >\r\n                                                                <label>\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        name=\"fav\"\r\n                                                                        onChange={(e) => handleInputChange(e, i, item.option)}\r\n                                                                        // value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                        id={item.id}\r\n                                                                        checked={inputListFinal[i].favstatus}\r\n                                                                    />\r\n                                                                    <span className=\"sub-q min-height\"> {item.option}</span>\r\n\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </tr>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6\">\r\n                                        <tr className='row' >\r\n                                            {OptionDataColUnfav.map((item, i) => {\r\n                                                return (\r\n                                                    <div className='col-sm-6' >\r\n                                                        <div className=\"container\" >\r\n                                                            <div >\r\n                                                                <label>\r\n\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        name=\"unf\"\r\n                                                                        onChange={(e) => handleInputChange(e, i, item.option)}\r\n                                                                        // value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                        id={item.id}\r\n                                                                        checked={inputListFinal[i].unfstatus}\r\n\r\n                                                                    />\r\n                                                                    <span className=\"unf sub-q min-height\"> {item.option}</span>\r\n\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </tr>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </tbody></table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"button btn-align-step2\">\r\n                <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                <input type=\"button\" onClick={handleSubmit} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport CircularProgressWithLabel from '../../../components/CircularProgressWithLabel';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [inputValue, setinputValue] = useState([{ inpV: \"\" }])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n\r\n    const [OptData, setOptData] = useState(\"\")\r\n    const [OptionVal, setOptionVal] = useState(\"\")\r\n    const [impVal, setimpVal] = useState(0)\r\n    const [loading, setloading] = useState(0)\r\n    const [notification, setnotification] = useState(false);\r\n    const [Display, setDisplay] = useState(false);\r\n    const [inputListFinal, setInputListFinal] = useState([{ comment: \"\" }]);\r\n    const [RecordeData, setRecordeData] = useState()\r\n\r\n    // let uid.userId = 1;\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        const { name, value } = e.target;\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value\", list);\r\n        list[0][name] = value;\r\n        setInputListFinal(list);\r\n\r\n        // if(updId){\r\n        //     alert(updId)\r\n        // }else{\r\n        //     alert(\"erro\")\r\n\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n\r\n        if (inputListFinal[0].comment == \"\") {\r\n            setnotification(\"Please Type Your Comment\")\r\n            setDisplay(true)\r\n            return false\r\n        }\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            feature7: inputListFinal,\r\n            updated_by: uid.userId\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.status == 200) {\r\n                    console.log(\"Values Submitted Succesfully\");\r\n                    GetAllRecords();\r\n                    props.next(values);\r\n                    console.log(resData);\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n\r\n    if (loading === 1) {\r\n        return <div className='loader'><CircularProgress /></div>\r\n    }\r\n\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[7].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[7].id)\r\n                console.log(result.data[7].id)\r\n                setquestion(result.data[7].question);\r\n                // getOptions(result.data[7].id);\r\n                // }\r\n\r\n            })\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                console.log(result.data)\r\n                setRecordeData(result.data)\r\n                console.log(result.data.feature)\r\n\r\n                let MyValues = result.data;\r\n                // if (MyValues.length > 0) {\r\n                //   setedituser(true);\r\n                //   setUpid(result.data[0].id);\r\n                // }\r\n                console.log(\"Edit Values\", MyValues);\r\n                MyValues.map((x, i) => {\r\n                    console.log(i)\r\n                    let Feature = eval(x.feature7);\r\n                    // console.log(\"feature\", Feature);\r\n                    if (Feature) {\r\n                        setInputListFinal(Feature)\r\n                    }\r\n                })\r\n\r\n\r\n\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        // console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw1 = JSON.stringify({\r\n            surveyor_id: uid.userId,\r\n            question_id: resIdC,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw1,\r\n            redirect: \"follow\",\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/survey_answers_same`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n\r\n                // console.log(questionId, \"jj\")\r\n                if (rwsOpt.data) {\r\n                    console.log(rwsOpt.data.id)\r\n                    setOptData(rwsOpt.data.id);\r\n                    setOptionVal(rwsOpt.data.answer)\r\n                    setimpVal(rwsOpt.data.answer)\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <fieldset>\r\n\r\n            <Modal\r\n                size=\"md\"\r\n                show={Display}\r\n                onHide={() => setDisplay(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-md\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Notification</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className=\"success text-center mt-5\">\r\n                    {/* <img style={{ height: \"80px\", width: \"80px\" }} src={Ico12} /> */}\r\n                    {/* <FaIconz.FaTimesCircle style={{ height: \"60px\", width: \"60px\" }} /> */}\r\n                </Modal.Body>\r\n\r\n                <Modal.Body className=\"success text-center text-danger bold h3\">{notification}</Modal.Body>\r\n                <Modal.Body className=\"success text-center text-black bold\" ><p style={{ cursor: 'pointer' }} onClick={() => setDisplay(false)} >Ok</p></Modal.Body>\r\n\r\n            </Modal>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    {/* <h2 className=\"steps\">80%</h2> */}\r\n                    <div className=\"steps\">\r\n                        <CircularProgressWithLabel size={70} data={uid.userId} value={5 * 10} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-card\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <p className=\"fs-title-m\">{question.replace(\"[FIRST NAME]\", first_name + \" \")}</p>\r\n                        <hr />\r\n                        <br />\r\n                        <br />\r\n                        {/* <p>Before we let you go, is there anything else on your mind that you’d like to share specific to the performance, strengths, or improvement opportunities for [FIRST NAME]. </p> */}\r\n                        <div className=\"card pad-card\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"font-sixe\">Write a Comment </h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"basic-form\">\r\n                                    <div className=\"mb-3\">\r\n                                        <textarea className=\"form-control\" value={inputListFinal[0].comment} rows={4} id=\"comment\" placeholder=\"type comment here....\" name=\"comment\" onChange={handleInputChange} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n                <div className=\"button btn-align-step2\">\r\n                    <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                    <input type=\"button\" onClick={handleSubmit} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Step1 from \"../steps/Step5\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { CircularProgressbar, buildStyles, CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport { Chart } from \"react-google-charts\";\r\n// import '../../../assets/css/pdf_design.css';\r\n// import '../../../assets/css/pdfFont.css';\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Box, Card, Container } from '@material-ui/core';\r\n// import logo from \"../assets/images/logo-wt.png\";\r\nimport logo_icon from \"../../../assets/images/deflogo.png\";\r\nimport star_img from \"../../../assets/images/star_img.jpg\";\r\nimport Star from '@material-ui/icons/StarRate';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DonutChart from '../../../components/DonutChart';\r\nimport GraphVerticalBars from '../../../components/GraphVerticalBars';\r\nimport CircularProgressWithLabel from '../../../components/CircularProgressWithLabel';\r\n\r\nexport default function Step9(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const [DisplayDiv, setDisplayDiv] = useState(false);\r\n    const [pdfShowDes, setpdfShowDes] = useState(0);\r\n    const history = useHistory();\r\n    const [beliverName, setbeliverName] = useState(\"\");\r\n    const [SurveyVal, setSurveyVal] = useState({});\r\n    const [feat, setfeat] = useState();\r\n\r\n\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const currDateForm = monthNames[new Date().getMonth()].substring(0, 3) + \"-\" + monthNames[new Date().getMonth() + 1].substring(0, 3) + \" \" + new Date().getFullYear();\r\n\r\n    const exportPDFWithMethod = () => {\r\n        setpdfShowDes(1);\r\n        setTimeout(() => {\r\n            // alert(pdfShowDes);\r\n            if (pdfExportComponent.current) {\r\n                pdfExportComponent.current.save();\r\n\r\n                setTimeout(() => {\r\n                    setpdfShowDes(0);\r\n                }, 2000)\r\n            }\r\n        }, 2000)\r\n\r\n    };\r\n    const pdfExportComponent = React.useRef(null);\r\n\r\n\r\n\r\n    const [impVal2Devided1, set_impVal2Devided1] = useState()\r\n    const [impVal2Devided2, set_impVal2Devided2] = useState()\r\n\r\n    const [survey_count, set_survey_count] = useState()\r\n    const [managers_length, set_managers_length] = useState()\r\n    const [company_length, set_company_length] = useState()\r\n    const [inputListFinal, setInputListFinal] = useState([]);\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [viewModal, setviewModal] = useState(false);\r\n\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const [feedbackData, setfeedbackData] = useState()\r\n\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\");\r\n    const [question, setquestion] = useState([]);\r\n    const [answer0, setanswer0] = useState([])\r\n    const [answer1, setanswer1] = useState([])\r\n    const [answer2, setanswer2] = useState([])\r\n    const [answer3, setanswer3] = useState([])\r\n    const [answer4, setanswer4] = useState([])\r\n    const [answer5, setanswer5] = useState([])\r\n    const [answer6, setanswer6] = useState([])\r\n\r\n    const [options0, setoptions0] = useState([])\r\n    const [options1, setoptions1] = useState([])\r\n    const [options2, setoptions2] = useState([])\r\n    const [options3, setoptions3] = useState([])\r\n    const [options4, setoptions4] = useState([])\r\n    const [options5, setoptions5] = useState([])\r\n    const [options6, setoptions6] = useState([])\r\n    const [heights, setheights] = useState(\"10rem\")\r\n\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n\r\n    const [OptData, setOptData] = useState(\"\")\r\n    const [OptionVal, setOptionVal] = useState(\"\")\r\n    const [impVal, setimpVal] = useState(0)\r\n    const [impVal2, setimpVal2] = useState(0)\r\n    const [impVal3, setimpVal3] = useState(0)\r\n    const [impVal4, setimpVal4] = useState(0)\r\n    const [impVal5, setimpVal5] = useState(0)\r\n    const [impVal6, setimpVal6] = useState(0)\r\n    const [impVal7, setimpVal7] = useState(0)\r\n    const [impVal8, setimpVal8] = useState(0)\r\n    const [impVal9, setimpVal9] = useState(0)\r\n\r\n    const [Val, setVal] = useState(\"\")\r\n    const [Val2, setVal2] = useState(\"\")\r\n    const [Val3, setVal3] = useState(\"\")\r\n    const [Val4, setVal4] = useState(\"\")\r\n    const [Val5, setVal5] = useState(\"\")\r\n    const [Val6, setVal6] = useState(\"\")\r\n    const [Val7, setVal7] = useState(\"\")\r\n    const [Val8, setVal8] = useState(\"\")\r\n    const [Val9, setVal9] = useState(\"\")\r\n\r\n    const [ans, setans] = useState([])\r\n\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\r\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\r\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\r\n    const [OptionDataCol5, setOptionDataCol5] = useState([])\r\n    const [OptionDataCol5_2, setOptionDataCol5_2] = useState([])\r\n    const [OptionDataCol5_3, setOptionDataCol5_3] = useState([])\r\n    const [RecordeData, setRecordeData] = useState([])\r\n\r\n    const [ReportData, setReportData] = useState({})\r\n    const [step_1, setstep_1] = useState()\r\n    const [step_2, setstep_2] = useState()\r\n    const [step_3, setstep_3] = useState()\r\n    const [step_4, setstep_4] = useState()\r\n    const [cal, setcal] = useState(\"\")\r\n    const [list1, setlist1] = useState([])\r\n    const [SurveyLength, setSurveyLength] = useState()\r\n\r\n    const [data, setData] = useState({\r\n        // inputVal: 0,\r\n        last_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        que1: \"\",\r\n    });\r\n\r\n\r\n\r\n    const percentage = {\r\n        percentage_1: parseInt(impVal * 10) + impVal * 10 + 20 / impVal * 10,\r\n        percentage_2: parseInt(impVal * 10),\r\n        percentage_3: 70,\r\n        percentage_4: 90,\r\n    }\r\n\r\n    const percentage2 = {\r\n        percentage_1: impVal * 10,\r\n        percentage_2: parseInt(impVal * 10) + impVal * 10 + 20 / impVal * 10,\r\n        percentage_3: 50,\r\n        percentage_4: 150,\r\n    }\r\n\r\n    const val1 = \"abc\";\r\n\r\n    const data_g = [\r\n        [\"Task\", \"Hours per Day\"],\r\n        [\"Work\", parseInt(impVal * 10) + parseInt(impVal) * 10 + 20 / parseInt(impVal) * 10],\r\n        [\"Eat\", parseInt(impVal * 10)],\r\n        [\"Commute\", 6],\r\n        [\"Sleep\", 7],\r\n    ];\r\n\r\n    const options = {\r\n        // title: \"My Daily Activities\",\r\n        legend: \"none\",\r\n        // legend: \"none\",\r\n        // pieSliceText: \"label\",\r\n        title: \"Swiss Language Use (100 degree rotation)\",\r\n        // pieStartAngle: 100,\r\n        slices: {\r\n            0: { color: \"rgb(214,225,185)\" },\r\n            1: { color: \"rgb(53,98,136)\" },\r\n            2: { color: \"rgb(55,55,94)\" },\r\n            3: { color: \"rgb(236,101,94)\" },\r\n\r\n        },\r\n    };\r\n\r\n\r\n    const colorOptions = {\r\n        slices: {\r\n            0: { color: \"rgb(168,26,12)\" },\r\n            1: { color: \"rgb(55,55,94)\" },\r\n            2: { color: \"rgb(53,98,136)\" },\r\n            3: { color: \"rgb(170,207,221)\" },\r\n        },\r\n    }\r\n\r\n\r\n    const options_2 = {\r\n        // title: \"My Daily Activities\",\r\n        legend: \"none\",\r\n        // legend: \"none\",\r\n        // pieSliceText: \"label\",\r\n        title: \"Shubham knows it\",\r\n        // pieStartAngle: 100,\r\n        slices: {\r\n            0: { color: \"rgb(214,225,185)\" },\r\n            1: { color: \"rgb(53,98,136)\" },\r\n            2: { color: \"rgb(55,55,94)\" },\r\n            3: { color: \"rgb(236,101,94)\" },\r\n\r\n        },\r\n    };\r\n\r\n\r\n\r\n    const checkUserHosting = async (hostEmail, callback) => {\r\n        let managersData = await fetch(`http://208.109.14.182:9000/masters/company/managers/${uid.companyId}`)\r\n        let companyData = await fetch(`http://208.109.14.182:9000/masters/company`)\r\n\r\n\r\n        //use string literals\r\n        let managersDataJson = await managersData.json();\r\n        let companyDataJson = await companyData.json();\r\n\r\n        return [managersDataJson, companyDataJson];\r\n    }\r\n\r\n\r\n    const ManagersLength = async () => {\r\n        var myHeaders4 = new Headers();\r\n        var requestOptions4 = {\r\n            method: 'GET',\r\n            headers: myHeaders4,\r\n            redirect: 'follow'\r\n        };\r\n\r\n\r\n        fetch(`http://208.109.14.182:9000/masters/company/managers/${uid.companyId}`, requestOptions4)\r\n            .then(response => response.json())\r\n            .then(result4 => {\r\n                // console.log(result4,\"res4\")\r\n\r\n                if (result4.status == 200) {\r\n                    // setlistRecord(result4.data);\r\n                    // console.log(result4 + \"hhhh\")\r\n                    // console.log(result4.data, \"hhs\")\r\n                    set_managers_length(result4.data.length)\r\n\r\n\r\n                    fetch(`http://208.109.14.182:9000/masters/company`, requestOptions4)\r\n                        .then(response => response.json())\r\n                        .then(result5 => {\r\n                            // setlistRecord(result5.data);\r\n                            if (result5.status == 200) {\r\n                                // console.log(result5.data, \"company lenght\")\r\n                                set_company_length(result5.data.length)\r\n\r\n\r\n                            }\r\n                        })\r\n                        .catch(error => console.log('error', error));\r\n\r\n                }\r\n\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n\r\n    }\r\n\r\n    const impValFn = (val, valmed, intoVal) => {\r\n        return parseFloat(val <= 1 ? valmed * intoVal : val * intoVal)\r\n    }\r\n\r\n    const GetAllRecords = async () => {\r\n        // var question_id = q_id;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n\r\n        fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.status == 200) {\r\n\r\n                    // console.log(result.data)\r\n                    // let aa = JSON.parse(result.data[0])\r\n                    console.log(result.data[0])\r\n                    setfeedbackData(result.data)\r\n\r\n                    var myHeaders2 = new Headers();\r\n                    var requestOptions2 = {\r\n                        method: 'GET',\r\n                        headers: myHeaders2,\r\n                        redirect: 'follow'\r\n                    };\r\n\r\n                    fetch(`http://208.109.14.182:9000/masters/collect_feedback/email/${result.data[0].user_email}`, requestOptions2)\r\n                        .then(response => response.json())\r\n                        .then(result1 => {\r\n                            // setlistRecord(result1.data);\r\n                            if (result1.status == 200) {\r\n                                // console.log(result1)\r\n                                // console.log(result.data[0])\r\n                                // console.log(result1.data.length, \"hh\")\r\n                                set_survey_count(result1.data.length)\r\n\r\n\r\n\r\n                                fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n                                    .then(response => response.json())\r\n                                    .then(result2 => {\r\n                                        // setlistRecord(result2.data);\r\n                                        if (result2.status == 200) {\r\n                                            // console.log(result2.data, \"allQuestionsByType\")\r\n\r\n                                            // console.log(result2.data[0], \"hh\")\r\n                                            let qID = result2.data[0].id;\r\n                                            setquestionId(qID);\r\n                                            // console.log(result2.data[0].id)\r\n                                            // console.log(result2.data[0].id)\r\n                                            setquestion(result2.data[0].question);\r\n                                            // getOptions(result.data[0].id);\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: 5,\r\n                                                question_id: result2.data[0].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.data) {\r\n                                                        // console.log(result3.data.id)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.id);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        console.log(\"result3\" + JSON.stringify(result3))\r\n                                                        let step = 1\r\n                                                        setVal(result3)\r\n                                                        setimpVal(result3.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: 5,\r\n                                                question_id: result2.data[1].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n                                                    // console.log(result3)\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.data) {\r\n                                                        let halfwayPoint = result3.data.length / 2;\r\n                                                        let Devided1 = result3.data.splice(0, halfwayPoint)\r\n                                                        let Devided2 = result3.data.splice(0, halfwayPoint)\r\n                                                        set_impVal2Devided1(Devided1)\r\n                                                        set_impVal2Devided2(Devided2)\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3_1 => {\r\n                                                    // setlistRecord(result3_1.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3_1.data) {\r\n                                                        // console.log(result3_1.data)\r\n                                                        setVal2(result3_1)\r\n                                                        setimpVal2(result3_1.data)\r\n                                                        console.log(result3_1.data)\r\n                                                        console.log(result3_1)\r\n\r\n                                                        let step = 2;\r\n                                                        let myValues = result3_1.data;\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: 5,\r\n                                                question_id: result2.data[2].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.status == 200) {\r\n                                                        console.log(result3)\r\n\r\n                                                        // console.log(result3.data)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.ids);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        setimpVal3(result3.data)\r\n                                                        setVal3(result3)\r\n\r\n                                                        console.log(result3)\r\n                                                        // console.log(impVal2)\r\n                                                        // console.log(impVal2[0])\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: 5,\r\n                                                question_id: result2.data[3].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.status == 200) {\r\n                                                        // console.log(result3.data)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.ids);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        setVal4(result3)\r\n                                                        setimpVal4(result3.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: 5,\r\n                                                question_id: result2.data[4].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.data) {\r\n                                                        // console.log(result3.data)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.ids);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        setimpVal5(result3.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: 5,\r\n                                                question_id: result2.data[6].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result4 => {\r\n                                                    // setlistRecord(result4.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result4.data) {\r\n                                                        // console.log(result4.data)\r\n                                                        // console.log(result4.data.answer)\r\n\r\n                                                        // setOptData(result4.data.ids);\r\n                                                        // setOptionVal(result4.data.answer)\r\n                                                        setimpVal7(result4.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: 5,\r\n                                                question_id: result2.data[7].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_answers_same`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result5 => {\r\n                                                    // setlistRecord(result5.data);\r\n                                                    // console.log(result5.data + \"ccc\")\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result5.data) {\r\n                                                        // console.log(result5.data.answer + \"ccc\")\r\n                                                        // console.log(result5.data.answer)\r\n\r\n                                                        // setOptData(result5.data.ids);\r\n                                                        // setOptionVal(result5.data.answer)\r\n                                                        setimpVal8(result5.data.answer)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: 5,\r\n                                                question_id: result2.data[5].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.data) {\r\n                                                        // console.log(result3.data)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.ids);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        setimpVal6(result3.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n                                            var myHeaders4 = new Headers();\r\n                                            var requestOptions4 = {\r\n                                                method: 'GET',\r\n                                                headers: myHeaders4,\r\n                                                redirect: 'follow'\r\n                                            };\r\n\r\n                                            // console.log(result.data[0].company_id)\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/company/managers/${result.data[0].company_id}`, requestOptions4)\r\n                                                .then(response => response.json())\r\n                                                .then(result4 => {\r\n                                                    // console.log(result4,\"res4\")\r\n\r\n                                                    if (result4.status == 200) {\r\n                                                        // setlistRecord(result4.data);\r\n                                                        // console.log(result4)\r\n                                                        // console.log(result4.data, \"hhs\")\r\n                                                        // set_managers_length(result4.data.length)\r\n\r\n\r\n                                                        fetch(`http://208.109.14.182:9000/masters/company`, requestOptions4)\r\n                                                            .then(response => response.json())\r\n                                                            .then(result5 => {\r\n                                                                // setlistRecord(result5.data);\r\n                                                                if (result5.status == 200) {\r\n                                                                    // console.log(result5.data, \"company lenght\")\r\n                                                                    set_company_length(result5.data.length)\r\n\r\n                                                                    // console.log(result, \"eer\")\r\n                                                                    // console.log(result1)\r\n                                                                    // console.log(result2)\r\n                                                                    // console.log(result4)\r\n                                                                    // console.log(result5)\r\n                                                                    // exportPDFWithMethod();\r\n\r\n                                                                }\r\n                                                            })\r\n                                                            .catch(error => console.log('error', error));\r\n\r\n                                                    }\r\n\r\n                                                })\r\n                                                .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n                                        }\r\n\r\n                                    })\r\n                                    .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n\r\n                            }\r\n\r\n                        })\r\n                        .catch(error => console.log('error', error));\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        ManagersLength();\r\n\r\n        console.log(colorOptions)\r\n        GetSurveyFeedRec()\r\n        GetAllRecords().then(() => {\r\n            setTimeout(() => {\r\n                // exportPDFWithMethod()\r\n            }, 2000);\r\n        })\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    const surveyMean = (value) => {\r\n        // console.log(value)\r\n        // console.log(`${value} / ${survey_count} = ${value/survey_count}`)\r\n        let survey_mean = value / survey_count;\r\n        // let internal_benchmark = survey_mean * survey_count / managers_length;\r\n        // let external_benchmark = internal_benchmark * survey_count / company_length;\r\n        return survey_mean\r\n    }\r\n\r\n\r\n\r\n    const internalBenchmark = (value) => {\r\n        // console.log(value)\r\n        // console.log(`${value} / ${survey_count}* ${survey_count} / ${managers_length}`)\r\n        let internal_benchmark = value / survey_count * survey_count / managers_length;\r\n        return internal_benchmark\r\n    }\r\n\r\n    const externalBenchmark = (value) => {\r\n        // console.log(`${value} / ${survey_count} * ${survey_count} / ${managers_length}* ${survey_count} / ${company_length}`)\r\n        let external_benchmark = value / survey_count * survey_count / managers_length * survey_count / company_length;\r\n        return external_benchmark\r\n    }\r\n\r\n    const data_g_1 = [\r\n        [\"Task\", \"Hours per Day\"],\r\n        [\"Self Assessment\", parseInt(impVal * 10)],\r\n        [\"Survey Mean\", surveyMean(impVal * 10)],\r\n        [\"Internal Benchmark\", internalBenchmark(impVal * 10)],\r\n        [\"External Benchmark\", externalBenchmark(impVal * 10)],\r\n    ];\r\n\r\n\r\n    function checkbtn() {\r\n        console.log(cal)\r\n        console.log(list1)\r\n\r\n    }\r\n\r\n    const calculate = (val) => {\r\n        console.log(val)\r\n        var featSum = 0\r\n        // featSum += parseInt(val[0].range_val)\r\n        // setcal([...cal, featSum])\r\n\r\n        // setcal((prev) => ({ ...prev, ...newData }));\r\n\r\n        console.log(cal)\r\n        console.log(featSum)\r\n\r\n    }\r\n\r\n    // const getActivity = async () => {\r\n    //     let jsonData = await checkUserHosting();\r\n    //     //now you can directly use jsonData\r\n    // }\r\n\r\n    const GetSurveyFeedRec = async () => {\r\n        // console.log(managers_length ? managers_length : 0)\r\n        let jsonData = await checkUserHosting();\r\n\r\n        // console.log(getActivity())\r\n\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        console.log(uid)\r\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/company/${uid.companyId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result.data.length)\r\n                console.log(result.data)\r\n                let MyValues = result.data;\r\n                console.log(\"Edit Values\", MyValues);\r\n                if (MyValues) {\r\n\r\n                    setSurveyLength(MyValues.length)\r\n\r\n                }\r\n                // console.log(MyValues.reduce(add, 0))\r\n                // const sum = MyValues.reduce(add, 0)\r\n\r\n                // console.log(sum)\r\n\r\n\r\n                async function calco(val, len) {\r\n                    let jsonData = await checkUserHosting();\r\n                    let manager_count = jsonData[0].totalItems;\r\n                    let company_count = jsonData[1].totalItems;\r\n\r\n                    console.log(manager_count)\r\n                    let surveyMean = val / manager_count;\r\n                    let internalBenchmark = surveyMean * len / manager_count;\r\n                    let externalBenchmark = internalBenchmark * len / company_count;\r\n\r\n                    return { surveyMean, internalBenchmark, externalBenchmark }\r\n                }\r\n\r\n                async function sumArray(array) {\r\n                    let sum = 0 // the sum is initialed to 0\r\n\r\n                    /* js arrays are zero-index based\r\n                    ourArray.length = 5, the initialization block is set to 0.\r\n                    the last item is index 4 that is < 5 (what we define in the condition block)\r\n                    */\r\n                    // var featSum = []\r\n                    var [feature1_sum0] = [0];\r\n                    var [feature1Sum0, feature1Sum1, feature1Sum2, feature1Sum3, feature1Sum4, feature1Sum5, feature1Sum6, feature1Sum7, feature1Sum8, feature1Sum9] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n                    var [feature2Sum0, feature2Sum1, feature2Sum2, feature2Sum3, feature2Sum4] = [0, 0, 0, 0, 0]\r\n                    var [feature3Sum0, feature3Sum1, feature3Sum2] = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\r\n                    var [feature5_sum0] = [0];\r\n\r\n                    var [featArr0, featArr1, featArr2, featArr3, featArr4] = [[], [], [], [], []]\r\n                    // var featArr1 = []\r\n\r\n                    for (let i = 0; i < array.length; i++) {\r\n                        // take every item in the array and add it to sum variable\r\n                        console.log(eval(array[i].feature)[0].range_val)\r\n                        // console.log(eval(array[i].feature1))\r\n                        var feat = eval(array[i].feature)\r\n                        var feat1 = eval(array[i].feature1)\r\n                        var feat2 = eval(array[i].feature2)\r\n                        var feat3 = eval(array[i].feature3)\r\n                        // var feat4 = eval(array[i].feature4)\r\n                        var feat5 = eval(array[i].feature5)\r\n                        // var feat6 = eval(array[i].feature6)\r\n                        // var feat7 = eval(array[i].feature7)\r\n\r\n                        // featSum += parseInt(eval(array[i].feature)[0].range_val)\r\n                        // for (var a = 0; a < 4; a++) {\r\n                        console.log(feat[0].range_val)\r\n\r\n                        feature1_sum0 += parseInt(feat[0].range_val)\r\n\r\n                        feature1Sum0 += parseInt(feat1[0].range_val)\r\n                        feature1Sum1 += parseInt(feat1[1].range_val)\r\n                        feature1Sum2 += parseInt(feat1[2].range_val)\r\n                        feature1Sum3 += parseInt(feat1[3].range_val)\r\n                        feature1Sum4 += parseInt(feat1[4].range_val)\r\n                        feature1Sum5 += parseInt(feat1[5].range_val)\r\n                        feature1Sum6 += parseInt(feat1[6].range_val)\r\n                        feature1Sum7 += parseInt(feat1[7].range_val)\r\n                        feature1Sum8 += parseInt(feat1[8].range_val)\r\n                        feature1Sum9 += parseInt(feat1[9].range_val)\r\n\r\n\r\n                        feature2Sum0 += parseInt(feat2[0].range_val)\r\n                        feature2Sum1 += parseInt(feat2[1].range_val)\r\n                        feature2Sum2 += parseInt(feat2[2].range_val)\r\n                        feature2Sum3 += parseInt(feat2[3].range_val)\r\n                        feature2Sum4 += parseInt(feat2[4].range_val)\r\n\r\n                        feature3Sum0[0] += parseInt(feat3[0].range_val)\r\n                        feature3Sum0[1] += parseInt(feat3[1].range_val)\r\n                        feature3Sum0[2] += parseInt(feat3[2].range_val)\r\n                        feature3Sum1[0] += parseInt(feat3[0].range_val1)\r\n                        feature3Sum1[1] += parseInt(feat3[1].range_val1)\r\n                        feature3Sum1[2] += parseInt(feat3[2].range_val1)\r\n                        feature3Sum2[0] += parseInt(feat3[0].range_val2)\r\n                        feature3Sum2[1] += parseInt(feat3[1].range_val2)\r\n                        feature3Sum2[2] += parseInt(feat3[2].range_val2)\r\n\r\n\r\n                        feature5_sum0 += parseInt(feat5[0].range_val)\r\n\r\n\r\n\r\n                        // feature3Sum1 += parseInt(feat3[1].range_val)\r\n                        // feature3Sum2 += parseInt(feat3[2].range_val)\r\n\r\n\r\n\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n                    // console.log(feature3Sum0[1])\r\n\r\n                    // console.log(feature3Sum1)\r\n                    // console.log(feature3Sum2)\r\n\r\n                    console.log(jsonData)\r\n                    let survey_mean = feature1_sum0 / array.length;\r\n                    let internal_benchmark = (survey_mean * array.length) / 2;\r\n                    let external_benchmark = (survey_mean * array.length) / 2;\r\n                    let arraylength = array.length;\r\n\r\n                    console.log(await calco(feature1Sum0, arraylength))\r\n                    featArr0.push(await calco(feature1Sum0, arraylength))\r\n\r\n                    featArr1.push(await calco(feature1Sum0, arraylength))\r\n                    featArr1.push(await calco(feature1Sum1, arraylength))\r\n                    featArr1.push(await calco(feature1Sum2, arraylength))\r\n                    featArr1.push(await calco(feature1Sum3, arraylength))\r\n                    featArr1.push(await calco(feature1Sum4, arraylength))\r\n                    featArr1.push(await calco(feature1Sum5, arraylength))\r\n                    featArr1.push(await calco(feature1Sum6, arraylength))\r\n                    featArr1.push(await calco(feature1Sum7, arraylength))\r\n                    featArr1.push(await calco(feature1Sum8, arraylength))\r\n                    featArr1.push(await calco(feature1Sum9, arraylength))\r\n\r\n\r\n                    featArr2.push(await calco(feature2Sum0, arraylength))\r\n                    featArr2.push(await calco(feature2Sum1, arraylength))\r\n                    featArr2.push(await calco(feature2Sum2, arraylength))\r\n                    featArr2.push(await calco(feature2Sum3, arraylength))\r\n                    featArr2.push(await calco(feature2Sum4, arraylength))\r\n\r\n\r\n                    console.log(await calco(feature3Sum0[0], arraylength))\r\n                    console.log(await calco(feature3Sum0[1], arraylength))\r\n                    console.log(await calco(feature3Sum0[2], arraylength))\r\n\r\n                    console.log(await calco(feature3Sum1[0], arraylength))\r\n                    console.log(await calco(feature3Sum1[1], arraylength))\r\n                    console.log(await calco(feature3Sum1[2], arraylength))\r\n\r\n\r\n                    console.log(await calco(feature3Sum2[0], arraylength))\r\n                    console.log(await calco(feature3Sum2[1], arraylength))\r\n                    console.log(await calco(feature3Sum2[2], arraylength))\r\n\r\n                    featArr3.push([await calco(feature3Sum0[0], arraylength), await calco(feature3Sum1[0], arraylength), await calco(feature3Sum2[0], arraylength)])\r\n                    featArr3.push([await calco(feature3Sum0[1], arraylength), await calco(feature3Sum1[1], arraylength), await calco(feature3Sum2[1], arraylength)])\r\n                    featArr3.push([await calco(feature3Sum0[2], arraylength), await calco(feature3Sum1[2], arraylength), await calco(feature3Sum2[2], arraylength)])\r\n\r\n\r\n                    featArr4.push(await calco(feature5_sum0, arraylength))\r\n\r\n\r\n                    // featArr3.push([feature3Sum0[0], feature3Sum0[1], feature3Sum0[2]])\r\n                    // featArr3.push([feature3Sum1[0], feature3Sum1[1], feature3Sum1[2]])\r\n                    // featArr3.push([feature3Sum2[0], feature3Sum2[1], feature3Sum2[2]])\r\n\r\n                    // console.log(\"fatSum\" + featSum1) // 11\r\n                    // console.log(sum) // 11\r\n                    // return sum\r\n                    // return sum\r\n                    console.log(featArr0) // 11\r\n                    console.log(featArr1) // 11\r\n                    console.log(featArr2) // 11\r\n                    console.log(featArr3) // 11\r\n                    console.log(featArr4) // 11\r\n\r\n\r\n\r\n                    return [featArr0, featArr1, featArr2, featArr3, featArr4]\r\n\r\n                }\r\n                //   console.log(add(3,2))\r\n\r\n                sumArray(MyValues).then((result) => {\r\n                    if (result.length == 5) {\r\n                        setlist1(result)\r\n                        console.log(result)\r\n                    }\r\n                    // setfeat(featArr0)\r\n                    // setlist1(list1 => [...list1, featArr0])\r\n                    // setlist1(list1 => [...list1, featArr1])\r\n                    // setlist1(list1 => [...list1, featArr2])\r\n                    // setlist1(list1 => [...list1, featArr3])\r\n                    // setlist1(list1 => [...list1, featArr4])\r\n                }); // logs 11\r\n\r\n\r\n\r\n\r\n            })\r\n\r\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                console.log(result.data)\r\n                setRecordeData(result.data)\r\n                console.log(result.data.feature)\r\n\r\n                let MyValues = result.data;\r\n                console.log(\"Edit Values\", MyValues);\r\n                MyValues.map((x, i) => {\r\n                    var Feature = eval(x.feature);\r\n                    var Feature1 = eval(x.feature1);\r\n                    var Feature2 = eval(x.feature2);\r\n                    var Feature3 = eval(x.feature3);\r\n                    var Feature4 = eval(x.feature4);\r\n                    var Feature5 = eval(x.feature5);\r\n                    var Feature6 = eval(x.feature6);\r\n                    var Feature7 = eval(x.feature7);\r\n\r\n\r\n\r\n                    var optionVal1 = Feature4.filter(({ status }) => status === true)\r\n                    var optionVal2 = Feature6.filter(({ favstatus }) => favstatus === true)\r\n\r\n                    console.log(optionVal1)\r\n\r\n                    if (Feature) {\r\n                        console.log(\"feature\", Feature);\r\n                        // setInputListFinal([Feature],[Feature1])\r\n                        setInputListFinal(inputListFinal => [...inputListFinal, { Feature, Feature1, Feature2, Feature3, Feature4, Feature5, Feature6, Feature7 }])\r\n\r\n                    }\r\n                    if (optionVal1) {\r\n                        console.log(\"feature\", Feature);\r\n                        // setInputListFinal([Feature],[Feature1])\r\n                        setInputListFinal(inputListFinal => [...inputListFinal, { optionVal1 }])\r\n\r\n                    }\r\n\r\n                    if (optionVal2) {\r\n                        console.log(\"feature\", Feature);\r\n                        // setInputListFinal([Feature],[Feature1])\r\n                        setInputListFinal(inputListFinal => [...inputListFinal, { optionVal2 }])\r\n\r\n                    }\r\n\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n           \r\n\r\n            {/* {console.log(list1.length > 0 ? list1 : null)} */}\r\n\r\n            {DisplayDiv && list1.length == 5 ? (\r\n                <>\r\n\r\n\r\n                    {console.log(inputListFinal)}\r\n                    {console.log(list1)}\r\n\r\n                    {/* <Pdf_page1 /> */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\" style={{ padding: \"25px 0px 0px 25px\" }} >\r\n                                <div >\r\n                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n\r\n                                    <div style={{ position: \"relative\", top: \"58px\", left: \"14px\", fontSize: \"40px\", }}>\r\n\r\n                                        <div className=\"square_bar\"></div>\r\n                                        <div className='page_left_header' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                            <span>Overall</span><br>\r\n                                            </br><span>Performance</span>\r\n                                        </div>\r\n                                        <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                            <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                            </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                        </div>\r\n                                        <div className='row p-5' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", border: \"0px solid black\", width: \"100%\", position: \"relative\", left: \"5%\", top: \"-40px\" }}>\r\n                                            {console.log(inputListFinal)}\r\n\r\n\r\n                                            {/* {inputListFinal[0].Feature.map((item, key) => {\r\n                                                    console.log(item)\r\n                                                })} */}\r\n\r\n                                            {/* {inputListFinal[0].Feature1.map((item, key) => {\r\n                                                    console.log(item)\r\n                                                })} */}\r\n\r\n\r\n                                            {inputListFinal[0].Feature.map((item, key) => {\r\n                                                // { console.log(item) }\r\n\r\n                                                return (\r\n                                                    <>\r\n                                                        <div className='col-2'>\r\n                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                    <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].surveyMean).toFixed(1)}</span><br />\r\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Survey</span><br />\r\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Mean</span>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div style={{ padding: impValFn(list1[key][0].surveyMean, 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[0].color }} >\r\n                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className='col-2' style={{ margin: \"0px 18px 0px 18px\" }}>\r\n                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                    <span style={{ fontSize: \"20px\", }}>{Math.ceil(item.range_val).toFixed(1)}</span><br />\r\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Self</span><br />\r\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Assessment</span>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            {/* Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) : 92 */}\r\n                                                            <div style={{ padding: impValFn((item.range_val), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[1].color }} >\r\n                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='col-2' style={{ margin: \"0px 18px 0px 3px\" }}>\r\n                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                    <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].internalBenchmark).toFixed(1)}</span><br />\r\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Internal</span><br />\r\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\r\n                                                            </div>\r\n                                                            {/* <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[2].color }} > */}\r\n\r\n                                                            <div style={{ padding: impValFn((list1[key][0].internalBenchmark), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[2].color }} >\r\n                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='col-2'>\r\n                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                <div style={{ position: \"relative\", top: \"300px\", right: \"-24%\" }}>\r\n                                                                    <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].externalBenchmark).toFixed(1)}</span><br />\r\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>External </span><br />\r\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\r\n                                                            </div>\r\n                                                            {/* <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[3].color }} > */}\r\n\r\n                                                            <div style={{ padding: impValFn((list1[key][0].externalBenchmark), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[3].color }} >\r\n                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                            })}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n                            </div >\r\n                        </>\r\n                    ) : null}\r\n                    {/* <Pdf_page2 /> */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\" >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\r\n\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div style={{ borderLeft: \"6px solid #799FCB\", height: \"84px\" }}></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Personal Brand </span><br>\r\n                                                    </br><span>Favorability Rating</span>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", fontWeight: \"lighter\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"30px\", left: \"18%\" }}>\r\n                                                <div style={{ margin: \"5px\" }}>\r\n\r\n                                                    <> <div style={{ width: 312, height: 312, position: \"relative\", left: \"0%\" }}>\r\n                                                        {/* <h1>{impVal}</h1> */}\r\n\r\n                                                        {inputListFinal[0].Feature.map((item, key) => {\r\n                                                            return (\r\n                                                                <>\r\n                                                                    <div>\r\n                                                                        <div style={{ fontSize: \"8px\", position: \"relative\", top: \"60px\", color: \"white\" }}>{item.answer ? (item.answer) : null}</div>\r\n                                                                        <div style={{ fontSize: \"8px\", position: \"relative\", top: \"80px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean.toFixed(1))}</div>\r\n                                                                        <div style={{ fontSize: \"8px\", position: \"relative\", top: \"100px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench.toFixed(1))}</div>\r\n                                                                        <div style={{ fontSize: \"8px\", position: \"relative\", top: \"120px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench.toFixed(1))}</div>\r\n                                                                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                                    <CircularProgressbarWithChildren\r\n                                                                        value={impValFn((list1[key][0].surveyMean), 1, 10)}\r\n                                                                        // text={`${percentage}%`}\r\n                                                                        // circleRatio={5}\r\n                                                                        strokeWidth={10}\r\n                                                                        styles={buildStyles({\r\n\r\n                                                                            // Rotation of path and trail, in number of turns (0-1)\r\n                                                                            rotation: 1,\r\n\r\n                                                                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                            strokeLinecap: 'butt',\r\n\r\n                                                                            // Text size\r\n                                                                            textSize: '16px',\r\n\r\n                                                                            // How long animation takes to go from one percentage to another, in seconds\r\n                                                                            pathTransitionDuration: 0.5,\r\n                                                                            pathTransition: 0.7,\r\n\r\n                                                                            // Can specify path transition in more detail, or remove it entirely\r\n                                                                            // pathTransition: 'none',\r\n\r\n                                                                            // Colors\r\n                                                                            pathColor: `rgb(168,26,12, ${impValFn((list1[key][0].surveyMean), 1, 10)})`,\r\n\r\n                                                                            // pathColor: `rgb(168,26,12, ${item.answer * 10 / 100})`,\r\n                                                                            textColor: '#f88',\r\n                                                                            // trailColor: '#d6d6d6',\r\n                                                                            backgroundColor: '#3e98c7',\r\n                                                                        })}\r\n                                                                    >\r\n                                                                        {/* <hr style={{width:\"20%\"}} /> */}\r\n\r\n                                                                        <div style={{ width: 246, height: 246, }}>\r\n                                                                            {/* <span>{impValFn(item.answer,1,10)}</span> */}\r\n                                                                            <CircularProgressbarWithChildren\r\n                                                                                // value={Math.ceil(9) * 10}\r\n                                                                                value={impValFn(item.range_val, 1, 10)}\r\n                                                                                // text={`${percentage}%`}\r\n                                                                                // circleRatio={5}\r\n                                                                                strokeWidth={14}\r\n                                                                                styles={buildStyles({\r\n\r\n                                                                                    // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                    rotation: 1,\r\n\r\n                                                                                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                    strokeLinecap: 'butt',\r\n\r\n                                                                                    // Text size\r\n                                                                                    textSize: '16px',\r\n\r\n                                                                                    // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                    pathTransitionDuration: 0.5,\r\n                                                                                    pathTransition: 0.7,\r\n\r\n                                                                                    // Can specify path transition in more detail, or remove it entirely\r\n                                                                                    // pathTransition: 'none',\r\n\r\n                                                                                    // Colors\r\n                                                                                    pathColor: `rgb(55,55,94, ${impValFn(item.range_val, 1, 10)})`,\r\n                                                                                    textColor: '#f88',\r\n                                                                                    // trailColor: '#d6d6d6',\r\n                                                                                    backgroundColor: '#3e98c7',\r\n                                                                                })}\r\n                                                                            >\r\n\r\n                                                                                <div style={{ width: 172, height: 172 }}>\r\n                                                                                    <CircularProgressbarWithChildren\r\n                                                                                        value={impValFn((list1[key][0].internalBenchmark), 1, 10)}\r\n                                                                                        // text={`${percentage}%`}\r\n                                                                                        // circleRatio={5}\r\n                                                                                        strokeWidth={18}\r\n                                                                                        styles={buildStyles({\r\n\r\n                                                                                            // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                            rotation: 1,\r\n\r\n                                                                                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                            strokeLinecap: 'butt',\r\n\r\n                                                                                            // Text size\r\n                                                                                            textSize: '16px',\r\n\r\n                                                                                            // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                            pathTransitionDuration: 0.5,\r\n                                                                                            pathTransition: 0.7,\r\n\r\n                                                                                            // Can specify path transition in more detail, or remove it entirely\r\n                                                                                            // pathTransition: 'none',\r\n\r\n                                                                                            // Colors\r\n                                                                                            pathColor: `rgb(53,98,136, ${impValFn((list1[key][0].internalBenchmark), 1, 10)})`,\r\n                                                                                            textColor: '#f88',\r\n                                                                                            // trailColor: '#d6d6d6',\r\n                                                                                            backgroundColor: '#3e98c7',\r\n                                                                                        })}\r\n                                                                                    >\r\n\r\n                                                                                        <div style={{ width: 123, height: 123 }}>\r\n                                                                                            <CircularProgressbarWithChildren\r\n                                                                                                value={impValFn((list1[key][0].externalBenchmark), 1, 10)}\r\n                                                                                                // text={`${percentage}%`}\r\n                                                                                                // circleRatio={5}\r\n\r\n                                                                                                strokeWidth={26}\r\n                                                                                                styles={buildStyles({\r\n\r\n                                                                                                    // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                                    rotation: 1,\r\n\r\n                                                                                                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                                    strokeLinecap: 'butt',\r\n\r\n                                                                                                    // Text size\r\n                                                                                                    textSize: '16px',\r\n\r\n                                                                                                    // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                                    pathTransitionDuration: 0.5,\r\n                                                                                                    pathTransition: 0.7,\r\n\r\n                                                                                                    // Can specify path transition in more detail, or remove it entirely\r\n                                                                                                    // pathTransition: 'none',\r\n\r\n                                                                                                    // Colors\r\n                                                                                                    pathColor: `rgb(170,207,221, ${impValFn((list1[key][0].externalBenchmark), 1, 10)})`,\r\n                                                                                                    textColor: '#f88',\r\n                                                                                                    // trailColor: '#d6d6d6',\r\n                                                                                                    backgroundColor: '#3e98c7',\r\n                                                                                                })}\r\n                                                                                            >\r\n\r\n\r\n\r\n                                                                                            </CircularProgressbarWithChildren>\r\n                                                                                        </div>\r\n\r\n\r\n                                                                                    </CircularProgressbarWithChildren>\r\n                                                                                </div>\r\n\r\n                                                                            </CircularProgressbarWithChildren>\r\n                                                                        </div>\r\n\r\n\r\n\r\n                                                                    </CircularProgressbarWithChildren>\r\n\r\n                                                                </>\r\n                                                            )\r\n                                                        })}\r\n                                                    </div>\r\n\r\n                                                    </>\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {inputListFinal[0].Feature.map((item, key) => {\r\n                                    return (\r\n                                        <>\r\n                                            <div className='row block_sqr p-5'>\r\n                                                <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                    <div className='row'>\r\n                                                        <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                                        </div>\r\n                                                        <div style={{\r\n                                                            // color:\"black\",\r\n                                                            fontSize: \"9px\",\r\n                                                            position: \"relative\",\r\n                                                            // bottom:\"90px\",\r\n                                                            left: \"-14px\",\r\n                                                        }}>\r\n                                                            <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(list1[key][0].surveyMean).toFixed(1)}</span><br>\r\n                                                            </br><span>Survey</span><br>\r\n                                                            </br><span>Mean</span>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                    <div className='row'>\r\n                                                        <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                                        </div>\r\n\r\n                                                        <div style={{\r\n                                                            // color:\"black\",\r\n                                                            fontSize: \"9px\",\r\n                                                            position: \"relative\",\r\n                                                            // bottom:\"90px\",\r\n                                                            left: \"-14px\",\r\n                                                        }}>\r\n                                                            <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(item.range_val).toFixed(1)}</span><br>\r\n                                                            </br><span>Self</span><br>\r\n                                                            </br><span>Assessment</span>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                    <div className='row'>\r\n                                                        <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                                        </div>\r\n                                                        <div style={{\r\n                                                            // color:\"black\",\r\n                                                            fontSize: \"9px\",\r\n                                                            position: \"relative\",\r\n                                                            // bottom:\"90px\",\r\n                                                            left: \"-14px\",\r\n                                                        }}>\r\n                                                            <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(list1[key][0].internalBenchmark).toFixed(1)}</span><br>\r\n                                                            </br><span>Internal</span><br>\r\n                                                            </br><span>Benchmark</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                    <div className='row'>\r\n                                                        <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                                        </div>\r\n                                                        <div style={{\r\n                                                            // color:\"black\",\r\n                                                            fontSize: \"9px\",\r\n                                                            position: \"relative\",\r\n                                                            // bottom:\"90px\",\r\n                                                            left: \"-14px\",\r\n                                                        }}>\r\n                                                            <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(list1[key][0].externalBenchmark).toFixed(1)}</span><br>\r\n                                                            </br><span>External</span><br>\r\n                                                            </br><span>Benchmark</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                })}\r\n\r\n                                < hr style={{ border: \"1px solid black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"10px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div >\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ----3 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Universal </span><br>\r\n                                                    </br><span>Competency Ratings</span>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"5px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"34px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"-5px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"-34px\", fontSize: \"8px\" }}>0.1</div>\r\n                                                </div>\r\n                                                {impVal2 ? (\r\n                                                    <>\r\n                                                        <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n                                                            {inputListFinal[0].Feature1.map((item, key) => (\r\n                                                                <>\r\n                                                                    {[Val2.[`data${key}`][0].length > 0] ? (<>\r\n                                                                        <div style={{ marginLeft: \"10px\" }}>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].surveyMean)] * 10 <= 100 ? [Math.ceil(list1[1][key].surveyMean)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[0].color) : \"rgb(218,37,12)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: item.range_val * 10, backgroundColor: key % 1 == 0 ? (colorOptions.slices[1].color) : \"rgb(235,82,71)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].internalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key].internalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[2].color) : \"rgb(241,158,152)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].externalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key].externalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[3].color) : \"rgb(249,218,216)\", }}></div>\r\n\r\n                                                                            </div>\r\n                                                                            <div style={{ width: \"16px\", height: \"10rem\", float: \"left\" }}></div>\r\n\r\n                                                                        </div>\r\n                                                                    </>) : null}\r\n                                                                </>\r\n                                                            ))}\r\n                                                            <div class=\"display-table\">\r\n                                                                <div style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                                                                    {impVal2.map((item, key) => (\r\n                                                                        <div className='options2_1 '>{item.option}</div>\r\n\r\n                                                                    ))}\r\n\r\n\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n\r\n                                                    </>\r\n                                                ) : null}\r\n\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"-20px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page -----4 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\r\n\r\n\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Universal</span><br>\r\n                                                    </br><span>Competency Ratings</span>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\r\n                                                </div>\r\n\r\n                                                {impVal2Devided1 && Val2 ? (\r\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n\r\n                                                        {(inputListFinal[0].Feature1.slice(5, 10)).map((item, key) => {\r\n                                                            console.log(item)\r\n                                                            console.log(\"key=> \" + key)\r\n                                                            console.log(\"key=> \" + (key + 5))\r\n\r\n                                                        })}\r\n\r\n\r\n                                                        {(inputListFinal[0].Feature1.slice(0, 5)).map((item, key) => (\r\n                                                            <>\r\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\r\n                                                                    <>\r\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].surveyMean)] * 10 <= 100 ? [Math.ceil(list1[1][key].surveyMean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[0].color : \"rgb(55,55,94)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: item.range_val * 10, backgroundColor: key % 1 == 0 ? colorOptions.slices[1].color : \"rgb(86,86,151)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].internalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key].internalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[2].color : \"rgb(140,140,210)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].externalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key].externalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[3].color : \"rgb(155,155,246)\", }}></div>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                ) : null}\r\n                                                            </>))}\r\n\r\n\r\n\r\n\r\n                                                        <div className='row graph_labels2' >\r\n                                                            {impVal2Devided1.map((item, key) => (\r\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\r\n                                                                    {item.option}\r\n                                                                    {/* {console.log(item.option)} */}\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\" style={{ visibility: \"hidden\" }}></div>\r\n                                                <div className='page_left_header'>\r\n                                                    {/* <span>Universal</span><br>\r\n                                            </br><span>Competency Ratings</span> */}\r\n                                                </div>\r\n\r\n\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    {/* <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                            </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span> */}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\r\n                                                </div>\r\n\r\n                                                {impVal2Devided2 && Val2 ? (\r\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n                                                        {(inputListFinal[0].Feature1.slice(5, 10)).map((item, key) => (\r\n                                                            <>\r\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\r\n                                                                    <>\r\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            {/* {Val2.[`data${key + 1}`][0].survey_mean} */}\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key + 5].surveyMean)] * 10 <= 100 ? [Math.ceil(list1[1][key + 5].surveyMean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[0].color : \"rgb(55,55,94)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: item.range_val * 10, backgroundColor: key % 1 == 0 ? colorOptions.slices[1].color : \"rgb(86,86,151)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key + 5].internalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key + 5].internalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[2].color : \"rgb(140,140,210)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key + 5].externalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key + 5].externalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[3].color : \"rgb(155,155,246)\", }}></div>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                ) : null}\r\n                                                            </>))}\r\n\r\n\r\n                                                        <div className='row graph_labels2' >\r\n                                                            {impVal2Devided2.map((item, key) => (\r\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\r\n                                                                    {item.option}\r\n                                                                    {/* {console.log(item.option)} */}\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"90px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 5 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header' >\r\n                                                    <span className='text-future-potential'>Future Potential</span>\r\n                                                    {/* </br><span>Potential</span> */}\r\n                                                </div>\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\r\n                                                    {impVal3 && Val3 ? (\r\n                                                        <div className='row ' >\r\n                                                            {inputListFinal[0].Feature2.map((item, key) => (\r\n                                                                <div className='col-lg-6 ' style={{ borderLeft: key % 2 != 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 4 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                    {[Val3.[`data${key}`][0].length > 0] ? (\r\n                                                                        <>\r\n\r\n                                                                            <div style={{ position: \"relative\", bottom: \"60px\", left: \"20px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                    {item.option}\r\n                                                                                </div>\r\n                                                                                <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(list1[2][key].surveyMean)]} color={colorOptions.slices[0].color} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={item.range_val} color={colorOptions.slices[1].color} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(list1[2][key].internalBenchmark)]} color={colorOptions.slices[2].color} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(list1[2][key].externalBenchmark)]} color={colorOptions.slices[3].color} />\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n                                                                        </>\r\n                                                                    ) : null}\r\n                                                                </div>\r\n\r\n                                                            ))}\r\n\r\n\r\n\r\n                                                            <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\r\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Survey Mean\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Self Assessment\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Internal Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            External Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    ) : null}\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 6 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header' >\r\n                                                    <span className='text-future-potential'>Think-Act-Feel Leadership Rating</span>\r\n                                                    {/* </br><span>Potential</span> */}\r\n                                                </div>\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\r\n                                                    {impVal4 && Val4 ? (\r\n                                                        <>\r\n                                                            {Array.from({ length: 3 }, (item, key) => (\r\n                                                                <div className='row ' >\r\n\r\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 0 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                            <>\r\n\r\n                                                                                {/* <h1>{list1[3][key][0].surveyMean}</h1> */}\r\n\r\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                        {/* {item.option} */}\r\n                                                                                    </div>\r\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].surveyMean)]} color={colorOptions.slices[0].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val} color={colorOptions.slices[1].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].internalBenchmark)]} color={colorOptions.slices[2].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].externalBenchmark)]} color={colorOptions.slices[3].color} />\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </>\r\n                                                                        ) : null}\r\n                                                                    </div>\r\n\r\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 1 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                            <>\r\n\r\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                        {/* {item.option} */}\r\n                                                                                    </div>\r\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].surveyMean)]} color={colorOptions.slices[0].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val1} color={colorOptions.slices[1].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].internalBenchmark)]} color={colorOptions.slices[2].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].externalBenchmark)]} color={colorOptions.slices[3].color} />\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </>\r\n                                                                        ) : null}\r\n                                                                    </div>\r\n\r\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 1 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                            <>\r\n\r\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                        {/* {item.option} */}\r\n                                                                                    </div>\r\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][2].surveyMean)]} color={colorOptions.slices[0].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val2} color={colorOptions.slices[1].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][2].internalBenchmark)]} color={colorOptions.slices[2].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][key].externalBenchmark)]} color={colorOptions.slices[3].color} />\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </>\r\n                                                                        ) : null}\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                            <div className='row' style={{ position: \"relative\", bottom: \"-70px\", fontSize: \"8px\", left: \"-1px\" }}>\r\n                                                                <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n\r\n\r\n                                                                <div className='col-lg-3'>\r\n                                                                    <div className='row'>\r\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\r\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\r\n                                                                        </div>\r\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                                <div className='col-lg-3'>\r\n                                                                    <div className='row'>\r\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                    </div> */}\r\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n\r\n\r\n                                                                <div className='col-lg-3'>\r\n                                                                    <div className='row'>\r\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                    </div> */}\r\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\r\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div className='col-lg-3'>\r\n                                                                    <div className='row'>\r\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                    </div> */}\r\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\r\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                            {/* <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\r\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Survey Mean\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Self Assessment\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Internal Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            External Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div> */}\r\n\r\n\r\n\r\n\r\n                                                        </>\r\n                                                    ) : null}\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 6 */}\r\n                    {/* page ------ 7 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n                                            </>\r\n                                        ) : null}\r\n\r\n                                        <div style={{ position: \"relative\", top: \"48px\", left: \"-5px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div style={{ position: \"relative\", left: \"22px\" }}>\r\n                                                    <div className=\"square_bar\"></div>\r\n                                                    <div className='page_left_header' style={{}}>\r\n                                                        <span className='Think-Act-Feel-Leadership-Rating'>Think-Act-Feel Leadership Rating</span>\r\n\r\n                                                        {/* <span>Think-Act-Feel</span><br>\r\n                                                        </br><span>Leadership Rating</span> */}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"60px\" }}>\r\n                                                    <div className='row' >\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\" }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Think\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Act\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Feel\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {impVal4 && Val4 ? (\r\n                                                        <>\r\n                                                            {\r\n                                                                Array.from({ length: 3 }, (item, key) => (\r\n                                                                    <>\r\n                                                                        <div className='row' style={{ boder: \"1px solid black\" }}>\r\n\r\n                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                                <div className='col-4' style={{\r\n                                                                                    // boder: \"1px solid black\",\r\n                                                                                    height: \"190px\",\r\n                                                                                    // borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n                                                                                    // borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n\r\n                                                                                }}>\r\n                                                                                    <div className='row'>\r\n                                                                                        <div className='row' style={{ height: \"190px\", width: \"500px\", marginLeft: \"auto\" }}>\r\n\r\n                                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                                                <>\r\n                                                                                                    {console.log((parseInt(key + 1) % 3) != 0)}\r\n                                                                                                    <div className='col-1'>\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\r\n\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][0].surveyMean) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][0].surveyMean) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[0].color\r\n\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\r\n                                                                                                            </div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][0].surveyMean.toFixed(1))}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className='col-1' >\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: [inputListFinal[0].Feature3[key].range_val] * 5,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[1].color\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{parseFloat([inputListFinal[0].Feature3[key].range_val])}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className='col-1' >\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][0].internalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][0].internalBenchmark) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[2].color\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Math.ceil(list1[3][key][0].internalBenchmark)).toFixed(1)}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className='col-1' >\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][0].externalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][0].externalBenchmark) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[3].color\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][0].externalBenchmark).toFixed(1)}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </>\r\n\r\n                                                                                            ) : null}\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n\r\n\r\n\r\n\r\n                                                                                </div>\r\n                                                                            ) : null}\r\n\r\n                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                                <div className='col-4' style={{\r\n                                                                                    // boder: \"1px solid black\",\r\n                                                                                    height: \"190px\",\r\n                                                                                    // borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n                                                                                    // borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n\r\n                                                                                }}>\r\n                                                                                    <div className='row'>\r\n                                                                                        <div className='row' style={{ height: \"190px\", width: \"500px\", marginLeft: \"auto\" }}>\r\n\r\n                                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                                                <>\r\n                                                                                                    {console.log((parseInt(key + 1) % 3) != 0)}\r\n                                                                                                    <div className='col-1'>\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\r\n\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][1].surveyMean) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][1].surveyMean) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[0].color\r\n\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\r\n                                                                                                            </div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(Math.ceil(list1[3][key][1].surveyMean).toFixed(1))}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className='col-1' >\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(inputListFinal[0].Feature3[key].range_val1) * 5) <= 50 ? Math.ceil(Math.ceil(inputListFinal[0].Feature3[key].range_val1) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[1].color\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{parseFloat([inputListFinal[0].Feature3[key].range_val1])}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className='col-1' >\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][1].internalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][1].internalBenchmark) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[2].color\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][1].internalBenchmark).toFixed(1)}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className='col-1' >\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][1].externalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][1].externalBenchmark) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[3].color\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][1].externalBenchmark).toFixed(1)}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </>\r\n\r\n                                                                                            ) : null}\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n\r\n\r\n\r\n\r\n                                                                                </div>\r\n                                                                            ) : null}\r\n\r\n\r\n                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                                <div className='col-4' style={{\r\n                                                                                    // boder: \"1px solid black\",\r\n                                                                                    height: \"190px\",\r\n                                                                                    // borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n                                                                                    // borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n\r\n                                                                                }}>\r\n                                                                                    <div className='row'>\r\n                                                                                        <div className='row' style={{ height: \"190px\", width: \"500px\", marginLeft: \"auto\" }}>\r\n\r\n                                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                                                <>\r\n                                                                                                    {console.log((parseInt(key + 1) % 3) != 0)}\r\n                                                                                                    <div className='col-1'>\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\r\n\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][2].surveyMean) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][2].surveyMean) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[0].color\r\n\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\r\n                                                                                                            </div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][2].surveyMean).toFixed(1)}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className='col-1' >\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(inputListFinal[0].Feature3[key].range_val2) * 5) <= 50 ? Math.ceil(Math.ceil(inputListFinal[0].Feature3[key].range_val2) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[1].color\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(inputListFinal[0].Feature3[key].range_val2).toFixed(1)}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className='col-1' >\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][2].internalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][2].internalBenchmark) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[2].color\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][2].internalBenchmark).toFixed(1)}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                    <div className='col-1' >\r\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n\r\n                                                                                                        <div style={{\r\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][2].externalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][2].externalBenchmark) * 5) : 50,\r\n                                                                                                            width: 20,\r\n                                                                                                            height: 20,\r\n                                                                                                            transform: `translate(-5%,50%)`,\r\n                                                                                                            borderRadius: \"100%\",\r\n                                                                                                            opacity: 0.8,\r\n                                                                                                            position: \"relative\",\r\n                                                                                                            backgroundColor: colorOptions.slices[3].color\r\n                                                                                                        }} >\r\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][2].externalBenchmark).toFixed(1)}</span><br />\r\n\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </>\r\n\r\n                                                                                            ) : null}\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n\r\n\r\n\r\n\r\n                                                                                </div>\r\n                                                                            ) : null}\r\n\r\n\r\n                                                                        </div>\r\n\r\n                                                                    </>\r\n                                                                ))\r\n                                                            }\r\n\r\n                                                        </>\r\n\r\n                                                    ) : null}\r\n\r\n\r\n\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                <div className='row' style={{ position: \"relative\", bottom: \"10px\", fontSize: \"8px\", left: \"20px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page --------8 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\" >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    {feedbackData ? (<div >\r\n                                        <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                        <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                        <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Opportunities</span><br>\r\n                                                    </br><span>Overview</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                {impVal5 ? (\r\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", maxWidth: \"60%\" }}>\r\n                                                        <div className='row'>\r\n                                                            {console.log(inputListFinal[1].optionVal1)}\r\n                                                            {inputListFinal[1].optionVal1.map((item, key) => (\r\n                                                                <div className='col-lg-4 m-2' style={{ border: \"1px solid #F1F1F1\", lineHeight: \"22px\", width: \"100px\", textAlign: \"center\" }}>{item.option}</div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>) : null}\r\n\r\n\r\n                                            </div>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Personal</span><br>\r\n                                                    </br><span>Brand Overview</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                {/* {console.log(impVal7)} */}\r\n                                                {impVal7 ? (\r\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\" }}>\r\n                                                        <div className='row'>\r\n                                                            {inputListFinal[2].optionVal2.map((item, key) => (\r\n                                                                <>\r\n                                                                    <div className=\"square col-lg-2\" style={{ height: \"2px\", width: \"2px\", padding: \"2px\", backgroundColor: \"black\", margin: \"5px\" }}></div>\r\n                                                                    <div className=\"square col-lg-2\" style={{ text: \"center\", marginTop: \"2px\", padding: \"2px\", fontWeight: \"lighter\" }}>{item.favoption_name}</div>\r\n                                                                </>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Additional</span><br>\r\n                                                    </br><span>Comments</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", color: \"black\" }}>\r\n                                                    {/* {impVal8 ? (<div>{impVal8}</div>) : null} */}\r\n\r\n                                                    {inputListFinal[0].Feature7.map((item, key) => (\r\n                                                        <div>{item.comment}</div>\r\n                                                    ))}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>) : null}\r\n\r\n                                </div>\r\n\r\n\r\n                                <hr style={{ border: \"1px  black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"30px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"8px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n\r\n\r\n                </>\r\n\r\n\r\n            ) : null}\r\n\r\n            <fieldset>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* <h2 className=\"steps\">100%</h2> */}\r\n                        <div className=\"steps\">\r\n                            <CircularProgressWithLabel size={70} value={5 * 10} data={uid.userId} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-card\" style={{ height: 'auto' }}>\r\n\r\n                    <h2 className=\"purple-text text-center\"><strong>You did it!</strong> <br />\r\n                        Wasn’t that easy?</h2>\r\n                    <br />\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-3\">\r\n                            <div className=\"success-animation\">\r\n                                <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\r\n                                    <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" />\r\n                                    <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-7 text-center\">\r\n                            <h5 className=\"purple-text text-center\">Thank you for your time. We now hope others will return the favor for you someday. Wish you much success.</h5>\r\n                        </div>\r\n                    </div>\r\n                    {/* <button onClick={() => window.print()} >check</button> */}\r\n                </div>\r\n\r\n\r\n\r\n            </fieldset >\r\n\r\n\r\n\r\n\r\n\r\n            {list1.length == 5 ? (<button\r\n                type=\"button\"\r\n                class=\"btn downloadbtn waves-effect\"\r\n                onClick={exportPDFWithMethod}\r\n            >\r\n                Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n            </button>) : null}\r\n\r\n            {/* <div className='ccdf'>\r\n                <h1>Amplioso aaaa</h1>\r\n                <p>Amplioso aaaa</p>\r\n            </div> */}\r\n\r\n            {/* {pdfShowDes > 0 ? (\r\n                <PDFExport paperSize=\"A4\"\r\n                    ref={pdfExportComponent}\r\n                    fileName={`${beliverName}-${history.location.pathname}`}\r\n                >\r\n                    <div>\r\n                        <span>hallo shubhaa</span>\r\n                    </div>\r\n\r\n                </PDFExport>) : null} */}\r\n\r\n            {pdfShowDes > 0 ? (\r\n                <PDFExport paperSize=\"A4\"\r\n                    ref={pdfExportComponent}\r\n                    fileName={`${beliverName}-${history.location.pathname}`}\r\n                >\r\n\r\n\r\n                    <div className=\"feed_block_row row \"  >\r\n                        <div className='circle' style={{ position: \"absolute\", top: \"23%\", left: \"272px\" }}>\r\n                            <Star style={{ fill: \"#FFFDFD\", fontSize: \"38px\", position: \"relative\", right: \"7px\", top: \"4px\" }} />\r\n                        </div>\r\n                        <div className='page1_circle2' style={{ position: \"absolute\", top: \"73%\", left: \"272px\" }}>\r\n                            <CheckIcon style={{ fill: \"#FFFDFD\", fontSize: \"38px\", position: \"relative\", right: \"7px\", top: \"4px\" }} />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 feed_block feed_block1 text-black\">\r\n                            <img className=\"logo_icon\" src={logo_icon} alt=\"company_logo\" />\r\n                            <div>\r\n                                <p >THE QUICK, BROWN FOX JUMPS OVER A LAZY DOG. DJS<br />\r\n                                    FLOCK BY WHEN MTV AX QUIZ PROG. JUNK MTV QUIZ <br />\r\n                                    GRACED BY FOX WHELPS. BAWDS JOG, FLICK QUARTZ, VEX<br />\r\n                                    NYMPHS. WALTZ, BAD NYMPH, FOR QUICK JIGS VEX! FOX<br />\r\n                                    NYMPHS GRAB QUICK-JIVED WALTZ BRICK QUIZ WHANGS<br />\r\n                                    JUMPY VELDT FOX. BRIGHT VIXENS JUMP; DOZY FOWL</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 feed_block feed_block2\">\r\n\r\n                            <div className='text-white' style={{ position: \"relative\", left: \"16px\", top: \"225px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }}>\r\n                                {/* <p>Feedback Report</p> */}\r\n                                <span>Feedback</span><br>\r\n                                </br><span>Report</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 feed_block feed_block3 text-black\">\r\n                            <div style={{ fontSize: \"10px\", color: \"white\", float: \"left\", padding: \"20px 20px\", flex: \"0 0 auto\", width: \"100%\" }}>\r\n                                {/* Company Details */}\r\n                            </div>\r\n                            <div style={{ color: \"white\", position: \"relative\", left: \"16px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }}>\r\n                                <span>Conversant</span><br>\r\n                                </br><span>Technologies</span>\r\n                            </div>\r\n\r\n                            <div style={{ position: \"relative\", color: \"white\", left: \"26px\", top: \"100px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }} >\r\n                                <span style={{ fontSize: \"58px\" }}>{new Date().getFullYear()}</span><br>\r\n                                </br><span style={{ fontSize: \"10px\" }}>www.amplioso.com</span>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        {feedbackData ? (\r\n                            <>\r\n                                <div className=\"col-lg-6 feed_block feed_block4 text-black\">\r\n                                    <div style={{ fontSize: \"10px\", position: \"relative\", left: \"-85px\", padding: \"20px 20px\" }}>\r\n                                        {/* Employee Details */}\r\n                                    </div>\r\n                                    {/* <span >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`}</span> */}\r\n                                    {/* {console.log(feedbackData)} */}\r\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"8px\" }}>\r\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\", textTransform: \"capitalize\" }}>{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`}</span><br />\r\n                                        <span style={{ fontSize: \"8px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\", fontWeight: \"100px\" }}>{`${feedbackData[0].user_email}`}</span>\r\n                                    </div>\r\n\r\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"46px\" }}>\r\n                                        <span style={{ fontSize: \"8px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Feedback Period</span><br />\r\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].period_start.split('T')[0]}</span><br />\r\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].period_end.split('T')[0]}</span><br />\r\n                                    </div>\r\n\r\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"76px\", textTransform: \"capitalize\" }}>\r\n                                        <span style={{ fontSize: \"8px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Created By</span><br />\r\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].ManagerId.first_name} {feedbackData[0].ManagerId.last_name}</span><br />\r\n                                        <span style={{ fontSize: \"8px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Generated On</span><br />\r\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].createdAt.split('T')[0]}</span><br />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : null}        </div>\r\n                    {/* <Pdf_page1 /> */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\" style={{ padding: \"25px 0px 0px 25px\" }} >\r\n                                <div >\r\n                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n                                    {console.log(\"val==> \" + impVal)}\r\n\r\n                                    {impVal && list1.length == 5 ? (\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"14px\", fontSize: \"40px\" }}>\r\n\r\n                                            <div className=\"square_bar\"></div>\r\n                                            <div className='page_left_header' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <span>Overall</span><br>\r\n                                                </br><span>Performance</span>\r\n                                            </div>\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                            </div>\r\n                                            <div className='row p-5' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", border: \"0px solid black\", width: \"100%\", position: \"relative\", left: \"5%\", top: \"-40px\" }}>\r\n                                                {/* {console.log(inputListFinal)} */}\r\n\r\n\r\n                                                {/* {inputListFinal[0].Feature.map((item, key) => {\r\n                                                    console.log(item)\r\n                                                })} */}\r\n\r\n                                                {/* {inputListFinal[0].Feature1.map((item, key) => {\r\n                                                    console.log(item)\r\n                                                })} */}\r\n\r\n\r\n                                                {inputListFinal[0].Feature.map((item, key) => {\r\n                                                    // { console.log(item) }\r\n\r\n                                                    return (\r\n                                                        <>\r\n                                                            <div className='col-2'>\r\n                                                                <div style={{ fontSize: \"16px\" }}>\r\n                                                                    <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                        <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].surveyMean).toFixed(1)}</span><br />\r\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Survey</span><br />\r\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Mean</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div style={{ padding: impValFn(list1[key][0].surveyMean, 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[0].color }} >\r\n                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className='col-2' style={{ margin: \"0px 18px 0px 18px\" }}>\r\n                                                                <div style={{ fontSize: \"16px\" }}>\r\n                                                                    <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                        <span style={{ fontSize: \"20px\", }}>{Math.ceil(item.range_val).toFixed(1)}</span><br />\r\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Self</span><br />\r\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Assessment</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                {/* Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) : 92 */}\r\n                                                                <div style={{ padding: impValFn((item.range_val), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[1].color }} >\r\n                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className='col-2' style={{ margin: \"0px 18px 0px 3px\" }}>\r\n                                                                <div style={{ fontSize: \"16px\" }}>\r\n                                                                    <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                        <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].internalBenchmark).toFixed(1)}</span><br />\r\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Internal</span><br />\r\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\r\n                                                                </div>\r\n                                                                {/* <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[2].color }} > */}\r\n\r\n                                                                <div style={{ padding: impValFn((list1[key][0].internalBenchmark), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[2].color }} >\r\n                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className='col-2'>\r\n                                                                <div style={{ fontSize: \"16px\" }}>\r\n                                                                    <div style={{ position: \"relative\", top: \"300px\", right: \"-24%\" }}>\r\n                                                                        <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].externalBenchmark).toFixed(1)}</span><br />\r\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>External </span><br />\r\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\r\n                                                                </div>\r\n                                                                {/* <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[3].color }} > */}\r\n\r\n                                                                <div style={{ padding: impValFn((list1[key][0].externalBenchmark), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[3].color }} >\r\n                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </div>\r\n                                        </div>) : null}\r\n\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n                            </div >\r\n                        </>\r\n                    ) : null}\r\n                    {/* <Pdf_page2 /> */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            {impVal ? (\r\n                                <div className=\" row page-break feed_block_row\" >\r\n                                    <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                        <div >\r\n                                            {feedbackData ? (\r\n                                                <>\r\n                                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\r\n\r\n                                            <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\" }}>\r\n\r\n                                                <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                    <div style={{ borderLeft: \"6px solid #799FCB\", height: \"84px\" }}></div>\r\n                                                    <div className='page_left_header'>\r\n                                                        <span>Personal Brand </span><br>\r\n                                                        </br><span>Favorability Rating</span>\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                    <div style={{ fontSize: \"7px\", fontWeight: \"lighter\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                        <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                        </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div style={{ position: \"relative\", bottom: \"30px\", left: \"18%\" }}>\r\n                                                    <div style={{ margin: \"5px\" }}>\r\n\r\n                                                        <> <div style={{ width: 312, height: 312, position: \"relative\", left: \"0%\" }}>\r\n                                                            {/* <h1>{impVal}</h1> */}\r\n\r\n                                                            {impVal.map((item, key) => {\r\n                                                                return (\r\n                                                                    <>\r\n                                                                        <div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"60px\", color: \"white\" }}>{item.answer ? (item.answer) : null}</div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"80px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean.toFixed(1))}</div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"100px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench.toFixed(1))}</div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"120px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench.toFixed(1))}</div>\r\n                                                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                                        <CircularProgressbarWithChildren\r\n                                                                            value={impValFn((Val.[`data${key}`][0].survey_mean), 1, 10)}\r\n                                                                            // text={`${percentage}%`}\r\n                                                                            // circleRatio={5}\r\n                                                                            strokeWidth={10}\r\n                                                                            styles={buildStyles({\r\n\r\n                                                                                // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                rotation: 1,\r\n\r\n                                                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                strokeLinecap: 'butt',\r\n\r\n                                                                                // Text size\r\n                                                                                textSize: '16px',\r\n\r\n                                                                                // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                pathTransitionDuration: 0.5,\r\n                                                                                pathTransition: 0.7,\r\n\r\n                                                                                // Can specify path transition in more detail, or remove it entirely\r\n                                                                                // pathTransition: 'none',\r\n\r\n                                                                                // Colors\r\n                                                                                pathColor: `rgb(168,26,12, ${impValFn((Val.[`data${key}`][0].survey_mean), 1, 10)})`,\r\n\r\n                                                                                // pathColor: `rgb(168,26,12, ${item.answer * 10 / 100})`,\r\n                                                                                textColor: '#f88',\r\n                                                                                // trailColor: '#d6d6d6',\r\n                                                                                backgroundColor: '#3e98c7',\r\n                                                                            })}\r\n                                                                        >\r\n                                                                            {/* <hr style={{width:\"20%\"}} /> */}\r\n\r\n                                                                            <div style={{ width: 246, height: 246, }}>\r\n                                                                                {/* <span>{impValFn(item.answer,1,10)}</span> */}\r\n                                                                                <CircularProgressbarWithChildren\r\n                                                                                    // value={Math.ceil(9) * 10}\r\n                                                                                    value={impValFn(item.answer, 1, 10)}\r\n                                                                                    // text={`${percentage}%`}\r\n                                                                                    // circleRatio={5}\r\n                                                                                    strokeWidth={14}\r\n                                                                                    styles={buildStyles({\r\n\r\n                                                                                        // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                        rotation: 1,\r\n\r\n                                                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                        strokeLinecap: 'butt',\r\n\r\n                                                                                        // Text size\r\n                                                                                        textSize: '16px',\r\n\r\n                                                                                        // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                        pathTransitionDuration: 0.5,\r\n                                                                                        pathTransition: 0.7,\r\n\r\n                                                                                        // Can specify path transition in more detail, or remove it entirely\r\n                                                                                        // pathTransition: 'none',\r\n\r\n                                                                                        // Colors\r\n                                                                                        pathColor: `rgb(55,55,94, ${impValFn(item.answer, 1, 10)})`,\r\n                                                                                        textColor: '#f88',\r\n                                                                                        // trailColor: '#d6d6d6',\r\n                                                                                        backgroundColor: '#3e98c7',\r\n                                                                                    })}\r\n                                                                                >\r\n\r\n                                                                                    <div style={{ width: 172, height: 172 }}>\r\n                                                                                        <CircularProgressbarWithChildren\r\n                                                                                            value={impValFn((Val.[`data${key}`][0].internal_bench), 1, 10)}\r\n                                                                                            // text={`${percentage}%`}\r\n                                                                                            // circleRatio={5}\r\n                                                                                            strokeWidth={18}\r\n                                                                                            styles={buildStyles({\r\n\r\n                                                                                                // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                                rotation: 1,\r\n\r\n                                                                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                                strokeLinecap: 'butt',\r\n\r\n                                                                                                // Text size\r\n                                                                                                textSize: '16px',\r\n\r\n                                                                                                // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                                pathTransitionDuration: 0.5,\r\n                                                                                                pathTransition: 0.7,\r\n\r\n                                                                                                // Can specify path transition in more detail, or remove it entirely\r\n                                                                                                // pathTransition: 'none',\r\n\r\n                                                                                                // Colors\r\n                                                                                                pathColor: `rgb(53,98,136, ${impValFn((Val.[`data${key}`][0].internal_bench), 1, 10)})`,\r\n                                                                                                textColor: '#f88',\r\n                                                                                                // trailColor: '#d6d6d6',\r\n                                                                                                backgroundColor: '#3e98c7',\r\n                                                                                            })}\r\n                                                                                        >\r\n\r\n                                                                                            <div style={{ width: 123, height: 123 }}>\r\n                                                                                                <CircularProgressbarWithChildren\r\n                                                                                                    value={impValFn((Val.[`data${key}`][0].external_bench), 1, 10)}\r\n                                                                                                    // text={`${percentage}%`}\r\n                                                                                                    // circleRatio={5}\r\n\r\n                                                                                                    strokeWidth={26}\r\n                                                                                                    styles={buildStyles({\r\n\r\n                                                                                                        // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                                        rotation: 1,\r\n\r\n                                                                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                                        strokeLinecap: 'butt',\r\n\r\n                                                                                                        // Text size\r\n                                                                                                        textSize: '16px',\r\n\r\n                                                                                                        // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                                        pathTransitionDuration: 0.5,\r\n                                                                                                        pathTransition: 0.7,\r\n\r\n                                                                                                        // Can specify path transition in more detail, or remove it entirely\r\n                                                                                                        // pathTransition: 'none',\r\n\r\n                                                                                                        // Colors\r\n                                                                                                        pathColor: `rgb(170,207,221, ${impValFn((Val.[`data${key}`][0].external_bench), 1, 10)})`,\r\n                                                                                                        textColor: '#f88',\r\n                                                                                                        // trailColor: '#d6d6d6',\r\n                                                                                                        backgroundColor: '#3e98c7',\r\n                                                                                                    })}\r\n                                                                                                >\r\n\r\n\r\n\r\n                                                                                                </CircularProgressbarWithChildren>\r\n                                                                                            </div>\r\n\r\n\r\n                                                                                        </CircularProgressbarWithChildren>\r\n                                                                                    </div>\r\n\r\n                                                                                </CircularProgressbarWithChildren>\r\n                                                                            </div>\r\n\r\n\r\n\r\n                                                                        </CircularProgressbarWithChildren>\r\n\r\n                                                                    </>\r\n                                                                )\r\n                                                            })}\r\n                                                        </div>\r\n\r\n                                                        </>\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    {impVal.map((item, key) => {\r\n                                        return (\r\n                                            <>\r\n                                                <div className='row block_sqr p-5'>\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                                            </div>\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean).toFixed(1)}</span><br>\r\n                                                                </br><span>Survey</span><br>\r\n                                                                </br><span>Mean</span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                                            </div>\r\n\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{parseFloat(item.answer).toFixed(1)}</span><br>\r\n                                                                </br><span>Self</span><br>\r\n                                                                </br><span>Assessment</span>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                                            </div>\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench).toFixed(1)}</span><br>\r\n                                                                </br><span>Internal</span><br>\r\n                                                                </br><span>Benchmark</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                                            </div>\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench).toFixed(1)}</span><br>\r\n                                                                </br><span>External</span><br>\r\n                                                                </br><span>Benchmark</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n\r\n                                    < hr style={{ border: \"1px solid black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"10px\" }} />\r\n                                    <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                        <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                        <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                        <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                    </div>\r\n                                </div >\r\n                            ) : null}\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ----3 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Universal </span><br>\r\n                                                    </br><span>Competency Ratings</span>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"5px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"34px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"-5px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"-34px\", fontSize: \"8px\" }}>0.1</div>\r\n                                                </div>\r\n                                                {impVal2 ? (\r\n                                                    <>\r\n                                                        <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n                                                            {impVal2.map((item, key) => (\r\n                                                                <>\r\n                                                                    {[Val2.[`data${key}`][0].length > 0] ? (<>\r\n                                                                        <div style={{ marginLeft: \"10px\" }}>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[0].color) : \"rgb(218,37,12)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 1 == 0 ? (colorOptions.slices[1].color) : \"rgb(235,82,71)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[2].color) : \"rgb(241,158,152)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[3].color) : \"rgb(249,218,216)\", }}></div>\r\n\r\n                                                                            </div>\r\n                                                                            <div style={{ width: \"16px\", height: \"10rem\", float: \"left\" }}></div>\r\n\r\n                                                                        </div>\r\n                                                                    </>) : null}\r\n                                                                </>\r\n                                                            ))}\r\n                                                            <div class=\"display-table\">\r\n                                                                <div style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                                                                    {impVal2.map((item, key) => (\r\n                                                                        <div className='options2_1 '>{item.option}</div>\r\n\r\n                                                                    ))}\r\n\r\n\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n\r\n                                                    </>\r\n                                                ) : null}\r\n\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"-20px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n                    {/* page -----4 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\r\n\r\n\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Universal</span><br>\r\n                                                    </br><span>Competency Ratings</span>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\r\n                                                </div>\r\n\r\n                                                {impVal2Devided1 && Val2 ? (\r\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n\r\n                                                        {impVal2Devided1.map((item, key) => (\r\n                                                            <>\r\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\r\n                                                                    <>\r\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[0].color : \"rgb(55,55,94)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 1 == 0 ? colorOptions.slices[1].color : \"rgb(86,86,151)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[2].color : \"rgb(140,140,210)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[3].color : \"rgb(155,155,246)\", }}></div>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                ) : null}\r\n                                                            </>))}\r\n\r\n\r\n\r\n\r\n                                                        <div className='row graph_labels2' >\r\n                                                            {impVal2Devided1.map((item, key) => (\r\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\r\n                                                                    {item.option}\r\n                                                                    {/* {console.log(item.option)} */}\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\" style={{ visibility: \"hidden\" }}></div>\r\n                                                <div className='page_left_header'>\r\n                                                    {/* <span>Universal</span><br>\r\n                                            </br><span>Competency Ratings</span> */}\r\n                                                </div>\r\n\r\n\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    {/* <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                            </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span> */}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\r\n                                                </div>\r\n\r\n                                                {impVal2Devided2 && Val2 ? (\r\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n                                                        {impVal2Devided2.map((item, key) => (\r\n                                                            <>\r\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\r\n                                                                    <>\r\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\r\n                                                                        <div className='graph_bar_2'>\r\n\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[0].color : \"rgb(55,55,94)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 1 == 0 ? colorOptions.slices[1].color : \"rgb(86,86,151)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[2].color : \"rgb(140,140,210)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[3].color : \"rgb(155,155,246)\", }}></div>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                ) : null}\r\n                                                            </>))}\r\n\r\n\r\n                                                        <div className='row graph_labels2' >\r\n                                                            {impVal2Devided2.map((item, key) => (\r\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\r\n                                                                    {item.option}\r\n                                                                    {/* {console.log(item.option)} */}\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"90px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                            </div>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                            </div> */}\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n\r\n                    {/* page ------ 5 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header' >\r\n                                                    <span className='text-future-potential'>Future Potential</span>\r\n                                                    {/* </br><span>Potential</span> */}\r\n                                                </div>\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\r\n                                                    {impVal3 && Val3 ? (\r\n                                                        <div className='row ' >\r\n                                                            {impVal3.map((item, key) => (\r\n                                                                <div className='col-lg-6 ' style={{ borderLeft: key % 2 != 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 4 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                    {[Val3.[`data${key}`][0].length > 0] ? (\r\n                                                                        <>\r\n\r\n                                                                            <div style={{ position: \"relative\", bottom: \"60px\", left: \"20px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                    {item.option}\r\n                                                                                </div>\r\n                                                                                <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].survey_mean)]} color={colorOptions.slices[0].color} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={item.answer} color={colorOptions.slices[1].color} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].internal_bench)]} color={colorOptions.slices[2].color} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].external_bench)]} color={colorOptions.slices[3].color} />\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n                                                                        </>\r\n                                                                    ) : null}\r\n                                                                </div>\r\n\r\n                                                            ))}\r\n\r\n\r\n\r\n                                                            <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\r\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Survey Mean\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Self Assessment\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Internal Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            External Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    ) : null}\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n                  \r\n\r\n                     {/* page ------ 6 */}\r\n                     {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header' >\r\n                                                    <span className='text-future-potential'>Think-Act-Feel Leadership Rating</span>\r\n                                                    {/* </br><span>Potential</span> */}\r\n                                                </div>\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\r\n                                                    {impVal4 && Val4 ? (\r\n                                                        <>\r\n                                                            {Array.from({ length: 3 }, (item, key) => (\r\n                                                                <div className='row ' >\r\n\r\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 0 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                            <>\r\n\r\n                                                                                {/* <h1>{list1[3][key][0].surveyMean}</h1> */}\r\n\r\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                        {/* {item.option} */}\r\n                                                                                    </div>\r\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].surveyMean)]} color={colorOptions.slices[0].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val} color={colorOptions.slices[1].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].internalBenchmark)]} color={colorOptions.slices[2].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].externalBenchmark)]} color={colorOptions.slices[3].color} />\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </>\r\n                                                                        ) : null}\r\n                                                                    </div>\r\n\r\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 1 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                            <>\r\n\r\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                        {/* {item.option} */}\r\n                                                                                    </div>\r\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].surveyMean)]} color={colorOptions.slices[0].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val1} color={colorOptions.slices[1].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].internalBenchmark)]} color={colorOptions.slices[2].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].externalBenchmark)]} color={colorOptions.slices[3].color} />\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </>\r\n                                                                        ) : null}\r\n                                                                    </div>\r\n\r\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 1 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                            <>\r\n\r\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                        {/* {item.option} */}\r\n                                                                                    </div>\r\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][2].surveyMean)]} color={colorOptions.slices[0].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val2} color={colorOptions.slices[1].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][2].internalBenchmark)]} color={colorOptions.slices[2].color} />\r\n\r\n                                                                                    </div>\r\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][key].externalBenchmark)]} color={colorOptions.slices[3].color} />\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </>\r\n                                                                        ) : null}\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                            <div className='row' style={{ position: \"relative\", bottom: \"-70px\", fontSize: \"8px\", left: \"-1px\" }}>\r\n                                                                {/* <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} /> */}\r\n\r\n\r\n                                                                <div className='col-lg-3'>\r\n                                                                    <div className='row'>\r\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\r\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\r\n                                                                        </div>\r\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                                <div className='col-lg-3'>\r\n                                                                    <div className='row'>\r\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                    </div> */}\r\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n\r\n\r\n                                                                <div className='col-lg-3'>\r\n                                                                    <div className='row'>\r\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                    </div> */}\r\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\r\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div className='col-lg-3'>\r\n                                                                    <div className='row'>\r\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                    </div> */}\r\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\r\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                            {/* <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\r\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Survey Mean\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Self Assessment\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Internal Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            External Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div> */}\r\n\r\n\r\n\r\n\r\n                                                        </>\r\n                                                    ) : null}\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 7 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n                                            </>\r\n                                        ) : null}\r\n\r\n                                        <div style={{ position: \"relative\", top: \"48px\", left: \"-5px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div style={{ position: \"relative\", left: \"22px\" }}>\r\n                                                    <div className=\"square_bar\"></div>\r\n                                                    <div className='page_left_header' style={{}}>\r\n                                                        <span className='Think-Act-Feel-Leadership-Rating'>Think-Act-Feel Leadership Rating</span>\r\n\r\n                                                        {/* <span>Think-Act-Feel</span><br>\r\n                                                        </br><span>Leadership Rating</span> */}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"60px\" }}>\r\n                                                    <div className='row' >\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\" }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Think\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Act\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Feel\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {impVal4 && Val4 ? (\r\n                                                        <div className='row' style={{ boder: \"1px solid black\" }}>\r\n                                                            {impVal4.map((item, key) => (\r\n                                                                <>\r\n                                                                    {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                        <div className='col-4' style={{\r\n                                                                            // boder: \"1px solid black\",\r\n                                                                            height: \"190px\",\r\n                                                                            // borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n                                                                            // borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n\r\n                                                                        }}>\r\n                                                                            <div className='row'>\r\n                                                                                <div className='row' style={{ height: \"190px\", width: \"500px\", marginLeft: \"auto\" }}>\r\n\r\n                                                                                    {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                                        <>\r\n                                                                                            {console.log((parseInt(key + 1) % 3) != 0)}\r\n                                                                                            <div className='col-1'>\r\n                                                                                                <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                    <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                        {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\r\n\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                                <div style={{\r\n                                                                                                    padding: parseFloat(item.answer * 5),\r\n                                                                                                    width: 20,\r\n                                                                                                    height: 20,\r\n                                                                                                    transform: `translate(-5%,50%)`,\r\n                                                                                                    borderRadius: \"100%\",\r\n                                                                                                    opacity: 0.8,\r\n                                                                                                    position: \"relative\",\r\n                                                                                                    backgroundColor: colorOptions.slices[0].color\r\n\r\n                                                                                                }} >\r\n                                                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\r\n                                                                                                    </div>\r\n                                                                                                    <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{parseFloat(item.answer).toFixed(1)}</span><br />\r\n\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            <div className='col-1' >\r\n                                                                                                <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                    <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                        {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n\r\n                                                                                                <div style={{\r\n                                                                                                    padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].survey_mean) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].survey_mean) * 5) : 50,\r\n                                                                                                    width: 20,\r\n                                                                                                    height: 20,\r\n                                                                                                    transform: `translate(-5%,50%)`,\r\n                                                                                                    borderRadius: \"100%\",\r\n                                                                                                    opacity: 0.8,\r\n                                                                                                    position: \"relative\",\r\n                                                                                                    backgroundColor: colorOptions.slices[1].color\r\n                                                                                                }} >\r\n                                                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                    <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br />\r\n\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            <div className='col-1' >\r\n                                                                                                <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                    <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                        {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n\r\n                                                                                                <div style={{\r\n                                                                                                    padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) : 50,\r\n                                                                                                    width: 20,\r\n                                                                                                    height: 20,\r\n                                                                                                    transform: `translate(-5%,50%)`,\r\n                                                                                                    borderRadius: \"100%\",\r\n                                                                                                    opacity: 0.8,\r\n                                                                                                    position: \"relative\",\r\n                                                                                                    backgroundColor: colorOptions.slices[2].color\r\n                                                                                                }} >\r\n                                                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                    <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\r\n\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            <div className='col-1' >\r\n                                                                                                <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                    <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                        {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n\r\n                                                                                                <div style={{\r\n                                                                                                    padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) : 50,\r\n                                                                                                    width: 20,\r\n                                                                                                    height: 20,\r\n                                                                                                    transform: `translate(-5%,50%)`,\r\n                                                                                                    borderRadius: \"100%\",\r\n                                                                                                    opacity: 0.8,\r\n                                                                                                    position: \"relative\",\r\n                                                                                                    backgroundColor: colorOptions.slices[3].color\r\n                                                                                                }} >\r\n                                                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                    <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\r\n\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </>\r\n\r\n                                                                                    ) : null}\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n\r\n\r\n\r\n\r\n                                                                        </div>\r\n                                                                    ) : null}\r\n\r\n                                                                </>\r\n                                                            ))}\r\n\r\n\r\n\r\n                                                        </div>) : null}\r\n\r\n\r\n\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                <div className='row' style={{ position: \"relative\", bottom: \"10px\", fontSize: \"8px\", left: \"20px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n                    {/* page --------8 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\" >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    {feedbackData ? (<div >\r\n                                        <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                        <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\r\n                                        <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Opportunities</span><br>\r\n                                                    </br><span>Overview</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                {impVal5 ? (\r\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", maxWidth: \"60%\" }}>\r\n                                                        <div className='row'>\r\n                                                            {impVal5.map((item, key) => (\r\n                                                                <div className='col-lg-4 m-2' style={{ border: \"1px solid #F1F1F1\", lineHeight: \"22px\", width: \"100px\", textAlign: \"center\" }}>{item.option}</div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>) : null}\r\n\r\n\r\n                                            </div>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Personal</span><br>\r\n                                                    </br><span>Brand Overview</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                {/* {console.log(impVal7)} */}\r\n                                                {impVal7 ? (\r\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\" }}>\r\n                                                        <div className='row'>\r\n                                                            {impVal7.map((item, key) => (\r\n                                                                <>\r\n                                                                    <div className=\"square col-lg-2\" style={{ height: \"2px\", width: \"2px\", padding: \"2px\", backgroundColor: \"black\", margin: \"5px\" }}></div>\r\n                                                                    <div className=\"square col-lg-2\" style={{ text: \"center\", marginTop: \"2px\", padding: \"2px\", fontWeight: \"lighter\" }}>{item.option}</div>\r\n                                                                </>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Additional</span><br>\r\n                                                    </br><span>Comments</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", color: \"black\" }}>\r\n                                                    {impVal8 ? (<div>{impVal8}</div>) : null}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>) : null}\r\n\r\n                                </div>\r\n\r\n\r\n                                <hr style={{ border: \"1px  black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"30px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"8px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </PDFExport>\r\n            ) : (null)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Step1 from \"../steps/Step5\";\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport ReactTooltip from 'react-tooltip';\nimport { CircularProgressbar, buildStyles, CircularProgressbarWithChildren } from 'react-circular-progressbar';\nimport { Chart } from \"react-google-charts\";\n// import '../../../assets/css/pdf_design.css';\n// import '../../../assets/css/pdfFont.css';\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Box, Card, Container } from '@material-ui/core';\n// import logo from \"../assets/images/logo-wt.png\";\nimport logo_icon from \"../../../assets/images/deflogo.png\";\nimport star_img from \"../../../assets/images/star_img.jpg\";\nimport Star from '@material-ui/icons/StarRate';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DonutChart from '../../../components/DonutChart';\nimport GraphVerticalBars from '../../../components/GraphVerticalBars';\nimport CircularProgressWithLabel from '../../../components/CircularProgressWithLabel';\n\nexport default function ReportPdf(props) {\n    var param_id = window.location.search.split(\"id=\")[1]\n    console.log(param_id);\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\n    const [DisplayDiv, setDisplayDiv] = useState(true);\n    const [pdfShowDes, setpdfShowDes] = useState(0);\n    const history = useHistory();\n    const [beliverName, setbeliverName] = useState(\"\");\n    const [SurveyVal, setSurveyVal] = useState({});\n    const [feat, setfeat] = useState();\n\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const currDateForm = monthNames[new Date().getMonth()].substring(0, 3) + \"-\" + monthNames[new Date().getMonth() + 1].substring(0, 3) + \" \" + new Date().getFullYear();\n\n    const exportPDFWithMethod = () => {\n        setpdfShowDes(1);\n        setTimeout(() => {\n            // alert(pdfShowDes);\n            if (pdfExportComponent.current) {\n                pdfExportComponent.current.save();\n\n                setTimeout(() => {\n                    setpdfShowDes(0);\n                }, 2000)\n            }\n        }, 2000)\n\n    };\n    const pdfExportComponent = React.useRef(null);\n\n\n\n    const [impVal2Devided1, set_impVal2Devided1] = useState()\n    const [impVal2Devided2, set_impVal2Devided2] = useState()\n\n    const [survey_count, set_survey_count] = useState()\n    const [managers_length, set_managers_length] = useState()\n    const [company_length, set_company_length] = useState()\n    const [inputListFinal, setInputListFinal] = useState([]);\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\n    const [viewModal, setviewModal] = useState(false);\n\n    const token = localStorage.getItem(\"jwt\");\n    const [feedbackData, setfeedbackData] = useState()\n\n    const [first_name, setfirst_name] = useState(\"\")\n    const [last_name, setlast_name] = useState(\"\");\n    const [question, setquestion] = useState([]);\n    const [answer0, setanswer0] = useState([])\n    const [answer1, setanswer1] = useState([])\n    const [answer2, setanswer2] = useState([])\n    const [answer3, setanswer3] = useState([])\n    const [answer4, setanswer4] = useState([])\n    const [answer5, setanswer5] = useState([])\n    const [answer6, setanswer6] = useState([])\n\n    const [options0, setoptions0] = useState([])\n    const [options1, setoptions1] = useState([])\n    const [options2, setoptions2] = useState([])\n    const [options3, setoptions3] = useState([])\n    const [options4, setoptions4] = useState([])\n    const [options5, setoptions5] = useState([])\n    const [options6, setoptions6] = useState([])\n    const [heights, setheights] = useState(\"10rem\")\n\n\n    const uid = JSON.parse(localStorage.getItem('manager'));\n\n\n    const [OptData, setOptData] = useState(\"\")\n    const [OptionVal, setOptionVal] = useState(\"\")\n    const [impVal, setimpVal] = useState(0)\n    const [impVal2, setimpVal2] = useState(0)\n    const [impVal3, setimpVal3] = useState(0)\n    const [impVal4, setimpVal4] = useState(0)\n    const [impVal5, setimpVal5] = useState(0)\n    const [impVal6, setimpVal6] = useState(0)\n    const [impVal7, setimpVal7] = useState(0)\n    const [impVal8, setimpVal8] = useState(0)\n    const [impVal9, setimpVal9] = useState(0)\n\n    const [Val, setVal] = useState(\"\")\n    const [Val2, setVal2] = useState(\"\")\n    const [Val3, setVal3] = useState(\"\")\n    const [Val4, setVal4] = useState(\"\")\n    const [Val5, setVal5] = useState(\"\")\n    const [Val6, setVal6] = useState(\"\")\n    const [Val7, setVal7] = useState(\"\")\n    const [Val8, setVal8] = useState(\"\")\n    const [Val9, setVal9] = useState(\"\")\n\n    const [ans, setans] = useState([])\n\n    const [questionId, setquestionId] = useState(\"\")\n    const [OptionData, setOptionData] = useState([])\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\n    const [OptionDataCol5, setOptionDataCol5] = useState([])\n    const [OptionDataCol5_2, setOptionDataCol5_2] = useState([])\n    const [OptionDataCol5_3, setOptionDataCol5_3] = useState([])\n    const [RecordeData, setRecordeData] = useState([])\n\n    const [ReportData, setReportData] = useState({})\n    const [step_1, setstep_1] = useState()\n    const [step_2, setstep_2] = useState()\n    const [step_3, setstep_3] = useState()\n    const [step_4, setstep_4] = useState()\n    const [cal, setcal] = useState(\"\")\n    const [list1, setlist1] = useState([])\n    const [SurveyLength, setSurveyLength] = useState()\n\n    const [data, setData] = useState({\n        // inputVal: 0,\n        last_name: \"\",\n        email: \"\",\n        password: \"\",\n        que1: \"\",\n    });\n\n\n\n    const percentage = {\n        percentage_1: parseInt(impVal * 10) + impVal * 10 + 20 / impVal * 10,\n        percentage_2: parseInt(impVal * 10),\n        percentage_3: 70,\n        percentage_4: 90,\n    }\n\n    const percentage2 = {\n        percentage_1: impVal * 10,\n        percentage_2: parseInt(impVal * 10) + impVal * 10 + 20 / impVal * 10,\n        percentage_3: 50,\n        percentage_4: 150,\n    }\n\n    const val1 = \"abc\";\n\n    const data_g = [\n        [\"Task\", \"Hours per Day\"],\n        [\"Work\", parseInt(impVal * 10) + parseInt(impVal) * 10 + 20 / parseInt(impVal) * 10],\n        [\"Eat\", parseInt(impVal * 10)],\n        [\"Commute\", 6],\n        [\"Sleep\", 7],\n    ];\n\n    const options = {\n        // title: \"My Daily Activities\",\n        legend: \"none\",\n        // legend: \"none\",\n        // pieSliceText: \"label\",\n        title: \"Swiss Language Use (100 degree rotation)\",\n        // pieStartAngle: 100,\n        slices: {\n            0: { color: \"rgb(214,225,185)\" },\n            1: { color: \"rgb(53,98,136)\" },\n            2: { color: \"rgb(55,55,94)\" },\n            3: { color: \"rgb(236,101,94)\" },\n\n        },\n    };\n\n\n    const colorOptions = {\n        slices: {\n            0: { color: \"rgb(168,26,12)\" },\n            1: { color: \"rgb(55,55,94)\" },\n            2: { color: \"rgb(53,98,136)\" },\n            3: { color: \"rgb(170,207,221)\" },\n        },\n    }\n\n\n    const options_2 = {\n        // title: \"My Daily Activities\",\n        legend: \"none\",\n        // legend: \"none\",\n        // pieSliceText: \"label\",\n        title: \"Shubham knows it\",\n        // pieStartAngle: 100,\n        slices: {\n            0: { color: \"rgb(214,225,185)\" },\n            1: { color: \"rgb(53,98,136)\" },\n            2: { color: \"rgb(55,55,94)\" },\n            3: { color: \"rgb(236,101,94)\" },\n\n        },\n    };\n\n\n\n    const checkUserHosting = async (hostEmail, callback) => {\n        let managersData = await fetch(`http://208.109.14.182:9000/masters/company/managers/${uid.companyId}`)\n        let companyData = await fetch(`http://208.109.14.182:9000/masters/company`)\n\n\n        //use string literals\n        let managersDataJson = await managersData.json();\n        let companyDataJson = await companyData.json();\n\n        return [managersDataJson, companyDataJson];\n    }\n\n\n    const ManagersLength = async () => {\n        var myHeaders4 = new Headers();\n        var requestOptions4 = {\n            method: 'GET',\n            headers: myHeaders4,\n            redirect: 'follow'\n        };\n\n\n        fetch(`http://208.109.14.182:9000/masters/company/managers/${uid.companyId}`, requestOptions4)\n            .then(response => response.json())\n            .then(result4 => {\n                // console.log(result4,\"res4\")\n\n                if (result4.status == 200) {\n                    // setlistRecord(result4.data);\n                    // console.log(result4 + \"hhhh\")\n                    // console.log(result4.data, \"hhs\")\n                    set_managers_length(result4.data.length)\n\n\n                    fetch(`http://208.109.14.182:9000/masters/company`, requestOptions4)\n                        .then(response => response.json())\n                        .then(result5 => {\n                            // setlistRecord(result5.data);\n                            if (result5.status == 200) {\n                                // console.log(result5.data, \"company lenght\")\n                                set_company_length(result5.data.length)\n\n\n                            }\n                        })\n                        .catch(error => console.log('error', error));\n\n                }\n\n            })\n            .catch(error => console.log('error', error));\n\n\n    }\n\n    const impValFn = (val, valmed, intoVal) => {\n        return parseFloat(val <= 1 ? valmed * intoVal : val * intoVal)\n    }\n\n    const GetAllRecords = async () => {\n        // var question_id = q_id;\n        var myHeaders = new Headers();\n        var requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n\n        fetch(`http://208.109.14.182:9000/masters/collect_feedback/${param_id}`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                if (result.status == 200) {\n\n                    // console.log(result.data)\n                    // let aa = JSON.parse(result.data[0])\n                    console.log(result.data[0])\n                    setfeedbackData(result.data)\n\n                    var myHeaders2 = new Headers();\n                    var requestOptions2 = {\n                        method: 'GET',\n                        headers: myHeaders2,\n                        redirect: 'follow'\n                    };\n\n                    fetch(`http://208.109.14.182:9000/masters/collect_feedback/email/${result.data[0].user_email}`, requestOptions2)\n                        .then(response => response.json())\n                        .then(result1 => {\n                            // setlistRecord(result1.data);\n                            if (result1.status == 200) {\n                                // console.log(result1)\n                                // console.log(result.data[0])\n                                // console.log(result1.data.length, \"hh\")\n                                set_survey_count(result1.data.length)\n\n\n\n                                fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\n                                    .then(response => response.json())\n                                    .then(result2 => {\n                                        // setlistRecord(result2.data);\n                                        if (result2.status == 200) {\n                                            // console.log(result2.data, \"allQuestionsByType\")\n\n                                            // console.log(result2.data[0], \"hh\")\n                                            let qID = result2.data[0].id;\n                                            setquestionId(qID);\n                                            // console.log(result2.data[0].id)\n                                            // console.log(result2.data[0].id)\n                                            setquestion(result2.data[0].question);\n                                            // getOptions(result.data[0].id);\n\n                                            var myHeaders = new Headers();\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\n                                            var raw1 = JSON.stringify({\n                                                surveyor_id: 5,\n                                                question_id: result2.data[0].id,\n                                            });\n                                            var requestOptions = {\n                                                method: \"POST\",\n                                                headers: myHeaders,\n                                                body: raw1,\n                                                redirect: \"follow\",\n                                            };\n\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\n                                                .then(response3 => response3.json())\n                                                .then(result3 => {\n                                                    // setlistRecord(result3.data);\n\n                                                    // console.log(questionId, \"jj\")\n                                                    if (result3.data) {\n                                                        // console.log(result3.data.id)\n                                                        // console.log(result3.data.answer)\n\n                                                        // setOptData(result3.data.id);\n                                                        // setOptionVal(result3.data.answer)\n                                                        console.log(\"result3\" + JSON.stringify(result3))\n                                                        let step = 1\n                                                        setVal(result3)\n                                                        setimpVal(result3.data)\n\n\n                                                    }\n\n                                                })\n\n                                            var myHeaders = new Headers();\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\n                                            var raw1 = JSON.stringify({\n                                                surveyor_id: 5,\n                                                question_id: result2.data[1].id,\n                                            });\n                                            var requestOptions = {\n                                                method: \"POST\",\n                                                headers: myHeaders,\n                                                body: raw1,\n                                                redirect: \"follow\",\n                                            };\n\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\n                                                .then(response3 => response3.json())\n                                                .then(result3 => {\n                                                    // setlistRecord(result3.data);\n                                                    // console.log(result3)\n                                                    // console.log(questionId, \"jj\")\n                                                    if (result3.data) {\n                                                        let halfwayPoint = result3.data.length / 2;\n                                                        let Devided1 = result3.data.splice(0, halfwayPoint)\n                                                        let Devided2 = result3.data.splice(0, halfwayPoint)\n                                                        set_impVal2Devided1(Devided1)\n                                                        set_impVal2Devided2(Devided2)\n\n                                                    }\n\n                                                })\n\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\n                                                .then(response3 => response3.json())\n                                                .then(result3_1 => {\n                                                    // setlistRecord(result3_1.data);\n\n                                                    // console.log(questionId, \"jj\")\n                                                    if (result3_1.data) {\n                                                        // console.log(result3_1.data)\n                                                        setVal2(result3_1)\n                                                        setimpVal2(result3_1.data)\n                                                        console.log(result3_1.data)\n                                                        console.log(result3_1)\n\n                                                        let step = 2;\n                                                        let myValues = result3_1.data;\n\n                                                    }\n\n                                                })\n\n\n\n                                            var myHeaders = new Headers();\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\n                                            var raw1 = JSON.stringify({\n                                                surveyor_id: 5,\n                                                question_id: result2.data[2].id,\n                                            });\n                                            var requestOptions = {\n                                                method: \"POST\",\n                                                headers: myHeaders,\n                                                body: raw1,\n                                                redirect: \"follow\",\n                                            };\n\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\n                                                .then(response3 => response3.json())\n                                                .then(result3 => {\n                                                    // setlistRecord(result3.data);\n                                                    // console.log(questionId, \"jj\")\n                                                    if (result3.status == 200) {\n                                                        console.log(result3)\n\n                                                        // console.log(result3.data)\n                                                        // console.log(result3.data.answer)\n\n                                                        // setOptData(result3.data.ids);\n                                                        // setOptionVal(result3.data.answer)\n                                                        setimpVal3(result3.data)\n                                                        setVal3(result3)\n\n                                                        console.log(result3)\n                                                        // console.log(impVal2)\n                                                        // console.log(impVal2[0])\n\n                                                    }\n\n                                                })\n\n\n\n                                            var myHeaders = new Headers();\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\n                                            var raw1 = JSON.stringify({\n                                                surveyor_id: 5,\n                                                question_id: result2.data[3].id,\n                                            });\n                                            var requestOptions = {\n                                                method: \"POST\",\n                                                headers: myHeaders,\n                                                body: raw1,\n                                                redirect: \"follow\",\n                                            };\n\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\n                                                .then(response3 => response3.json())\n                                                .then(result3 => {\n                                                    // setlistRecord(result3.data);\n\n                                                    // console.log(questionId, \"jj\")\n                                                    if (result3.status == 200) {\n                                                        // console.log(result3.data)\n                                                        // console.log(result3.data.answer)\n\n                                                        // setOptData(result3.data.ids);\n                                                        // setOptionVal(result3.data.answer)\n                                                        setVal4(result3)\n                                                        setimpVal4(result3.data)\n\n\n                                                    }\n\n                                                })\n\n\n                                            var myHeaders = new Headers();\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\n                                            var raw1 = JSON.stringify({\n                                                surveyor_id: 5,\n                                                question_id: result2.data[4].id,\n                                            });\n                                            var requestOptions = {\n                                                method: \"POST\",\n                                                headers: myHeaders,\n                                                body: raw1,\n                                                redirect: \"follow\",\n                                            };\n\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\n                                                .then(response3 => response3.json())\n                                                .then(result3 => {\n                                                    // setlistRecord(result3.data);\n\n                                                    // console.log(questionId, \"jj\")\n                                                    if (result3.data) {\n                                                        // console.log(result3.data)\n                                                        // console.log(result3.data.answer)\n\n                                                        // setOptData(result3.data.ids);\n                                                        // setOptionVal(result3.data.answer)\n                                                        setimpVal5(result3.data)\n\n\n                                                    }\n\n                                                })\n\n\n\n\n                                            var myHeaders = new Headers();\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\n                                            var raw1 = JSON.stringify({\n                                                surveyor_id: 5,\n                                                question_id: result2.data[6].id,\n                                            });\n                                            var requestOptions = {\n                                                method: \"POST\",\n                                                headers: myHeaders,\n                                                body: raw1,\n                                                redirect: \"follow\",\n                                            };\n\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\n                                                .then(response3 => response3.json())\n                                                .then(result4 => {\n                                                    // setlistRecord(result4.data);\n\n                                                    // console.log(questionId, \"jj\")\n                                                    if (result4.data) {\n                                                        // console.log(result4.data)\n                                                        // console.log(result4.data.answer)\n\n                                                        // setOptData(result4.data.ids);\n                                                        // setOptionVal(result4.data.answer)\n                                                        setimpVal7(result4.data)\n\n\n                                                    }\n\n                                                })\n\n                                            var myHeaders = new Headers();\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\n                                            var raw1 = JSON.stringify({\n                                                surveyor_id: 5,\n                                                question_id: result2.data[7].id,\n                                            });\n                                            var requestOptions = {\n                                                method: \"POST\",\n                                                headers: myHeaders,\n                                                body: raw1,\n                                                redirect: \"follow\",\n                                            };\n\n                                            fetch(`http://208.109.14.182:9000/masters/survey_answers_same`, requestOptions)\n                                                .then(response3 => response3.json())\n                                                .then(result5 => {\n                                                    // setlistRecord(result5.data);\n                                                    // console.log(result5.data + \"ccc\")\n\n                                                    // console.log(questionId, \"jj\")\n                                                    if (result5.data) {\n                                                        // console.log(result5.data.answer + \"ccc\")\n                                                        // console.log(result5.data.answer)\n\n                                                        // setOptData(result5.data.ids);\n                                                        // setOptionVal(result5.data.answer)\n                                                        setimpVal8(result5.data.answer)\n\n\n                                                    }\n\n                                                })\n\n\n\n                                            var myHeaders = new Headers();\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\n                                            var raw1 = JSON.stringify({\n                                                surveyor_id: 5,\n                                                question_id: result2.data[5].id,\n                                            });\n                                            var requestOptions = {\n                                                method: \"POST\",\n                                                headers: myHeaders,\n                                                body: raw1,\n                                                redirect: \"follow\",\n                                            };\n\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\n                                                .then(response3 => response3.json())\n                                                .then(result3 => {\n                                                    // setlistRecord(result3.data);\n\n                                                    // console.log(questionId, \"jj\")\n                                                    if (result3.data) {\n                                                        // console.log(result3.data)\n                                                        // console.log(result3.data.answer)\n\n                                                        // setOptData(result3.data.ids);\n                                                        // setOptionVal(result3.data.answer)\n                                                        setimpVal6(result3.data)\n\n\n                                                    }\n\n                                                })\n\n\n                                            var myHeaders4 = new Headers();\n                                            var requestOptions4 = {\n                                                method: 'GET',\n                                                headers: myHeaders4,\n                                                redirect: 'follow'\n                                            };\n\n                                            // console.log(result.data[0].company_id)\n\n                                            fetch(`http://208.109.14.182:9000/masters/company/managers/${result.data[0].company_id}`, requestOptions4)\n                                                .then(response => response.json())\n                                                .then(result4 => {\n                                                    // console.log(result4,\"res4\")\n\n                                                    if (result4.status == 200) {\n                                                        // setlistRecord(result4.data);\n                                                        // console.log(result4)\n                                                        // console.log(result4.data, \"hhs\")\n                                                        // set_managers_length(result4.data.length)\n\n\n                                                        fetch(`http://208.109.14.182:9000/masters/company`, requestOptions4)\n                                                            .then(response => response.json())\n                                                            .then(result5 => {\n                                                                // setlistRecord(result5.data);\n                                                                if (result5.status == 200) {\n                                                                    // console.log(result5.data, \"company lenght\")\n                                                                    set_company_length(result5.data.length)\n\n                                                                    // console.log(result, \"eer\")\n                                                                    // console.log(result1)\n                                                                    // console.log(result2)\n                                                                    // console.log(result4)\n                                                                    // console.log(result5)\n                                                                    // exportPDFWithMethod();\n\n                                                                }\n                                                            })\n                                                            .catch(error => console.log('error', error));\n\n                                                    }\n\n                                                })\n                                                .catch(error => console.log('error', error));\n\n\n\n                                        }\n\n                                    })\n                                    .catch(error => console.log('error', error));\n\n\n\n\n                            }\n\n                        })\n                        .catch(error => console.log('error', error));\n                }\n            })\n    }\n\n\n    useEffect(() => {\n        ManagersLength();\n\n        console.log(colorOptions)\n        GetSurveyFeedRec()\n        GetAllRecords().then(() => {\n            setTimeout(() => {\n                // exportPDFWithMethod()\n            }, 2000);\n        })\n\n    }, []);\n\n\n\n    const surveyMean = (value) => {\n        // console.log(value)\n        // console.log(`${value} / ${survey_count} = ${value/survey_count}`)\n        let survey_mean = value / survey_count;\n        // let internal_benchmark = survey_mean * survey_count / managers_length;\n        // let external_benchmark = internal_benchmark * survey_count / company_length;\n        return survey_mean\n    }\n\n\n\n    const internalBenchmark = (value) => {\n        // console.log(value)\n        // console.log(`${value} / ${survey_count}* ${survey_count} / ${managers_length}`)\n        let internal_benchmark = value / survey_count * survey_count / managers_length;\n        return internal_benchmark\n    }\n\n    const externalBenchmark = (value) => {\n        // console.log(`${value} / ${survey_count} * ${survey_count} / ${managers_length}* ${survey_count} / ${company_length}`)\n        let external_benchmark = value / survey_count * survey_count / managers_length * survey_count / company_length;\n        return external_benchmark\n    }\n\n    const data_g_1 = [\n        [\"Task\", \"Hours per Day\"],\n        [\"Self Assessment\", parseInt(impVal * 10)],\n        [\"Survey Mean\", surveyMean(impVal * 10)],\n        [\"Internal Benchmark\", internalBenchmark(impVal * 10)],\n        [\"External Benchmark\", externalBenchmark(impVal * 10)],\n    ];\n\n\n    function checkbtn() {\n        console.log(cal)\n        console.log(list1)\n\n    }\n\n    const calculate = (val) => {\n        console.log(val)\n        var featSum = 0\n        // featSum += parseInt(val[0].range_val)\n        // setcal([...cal, featSum])\n\n        // setcal((prev) => ({ ...prev, ...newData }));\n\n        console.log(cal)\n        console.log(featSum)\n\n    }\n\n    // const getActivity = async () => {\n    //     let jsonData = await checkUserHosting();\n    //     //now you can directly use jsonData\n    // }\n\n    const GetSurveyFeedRec = async () => {\n        // console.log(managers_length ? managers_length : 0)\n        let jsonData = await checkUserHosting();\n\n        // console.log(getActivity())\n\n        var myHeaders = new Headers();\n        var requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n        console.log(uid)\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/company/${uid.companyId}`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                // setlistRecord(result.data);\n                console.log(result.data.length)\n                console.log(result.data)\n                let MyValues = result.data;\n                console.log(\"Edit Values\", MyValues);\n                if (MyValues) {\n\n                    setSurveyLength(MyValues.length)\n\n                }\n                // console.log(MyValues.reduce(add, 0))\n                // const sum = MyValues.reduce(add, 0)\n\n                // console.log(sum)\n\n\n                async function calco(val, len) {\n                    let jsonData = await checkUserHosting();\n                    let manager_count = jsonData[0].totalItems;\n                    let company_count = jsonData[1].totalItems;\n\n                    console.log(manager_count)\n                    let surveyMean = val / manager_count;\n                    let internalBenchmark = surveyMean * len / manager_count;\n                    let externalBenchmark = internalBenchmark * len / company_count;\n\n                    return { surveyMean, internalBenchmark, externalBenchmark }\n                }\n\n                async function sumArray(array) {\n                    let sum = 0 // the sum is initialed to 0\n\n                    /* js arrays are zero-index based\n                    ourArray.length = 5, the initialization block is set to 0.\n                    the last item is index 4 that is < 5 (what we define in the condition block)\n                    */\n                    // var featSum = []\n                    var [feature1_sum0] = [0];\n                    var [feature1Sum0, feature1Sum1, feature1Sum2, feature1Sum3, feature1Sum4, feature1Sum5, feature1Sum6, feature1Sum7, feature1Sum8, feature1Sum9] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n                    var [feature2Sum0, feature2Sum1, feature2Sum2, feature2Sum3, feature2Sum4] = [0, 0, 0, 0, 0]\n                    var [feature3Sum0, feature3Sum1, feature3Sum2] = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\n                    var [feature5_sum0] = [0];\n\n                    var [featArr0, featArr1, featArr2, featArr3, featArr4] = [[], [], [], [], []]\n                    // var featArr1 = []\n\n                    for (let i = 0; i < array.length; i++) {\n                        // take every item in the array and add it to sum variable\n                        console.log(eval(array[i].feature)[0].range_val)\n                        // console.log(eval(array[i].feature1))\n                        var feat = eval(array[i].feature)\n                        var feat1 = eval(array[i].feature1)\n                        var feat2 = eval(array[i].feature2)\n                        var feat3 = eval(array[i].feature3)\n                        // var feat4 = eval(array[i].feature4)\n                        var feat5 = eval(array[i].feature5)\n                        // var feat6 = eval(array[i].feature6)\n                        // var feat7 = eval(array[i].feature7)\n\n                        // featSum += parseInt(eval(array[i].feature)[0].range_val)\n                        // for (var a = 0; a < 4; a++) {\n                        console.log(feat[0].range_val)\n\n                        feature1_sum0 += parseInt(feat[0].range_val)\n\n                        feature1Sum0 += parseInt(feat1[0].range_val)\n                        feature1Sum1 += parseInt(feat1[1].range_val)\n                        feature1Sum2 += parseInt(feat1[2].range_val)\n                        feature1Sum3 += parseInt(feat1[3].range_val)\n                        feature1Sum4 += parseInt(feat1[4].range_val)\n                        feature1Sum5 += parseInt(feat1[5].range_val)\n                        feature1Sum6 += parseInt(feat1[6].range_val)\n                        feature1Sum7 += parseInt(feat1[7].range_val)\n                        feature1Sum8 += parseInt(feat1[8].range_val)\n                        feature1Sum9 += parseInt(feat1[9].range_val)\n\n\n                        feature2Sum0 += parseInt(feat2[0].range_val)\n                        feature2Sum1 += parseInt(feat2[1].range_val)\n                        feature2Sum2 += parseInt(feat2[2].range_val)\n                        feature2Sum3 += parseInt(feat2[3].range_val)\n                        feature2Sum4 += parseInt(feat2[4].range_val)\n\n                        feature3Sum0[0] += parseInt(feat3[0].range_val)\n                        feature3Sum0[1] += parseInt(feat3[1].range_val)\n                        feature3Sum0[2] += parseInt(feat3[2].range_val)\n                        feature3Sum1[0] += parseInt(feat3[0].range_val1)\n                        feature3Sum1[1] += parseInt(feat3[1].range_val1)\n                        feature3Sum1[2] += parseInt(feat3[2].range_val1)\n                        feature3Sum2[0] += parseInt(feat3[0].range_val2)\n                        feature3Sum2[1] += parseInt(feat3[1].range_val2)\n                        feature3Sum2[2] += parseInt(feat3[2].range_val2)\n\n\n                        feature5_sum0 += parseInt(feat5[0].range_val)\n\n\n\n                        // feature3Sum1 += parseInt(feat3[1].range_val)\n                        // feature3Sum2 += parseInt(feat3[2].range_val)\n\n\n\n\n                    }\n\n\n\n\n                    // console.log(feature3Sum0[1])\n\n                    // console.log(feature3Sum1)\n                    // console.log(feature3Sum2)\n\n                    console.log(jsonData)\n                    let survey_mean = feature1_sum0 / array.length;\n                    let internal_benchmark = (survey_mean * array.length) / 2;\n                    let external_benchmark = (survey_mean * array.length) / 2;\n                    let arraylength = array.length;\n\n                    console.log(await calco(feature1Sum0, arraylength))\n                    featArr0.push(await calco(feature1Sum0, arraylength))\n\n                    featArr1.push(await calco(feature1Sum0, arraylength))\n                    featArr1.push(await calco(feature1Sum1, arraylength))\n                    featArr1.push(await calco(feature1Sum2, arraylength))\n                    featArr1.push(await calco(feature1Sum3, arraylength))\n                    featArr1.push(await calco(feature1Sum4, arraylength))\n                    featArr1.push(await calco(feature1Sum5, arraylength))\n                    featArr1.push(await calco(feature1Sum6, arraylength))\n                    featArr1.push(await calco(feature1Sum7, arraylength))\n                    featArr1.push(await calco(feature1Sum8, arraylength))\n                    featArr1.push(await calco(feature1Sum9, arraylength))\n\n\n                    featArr2.push(await calco(feature2Sum0, arraylength))\n                    featArr2.push(await calco(feature2Sum1, arraylength))\n                    featArr2.push(await calco(feature2Sum2, arraylength))\n                    featArr2.push(await calco(feature2Sum3, arraylength))\n                    featArr2.push(await calco(feature2Sum4, arraylength))\n\n\n                    console.log(await calco(feature3Sum0[0], arraylength))\n                    console.log(await calco(feature3Sum0[1], arraylength))\n                    console.log(await calco(feature3Sum0[2], arraylength))\n\n                    console.log(await calco(feature3Sum1[0], arraylength))\n                    console.log(await calco(feature3Sum1[1], arraylength))\n                    console.log(await calco(feature3Sum1[2], arraylength))\n\n\n                    console.log(await calco(feature3Sum2[0], arraylength))\n                    console.log(await calco(feature3Sum2[1], arraylength))\n                    console.log(await calco(feature3Sum2[2], arraylength))\n\n                    featArr3.push([await calco(feature3Sum0[0], arraylength), await calco(feature3Sum1[0], arraylength), await calco(feature3Sum2[0], arraylength)])\n                    featArr3.push([await calco(feature3Sum0[1], arraylength), await calco(feature3Sum1[1], arraylength), await calco(feature3Sum2[1], arraylength)])\n                    featArr3.push([await calco(feature3Sum0[2], arraylength), await calco(feature3Sum1[2], arraylength), await calco(feature3Sum2[2], arraylength)])\n\n\n                    featArr4.push(await calco(feature5_sum0, arraylength))\n\n\n                    // featArr3.push([feature3Sum0[0], feature3Sum0[1], feature3Sum0[2]])\n                    // featArr3.push([feature3Sum1[0], feature3Sum1[1], feature3Sum1[2]])\n                    // featArr3.push([feature3Sum2[0], feature3Sum2[1], feature3Sum2[2]])\n\n                    // console.log(\"fatSum\" + featSum1) // 11\n                    // console.log(sum) // 11\n                    // return sum\n                    // return sum\n                    console.log(featArr0) // 11\n                    console.log(featArr1) // 11\n                    console.log(featArr2) // 11\n                    console.log(featArr3) // 11\n                    console.log(featArr4) // 11\n\n\n\n                    return [featArr0, featArr1, featArr2, featArr3, featArr4]\n\n                }\n                //   console.log(add(3,2))\n\n                sumArray(MyValues).then((result) => {\n                    if (result.length == 5) {\n                        setlist1(result)\n                        console.log(result)\n                    }\n                    // setfeat(featArr0)\n                    // setlist1(list1 => [...list1, featArr0])\n                    // setlist1(list1 => [...list1, featArr1])\n                    // setlist1(list1 => [...list1, featArr2])\n                    // setlist1(list1 => [...list1, featArr3])\n                    // setlist1(list1 => [...list1, featArr4])\n                }); // logs 11\n\n\n\n\n            })\n\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/${param_id}`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                // setlistRecord(result.data);\n                console.log(result)\n                console.log(result.data)\n                setRecordeData(result.data)\n                console.log(result.data.feature)\n\n                let MyValues = result.data;\n                console.log(\"Edit Values\", MyValues);\n                MyValues.map((x, i) => {\n                    var Feature = eval(x.feature);\n                    var Feature1 = eval(x.feature1);\n                    var Feature2 = eval(x.feature2);\n                    var Feature3 = eval(x.feature3);\n                    var Feature4 = eval(x.feature4);\n                    var Feature5 = eval(x.feature5);\n                    var Feature6 = eval(x.feature6);\n                    var Feature7 = eval(x.feature7);\n\n\n\n                    var optionVal1 = Feature4.filter(({ status }) => status === true)\n                    var optionVal2 = Feature6.filter(({ favstatus }) => favstatus === true)\n\n                    console.log(optionVal1)\n\n                    if (Feature) {\n                        console.log(\"feature\", Feature);\n                        // setInputListFinal([Feature],[Feature1])\n                        setInputListFinal(inputListFinal => [...inputListFinal, { Feature, Feature1, Feature2, Feature3, Feature4, Feature5, Feature6, Feature7 }])\n\n                    }\n                    if (optionVal1) {\n                        console.log(\"feature\", Feature);\n                        // setInputListFinal([Feature],[Feature1])\n                        setInputListFinal(inputListFinal => [...inputListFinal, { optionVal1 }])\n\n                    }\n\n                    if (optionVal2) {\n                        console.log(\"feature\", Feature);\n                        // setInputListFinal([Feature],[Feature1])\n                        setInputListFinal(inputListFinal => [...inputListFinal, { optionVal2 }])\n\n                    }\n\n                })\n\n            })\n    }\n\n    return (\n        <>\n\n\n\n\n            {/* {console.log(list1.length > 0 ? list1 : null)} */}\n\n            {DisplayDiv && list1.length == 5 ? (\n                <>\n\n\n                    {console.log(inputListFinal)}\n                    {console.log(list1)}\n\n                    {/* <Pdf_page1 /> */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\" style={{ padding: \"25px 0px 0px 25px\" }} >\n                                <div >\n                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n\n                                    <div style={{ position: \"relative\", top: \"58px\", left: \"14px\", fontSize: \"40px\", }}>\n\n                                        <div className=\"square_bar\"></div>\n                                        <div className='page_left_header' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                            <span>Overall</span><br>\n                                            </br><span>Performance</span>\n                                        </div>\n                                        <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                            <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                            </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\n                                        </div>\n                                        <div className='row p-5' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", border: \"0px solid black\", width: \"100%\", position: \"relative\", left: \"5%\", top: \"-40px\" }}>\n                                            {console.log(inputListFinal)}\n\n\n                                            {/* {inputListFinal[0].Feature.map((item, key) => {\n                                                    console.log(item)\n                                                })} */}\n\n                                            {/* {inputListFinal[0].Feature1.map((item, key) => {\n                                                    console.log(item)\n                                                })} */}\n\n\n                                            {inputListFinal[0].Feature.map((item, key) => {\n                                                // { console.log(item) }\n\n                                                return (\n                                                    <>\n                                                        <div className='col-2'>\n                                                            <div style={{ fontSize: \"16px\" }}>\n                                                                <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\n                                                                    <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].surveyMean).toFixed(1)}</span><br />\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Survey</span><br />\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Mean</span>\n                                                                </div>\n                                                            </div>\n\n                                                            <div style={{ padding: impValFn(list1[key][0].surveyMean, 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[0].color }} >\n                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                        <div className='col-2' style={{ margin: \"0px 18px 0px 18px\" }}>\n                                                            <div style={{ fontSize: \"16px\" }}>\n                                                                <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\n                                                                    <span style={{ fontSize: \"20px\", }}>{Math.ceil(item.range_val).toFixed(1)}</span><br />\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Self</span><br />\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Assessment</span>\n                                                                </div>\n                                                            </div>\n\n                                                            {/* Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) : 92 */}\n                                                            <div style={{ padding: impValFn((item.range_val), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[1].color }} >\n                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\n                                                            </div>\n                                                        </div>\n                                                        <div className='col-2' style={{ margin: \"0px 18px 0px 3px\" }}>\n                                                            <div style={{ fontSize: \"16px\" }}>\n                                                                <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\n                                                                    <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].internalBenchmark).toFixed(1)}</span><br />\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Internal</span><br />\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\n                                                            </div>\n                                                            {/* <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[2].color }} > */}\n\n                                                            <div style={{ padding: impValFn((list1[key][0].internalBenchmark), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[2].color }} >\n                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\n                                                            </div>\n                                                        </div>\n                                                        <div className='col-2'>\n                                                            <div style={{ fontSize: \"16px\" }}>\n                                                                <div style={{ position: \"relative\", top: \"300px\", right: \"-24%\" }}>\n                                                                    <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].externalBenchmark).toFixed(1)}</span><br />\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>External </span><br />\n                                                                    <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\n                                                            </div>\n                                                            {/* <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[3].color }} > */}\n\n                                                            <div style={{ padding: impValFn((list1[key][0].externalBenchmark), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[3].color }} >\n                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\n                                                            </div>\n\n                                                        </div>\n                                                    </>\n                                                )\n                                            })}\n\n                                        </div>\n                                    </div>\n\n                                </div>\n\n\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n\n                            </div >\n                        </>\n                    ) : null}\n                    {/* <Pdf_page2 /> */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\" >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\n\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div style={{ borderLeft: \"6px solid #799FCB\", height: \"84px\" }}></div>\n                                                <div className='page_left_header'>\n                                                    <span>Personal Brand </span><br>\n                                                    </br><span>Favorability Rating</span>\n                                                </div>\n\n\n\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                <div style={{ fontSize: \"7px\", fontWeight: \"lighter\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\n                                                </div>\n                                            </div>\n\n                                            <div style={{ position: \"relative\", bottom: \"30px\", left: \"18%\" }}>\n                                                <div style={{ margin: \"5px\" }}>\n\n                                                    <> <div style={{ width: 312, height: 312, position: \"relative\", left: \"0%\" }}>\n                                                        {/* <h1>{impVal}</h1> */}\n\n                                                        {inputListFinal[0].Feature.map((item, key) => {\n                                                            return (\n                                                                <>\n                                                                    <div>\n                                                                        <div style={{ fontSize: \"8px\", position: \"relative\", top: \"60px\", color: \"white\" }}>{item.answer ? (item.answer) : null}</div>\n                                                                        <div style={{ fontSize: \"8px\", position: \"relative\", top: \"80px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean.toFixed(1))}</div>\n                                                                        <div style={{ fontSize: \"8px\", position: \"relative\", top: \"100px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench.toFixed(1))}</div>\n                                                                        <div style={{ fontSize: \"8px\", position: \"relative\", top: \"120px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench.toFixed(1))}</div>\n                                                                    </div>\n\n\n\n\n\n                                                                    <CircularProgressbarWithChildren\n                                                                        value={impValFn((list1[key][0].surveyMean), 1, 10)}\n                                                                        // text={`${percentage}%`}\n                                                                        // circleRatio={5}\n                                                                        strokeWidth={10}\n                                                                        styles={buildStyles({\n\n                                                                            // Rotation of path and trail, in number of turns (0-1)\n                                                                            rotation: 1,\n\n                                                                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                                                            strokeLinecap: 'butt',\n\n                                                                            // Text size\n                                                                            textSize: '16px',\n\n                                                                            // How long animation takes to go from one percentage to another, in seconds\n                                                                            pathTransitionDuration: 0.5,\n                                                                            pathTransition: 0.7,\n\n                                                                            // Can specify path transition in more detail, or remove it entirely\n                                                                            // pathTransition: 'none',\n\n                                                                            // Colors\n                                                                            pathColor: `rgb(168,26,12, ${impValFn((list1[key][0].surveyMean), 1, 10)})`,\n\n                                                                            // pathColor: `rgb(168,26,12, ${item.answer * 10 / 100})`,\n                                                                            textColor: '#f88',\n                                                                            // trailColor: '#d6d6d6',\n                                                                            backgroundColor: '#3e98c7',\n                                                                        })}\n                                                                    >\n                                                                        {/* <hr style={{width:\"20%\"}} /> */}\n\n                                                                        <div style={{ width: 246, height: 246, }}>\n                                                                            {/* <span>{impValFn(item.answer,1,10)}</span> */}\n                                                                            <CircularProgressbarWithChildren\n                                                                                // value={Math.ceil(9) * 10}\n                                                                                value={impValFn(item.range_val, 1, 10)}\n                                                                                // text={`${percentage}%`}\n                                                                                // circleRatio={5}\n                                                                                strokeWidth={14}\n                                                                                styles={buildStyles({\n\n                                                                                    // Rotation of path and trail, in number of turns (0-1)\n                                                                                    rotation: 1,\n\n                                                                                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                                                                    strokeLinecap: 'butt',\n\n                                                                                    // Text size\n                                                                                    textSize: '16px',\n\n                                                                                    // How long animation takes to go from one percentage to another, in seconds\n                                                                                    pathTransitionDuration: 0.5,\n                                                                                    pathTransition: 0.7,\n\n                                                                                    // Can specify path transition in more detail, or remove it entirely\n                                                                                    // pathTransition: 'none',\n\n                                                                                    // Colors\n                                                                                    pathColor: `rgb(55,55,94, ${impValFn(item.range_val, 1, 10)})`,\n                                                                                    textColor: '#f88',\n                                                                                    // trailColor: '#d6d6d6',\n                                                                                    backgroundColor: '#3e98c7',\n                                                                                })}\n                                                                            >\n\n                                                                                <div style={{ width: 172, height: 172 }}>\n                                                                                    <CircularProgressbarWithChildren\n                                                                                        value={impValFn((list1[key][0].internalBenchmark), 1, 10)}\n                                                                                        // text={`${percentage}%`}\n                                                                                        // circleRatio={5}\n                                                                                        strokeWidth={18}\n                                                                                        styles={buildStyles({\n\n                                                                                            // Rotation of path and trail, in number of turns (0-1)\n                                                                                            rotation: 1,\n\n                                                                                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                                                                            strokeLinecap: 'butt',\n\n                                                                                            // Text size\n                                                                                            textSize: '16px',\n\n                                                                                            // How long animation takes to go from one percentage to another, in seconds\n                                                                                            pathTransitionDuration: 0.5,\n                                                                                            pathTransition: 0.7,\n\n                                                                                            // Can specify path transition in more detail, or remove it entirely\n                                                                                            // pathTransition: 'none',\n\n                                                                                            // Colors\n                                                                                            pathColor: `rgb(53,98,136, ${impValFn((list1[key][0].internalBenchmark), 1, 10)})`,\n                                                                                            textColor: '#f88',\n                                                                                            // trailColor: '#d6d6d6',\n                                                                                            backgroundColor: '#3e98c7',\n                                                                                        })}\n                                                                                    >\n\n                                                                                        <div style={{ width: 123, height: 123 }}>\n                                                                                            <CircularProgressbarWithChildren\n                                                                                                value={impValFn((list1[key][0].externalBenchmark), 1, 10)}\n                                                                                                // text={`${percentage}%`}\n                                                                                                // circleRatio={5}\n\n                                                                                                strokeWidth={26}\n                                                                                                styles={buildStyles({\n\n                                                                                                    // Rotation of path and trail, in number of turns (0-1)\n                                                                                                    rotation: 1,\n\n                                                                                                    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                                                                                    strokeLinecap: 'butt',\n\n                                                                                                    // Text size\n                                                                                                    textSize: '16px',\n\n                                                                                                    // How long animation takes to go from one percentage to another, in seconds\n                                                                                                    pathTransitionDuration: 0.5,\n                                                                                                    pathTransition: 0.7,\n\n                                                                                                    // Can specify path transition in more detail, or remove it entirely\n                                                                                                    // pathTransition: 'none',\n\n                                                                                                    // Colors\n                                                                                                    pathColor: `rgb(170,207,221, ${impValFn((list1[key][0].externalBenchmark), 1, 10)})`,\n                                                                                                    textColor: '#f88',\n                                                                                                    // trailColor: '#d6d6d6',\n                                                                                                    backgroundColor: '#3e98c7',\n                                                                                                })}\n                                                                                            >\n\n\n\n                                                                                            </CircularProgressbarWithChildren>\n                                                                                        </div>\n\n\n                                                                                    </CircularProgressbarWithChildren>\n                                                                                </div>\n\n                                                                            </CircularProgressbarWithChildren>\n                                                                        </div>\n\n\n\n                                                                    </CircularProgressbarWithChildren>\n\n                                                                </>\n                                                            )\n                                                        })}\n                                                    </div>\n\n                                                    </>\n                                                </div>\n\n\n                                            </div>\n\n                                        </div>\n\n                                    </div>\n\n                                </div>\n\n                                {inputListFinal[0].Feature.map((item, key) => {\n                                    return (\n                                        <>\n                                            <div className='row block_sqr p-5'>\n                                                <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                    <div className='row'>\n                                                        <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                                        </div>\n                                                        <div style={{\n                                                            // color:\"black\",\n                                                            fontSize: \"9px\",\n                                                            position: \"relative\",\n                                                            // bottom:\"90px\",\n                                                            left: \"-14px\",\n                                                        }}>\n                                                            <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(list1[key][0].surveyMean).toFixed(1)}</span><br>\n                                                            </br><span>Survey</span><br>\n                                                            </br><span>Mean</span>\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n                                                <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                    <div className='row'>\n                                                        <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                                        </div>\n\n                                                        <div style={{\n                                                            // color:\"black\",\n                                                            fontSize: \"9px\",\n                                                            position: \"relative\",\n                                                            // bottom:\"90px\",\n                                                            left: \"-14px\",\n                                                        }}>\n                                                            <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(item.range_val).toFixed(1)}</span><br>\n                                                            </br><span>Self</span><br>\n                                                            </br><span>Assessment</span>\n                                                        </div>\n\n                                                    </div>\n\n                                                </div>\n                                                <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                    <div className='row'>\n                                                        <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                                        </div>\n                                                        <div style={{\n                                                            // color:\"black\",\n                                                            fontSize: \"9px\",\n                                                            position: \"relative\",\n                                                            // bottom:\"90px\",\n                                                            left: \"-14px\",\n                                                        }}>\n                                                            <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(list1[key][0].internalBenchmark).toFixed(1)}</span><br>\n                                                            </br><span>Internal</span><br>\n                                                            </br><span>Benchmark</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                    <div className='row'>\n                                                        <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                                        </div>\n                                                        <div style={{\n                                                            // color:\"black\",\n                                                            fontSize: \"9px\",\n                                                            position: \"relative\",\n                                                            // bottom:\"90px\",\n                                                            left: \"-14px\",\n                                                        }}>\n                                                            <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(list1[key][0].externalBenchmark).toFixed(1)}</span><br>\n                                                            </br><span>External</span><br>\n                                                            </br><span>Benchmark</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </>\n                                    )\n                                })}\n\n                                < hr style={{ border: \"1px solid black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"10px\" }} />\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n                            </div >\n                        </>\n                    ) : null}\n                    {/* page ----3 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Universal </span><br>\n                                                    </br><span>Competency Ratings</span>\n                                                </div>\n\n\n\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\n                                                </div>\n                                            </div>\n\n                                            <div style={{ position: \"relative\", bottom: \"5px\" }}>\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\n                                                    <div style={{ position: \"relative\", bottom: \"34px\", fontSize: \"8px\" }}>10.0</div>\n                                                    <div style={{ position: \"relative\", bottom: \"-5px\", fontSize: \"8px\" }}>5.0</div>\n                                                    <div style={{ position: \"relative\", bottom: \"-34px\", fontSize: \"8px\" }}>0.1</div>\n                                                </div>\n                                                {impVal2 ? (\n                                                    <>\n                                                        <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\n                                                            {inputListFinal[0].Feature1.map((item, key) => (\n                                                                <>\n                                                                    {[Val2.[`data${key}`][0].length > 0] ? (<>\n                                                                        <div style={{ marginLeft: \"10px\" }}>\n                                                                            <div className='graph_bar'>\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].surveyMean)] * 10 <= 100 ? [Math.ceil(list1[1][key].surveyMean)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[0].color) : \"rgb(218,37,12)\", }}></div>\n                                                                            </div>\n                                                                            <div className='graph_bar'>\n                                                                                <div style={{ width: \"100%\", height: item.range_val * 10, backgroundColor: key % 1 == 0 ? (colorOptions.slices[1].color) : \"rgb(235,82,71)\", }}></div>\n                                                                            </div>\n                                                                            <div className='graph_bar'>\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].internalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key].internalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[2].color) : \"rgb(241,158,152)\", }}></div>\n                                                                            </div>\n                                                                            <div className='graph_bar'>\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].externalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key].externalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[3].color) : \"rgb(249,218,216)\", }}></div>\n\n                                                                            </div>\n                                                                            <div style={{ width: \"16px\", height: \"10rem\", float: \"left\" }}></div>\n\n                                                                        </div>\n                                                                    </>) : null}\n                                                                </>\n                                                            ))}\n                                                            <div class=\"display-table\">\n                                                                <div style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\n                                                                    {impVal2.map((item, key) => (\n                                                                        <div className='options2_1 '>{item.option}</div>\n\n                                                                    ))}\n\n\n                                                                </div>\n\n                                                            </div>\n\n                                                        </div>\n\n\n                                                    </>\n                                                ) : null}\n\n\n                                            </div>\n\n                                        </div>\n\n                                    </div>\n                                </div>\n\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"-20px\" }}>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\n                                        </div>\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\n                                        </div>\n\n                                    </div>\n\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\n                                        </div>\n                                    </div>\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n                            </div>\n                        </>\n                    ) : null}\n                    {/* page -----4 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\n\n\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Universal</span><br>\n                                                    </br><span>Competency Ratings</span>\n                                                </div>\n\n\n\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\n                                                </div>\n                                            </div>\n\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\n                                                </div>\n\n                                                {impVal2Devided1 && Val2 ? (\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\n\n                                                        {(inputListFinal[0].Feature1.slice(5, 10)).map((item, key) => {\n                                                            console.log(item)\n                                                            console.log(\"key=> \" + key)\n                                                            console.log(\"key=> \" + (key + 5))\n\n                                                        })}\n\n\n                                                        {(inputListFinal[0].Feature1.slice(0, 5)).map((item, key) => (\n                                                            <>\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\n                                                                    <>\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].surveyMean)] * 10 <= 100 ? [Math.ceil(list1[1][key].surveyMean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[0].color : \"rgb(55,55,94)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: item.range_val * 10, backgroundColor: key % 1 == 0 ? colorOptions.slices[1].color : \"rgb(86,86,151)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].internalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key].internalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[2].color : \"rgb(140,140,210)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key].externalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key].externalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[3].color : \"rgb(155,155,246)\", }}></div>\n                                                                        </div>\n                                                                    </>\n                                                                ) : null}\n                                                            </>))}\n\n\n\n\n                                                        <div className='row graph_labels2' >\n                                                            {impVal2Devided1.map((item, key) => (\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\n                                                                    {item.option}\n                                                                    {/* {console.log(item.option)} */}\n                                                                </div>\n                                                            ))}\n                                                        </div>\n\n                                                    </div>\n                                                ) : null}\n                                            </div>\n\n\n\n                                        </div>\n\n\n\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\" style={{ visibility: \"hidden\" }}></div>\n                                                <div className='page_left_header'>\n                                                    {/* <span>Universal</span><br>\n                                            </br><span>Competency Ratings</span> */}\n                                                </div>\n\n\n\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                                    {/* <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                            </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span> */}\n                                                </div>\n                                            </div>\n\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\n                                                </div>\n\n                                                {impVal2Devided2 && Val2 ? (\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\n                                                        {(inputListFinal[0].Feature1.slice(5, 10)).map((item, key) => (\n                                                            <>\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\n                                                                    <>\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\n                                                                        <div className='graph_bar_2'>\n                                                                            {/* {Val2.[`data${key + 1}`][0].survey_mean} */}\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key + 5].surveyMean)] * 10 <= 100 ? [Math.ceil(list1[1][key + 5].surveyMean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[0].color : \"rgb(55,55,94)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: item.range_val * 10, backgroundColor: key % 1 == 0 ? colorOptions.slices[1].color : \"rgb(86,86,151)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key + 5].internalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key + 5].internalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[2].color : \"rgb(140,140,210)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(list1[1][key + 5].externalBenchmark)] * 10 <= 100 ? [Math.ceil(list1[1][key + 5].externalBenchmark)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[3].color : \"rgb(155,155,246)\", }}></div>\n                                                                        </div>\n                                                                    </>\n                                                                ) : null}\n                                                            </>))}\n\n\n                                                        <div className='row graph_labels2' >\n                                                            {impVal2Devided2.map((item, key) => (\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\n                                                                    {item.option}\n                                                                    {/* {console.log(item.option)} */}\n                                                                </div>\n                                                            ))}\n                                                        </div>\n\n                                                    </div>\n                                                ) : null}\n                                            </div>\n\n\n\n                                        </div>\n\n                                    </div>\n\n                                </div>\n\n\n\n\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"90px\" }}>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\n                                        </div>\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\n                                        </div>\n\n                                    </div>\n\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\n                                        </div>\n                                    </div>\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n                            </div>\n                        </>\n                    ) : null}\n                    {/* page ------ 5 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n\n                                            </>\n                                        ) : null}\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header' >\n                                                    <span className='text-future-potential'>Future Potential</span>\n                                                    {/* </br><span>Potential</span> */}\n                                                </div>\n\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\n                                                    {impVal3 && Val3 ? (\n                                                        <div className='row ' >\n                                                            {inputListFinal[0].Feature2.map((item, key) => (\n                                                                <div className='col-lg-6 ' style={{ borderLeft: key % 2 != 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 4 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\n\n                                                                    {[Val3.[`data${key}`][0].length > 0] ? (\n                                                                        <>\n\n                                                                            <div style={{ position: \"relative\", bottom: \"60px\", left: \"20px\", paddingTop: \"40px\" }}>\n\n                                                                                <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\n                                                                                    {item.option}\n                                                                                </div>\n                                                                                <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(list1[2][key].surveyMean)]} color={colorOptions.slices[0].color} />\n\n                                                                                </div>\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                    <GraphVerticalBars percentage={item.range_val} color={colorOptions.slices[1].color} />\n\n                                                                                </div>\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(list1[2][key].internalBenchmark)]} color={colorOptions.slices[2].color} />\n\n                                                                                </div>\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(list1[2][key].externalBenchmark)]} color={colorOptions.slices[3].color} />\n\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </>\n                                                                    ) : null}\n                                                                </div>\n\n                                                            ))}\n\n\n\n                                                            <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Survey Mean\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Self Assessment\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Internal Benchmark\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            External Benchmark\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n\n                                                            </div>\n\n\n\n\n\n                                                        </div>\n                                                    ) : null}\n\n\n                                                </div>\n\n\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                </div>\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n\n\n                            </div>\n                        </>\n                    ) : null}\n                    {/* page ------ 6 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n\n                                            </>\n                                        ) : null}\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header' >\n                                                    <span className='text-future-potential'>Think-Act-Feel Leadership Rating</span>\n                                                    {/* </br><span>Potential</span> */}\n                                                </div>\n\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\n                                                    {impVal4 && Val4 ? (\n                                                        <>\n                                                            {Array.from({ length: 3 }, (item, key) => (\n                                                                <div className='row ' >\n\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 0 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\n\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                            <>\n\n                                                                                {/* <h1>{list1[3][key][0].surveyMean}</h1> */}\n\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\n\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\n                                                                                        {/* {item.option} */}\n                                                                                    </div>\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].surveyMean)]} color={colorOptions.slices[0].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val} color={colorOptions.slices[1].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].internalBenchmark)]} color={colorOptions.slices[2].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].externalBenchmark)]} color={colorOptions.slices[3].color} />\n\n                                                                                    </div>\n\n                                                                                </div>\n\n                                                                            </>\n                                                                        ) : null}\n                                                                    </div>\n\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 1 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\n\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                            <>\n\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\n\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\n                                                                                        {/* {item.option} */}\n                                                                                    </div>\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].surveyMean)]} color={colorOptions.slices[0].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val1} color={colorOptions.slices[1].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].internalBenchmark)]} color={colorOptions.slices[2].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].externalBenchmark)]} color={colorOptions.slices[3].color} />\n\n                                                                                    </div>\n\n                                                                                </div>\n\n                                                                            </>\n                                                                        ) : null}\n                                                                    </div>\n\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 1 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\n\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                            <>\n\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\n\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\n                                                                                        {/* {item.option} */}\n                                                                                    </div>\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][2].surveyMean)]} color={colorOptions.slices[0].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val2} color={colorOptions.slices[1].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][2].internalBenchmark)]} color={colorOptions.slices[2].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][key].externalBenchmark)]} color={colorOptions.slices[3].color} />\n\n                                                                                    </div>\n\n                                                                                </div>\n\n                                                                            </>\n                                                                        ) : null}\n                                                                    </div>\n                                                                </div>\n\n\n                                                            ))}\n\n\n                                                            <div className='row' style={{ position: \"relative\", bottom: \"-70px\", fontSize: \"8px\", left: \"-1px\" }}>\n                                                                <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\n\n\n                                                                <div className='col-lg-3'>\n                                                                    <div className='row'>\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\n                                                                        </div>\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\n                                                                    </div>\n\n                                                                </div>\n                                                                <div className='col-lg-3'>\n                                                                    <div className='row'>\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\n                                    </div> */}\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\n\n                                                                        </div>\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\n                                                                    </div>\n\n                                                                </div>\n\n\n                                                                <div className='col-lg-3'>\n                                                                    <div className='row'>\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\n                                    </div> */}\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\n\n                                                                        </div>\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\n                                                                    </div>\n                                                                </div>\n\n                                                                <div className='col-lg-3'>\n                                                                    <div className='row'>\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\n                                    </div> */}\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\n\n                                                                        </div>\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n\n\n                                                            {/* <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Survey Mean\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Self Assessment\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Internal Benchmark\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            External Benchmark\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n\n                                                            </div> */}\n\n\n\n\n                                                        </>\n                                                    ) : null}\n\n\n                                                </div>\n\n\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                </div>\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n\n\n                            </div>\n                        </>\n                    ) : null}\n                    {/* page ------ 6 */}\n                    {/* page ------ 7 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n                                            </>\n                                        ) : null}\n\n                                        <div style={{ position: \"relative\", top: \"48px\", left: \"-5px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div style={{ position: \"relative\", left: \"22px\" }}>\n                                                    <div className=\"square_bar\"></div>\n                                                    <div className='page_left_header' style={{}}>\n                                                        <span className='Think-Act-Feel-Leadership-Rating'>Think-Act-Feel Leadership Rating</span>\n\n                                                        {/* <span>Think-Act-Feel</span><br>\n                                                        </br><span>Leadership Rating</span> */}\n                                                    </div>\n                                                </div>\n\n\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"60px\" }}>\n                                                    <div className='row' >\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\" }}>\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\" }}>\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\n                                                                    Think\n                                                                </div>\n\n                                                            </div>\n\n                                                        </div>\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\n                                                                    Act\n                                                                </div>\n\n\n                                                            </div>\n\n                                                        </div>\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\n                                                                    Feel\n                                                                </div>\n\n\n                                                            </div>\n\n                                                        </div>\n\n                                                    </div>\n\n\n\n                                                    {impVal4 && Val4 ? (\n                                                        <>\n                                                            {\n                                                                Array.from({ length: 3 }, (item, key) => (\n                                                                    <>\n                                                                        <div className='row' style={{ boder: \"1px solid black\" }}>\n\n                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                                <div className='col-4' style={{\n                                                                                    // boder: \"1px solid black\",\n                                                                                    height: \"190px\",\n                                                                                    // borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\n                                                                                    // borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\n\n                                                                                }}>\n                                                                                    <div className='row'>\n                                                                                        <div className='row' style={{ height: \"190px\", width: \"500px\", marginLeft: \"auto\" }}>\n\n                                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                                                <>\n                                                                                                    {console.log((parseInt(key + 1) % 3) != 0)}\n                                                                                                    <div className='col-1'>\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\n\n                                                                                                            </div>\n                                                                                                        </div>\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][0].surveyMean) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][0].surveyMean) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[0].color\n\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\n                                                                                                            </div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][0].surveyMean.toFixed(1))}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div className='col-1' >\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\n                                                                                                            </div>\n                                                                                                        </div>\n\n                                                                                                        <div style={{\n                                                                                                            padding: [inputListFinal[0].Feature3[key].range_val] * 5,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[1].color\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{parseFloat([inputListFinal[0].Feature3[key].range_val])}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div className='col-1' >\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\n                                                                                                            </div>\n                                                                                                        </div>\n\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][0].internalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][0].internalBenchmark) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[2].color\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Math.ceil(list1[3][key][0].internalBenchmark)).toFixed(1)}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div className='col-1' >\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\n                                                                                                            </div>\n                                                                                                        </div>\n\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][0].externalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][0].externalBenchmark) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[3].color\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][0].externalBenchmark).toFixed(1)}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </>\n\n                                                                                            ) : null}\n                                                                                        </div>\n\n                                                                                    </div>\n\n\n\n\n                                                                                </div>\n                                                                            ) : null}\n\n                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                                <div className='col-4' style={{\n                                                                                    // boder: \"1px solid black\",\n                                                                                    height: \"190px\",\n                                                                                    // borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\n                                                                                    // borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\n\n                                                                                }}>\n                                                                                    <div className='row'>\n                                                                                        <div className='row' style={{ height: \"190px\", width: \"500px\", marginLeft: \"auto\" }}>\n\n                                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                                                <>\n                                                                                                    {console.log((parseInt(key + 1) % 3) != 0)}\n                                                                                                    <div className='col-1'>\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\n\n                                                                                                            </div>\n                                                                                                        </div>\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][1].surveyMean) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][1].surveyMean) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[0].color\n\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\n                                                                                                            </div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(Math.ceil(list1[3][key][1].surveyMean).toFixed(1))}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div className='col-1' >\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\n                                                                                                            </div>\n                                                                                                        </div>\n\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(inputListFinal[0].Feature3[key].range_val1) * 5) <= 50 ? Math.ceil(Math.ceil(inputListFinal[0].Feature3[key].range_val1) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[1].color\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{parseFloat([inputListFinal[0].Feature3[key].range_val1])}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div className='col-1' >\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\n                                                                                                            </div>\n                                                                                                        </div>\n\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][1].internalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][1].internalBenchmark) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[2].color\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][1].internalBenchmark).toFixed(1)}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div className='col-1' >\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\n                                                                                                            </div>\n                                                                                                        </div>\n\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][1].externalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][1].externalBenchmark) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[3].color\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][1].externalBenchmark).toFixed(1)}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </>\n\n                                                                                            ) : null}\n                                                                                        </div>\n\n                                                                                    </div>\n\n\n\n\n                                                                                </div>\n                                                                            ) : null}\n\n\n                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                                <div className='col-4' style={{\n                                                                                    // boder: \"1px solid black\",\n                                                                                    height: \"190px\",\n                                                                                    // borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\n                                                                                    // borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\n\n                                                                                }}>\n                                                                                    <div className='row'>\n                                                                                        <div className='row' style={{ height: \"190px\", width: \"500px\", marginLeft: \"auto\" }}>\n\n                                                                                            {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                                                <>\n                                                                                                    {console.log((parseInt(key + 1) % 3) != 0)}\n                                                                                                    <div className='col-1'>\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\n\n                                                                                                            </div>\n                                                                                                        </div>\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][2].surveyMean) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][2].surveyMean) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[0].color\n\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\n                                                                                                            </div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][2].surveyMean).toFixed(1)}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div className='col-1' >\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\n                                                                                                            </div>\n                                                                                                        </div>\n\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(inputListFinal[0].Feature3[key].range_val2) * 5) <= 50 ? Math.ceil(Math.ceil(inputListFinal[0].Feature3[key].range_val2) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[1].color\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(inputListFinal[0].Feature3[key].range_val2).toFixed(1)}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div className='col-1' >\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\n                                                                                                            </div>\n                                                                                                        </div>\n\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][2].internalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][2].internalBenchmark) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[2].color\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][2].internalBenchmark).toFixed(1)}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    <div className='col-1' >\n                                                                                                        <div style={{ fontSize: \"16px\" }}>\n                                                                                                            <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                                {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\n                                                                                                            </div>\n                                                                                                        </div>\n\n                                                                                                        <div style={{\n                                                                                                            padding: Math.ceil(Math.ceil(list1[3][key][2].externalBenchmark) * 5) <= 50 ? Math.ceil(Math.ceil(list1[3][key][2].externalBenchmark) * 5) : 50,\n                                                                                                            width: 20,\n                                                                                                            height: 20,\n                                                                                                            transform: `translate(-5%,50%)`,\n                                                                                                            borderRadius: \"100%\",\n                                                                                                            opacity: 0.8,\n                                                                                                            position: \"relative\",\n                                                                                                            backgroundColor: colorOptions.slices[3].color\n                                                                                                        }} >\n                                                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                            <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{Math.ceil(list1[3][key][2].externalBenchmark).toFixed(1)}</span><br />\n\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </>\n\n                                                                                            ) : null}\n                                                                                        </div>\n\n                                                                                    </div>\n\n\n\n\n                                                                                </div>\n                                                                            ) : null}\n\n\n                                                                        </div>\n\n                                                                    </>\n                                                                ))\n                                                            }\n\n                                                        </>\n\n                                                    ) : null}\n\n\n\n\n\n                                                </div>\n\n\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n\n\n\n                                </div>\n\n                                <div className='row' style={{ position: \"relative\", bottom: \"10px\", fontSize: \"8px\", left: \"20px\" }}>\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\n\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\n                                            </div>\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\n                                        </div>\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\n                                    </div> */}\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\n\n                                            </div>\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\n                                        </div>\n\n                                    </div>\n\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\n                                    </div> */}\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\n\n                                            </div>\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\n                                        </div>\n                                    </div>\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\n                                    </div> */}\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\n\n                                            </div>\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                    ) : null}\n                    {/* page --------8 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\" >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    {feedbackData ? (<div >\n                                        <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                        <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                        <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Opportunities</span><br>\n                                                    </br><span>Overview</span>\n                                                </div>\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                {impVal5 ? (\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", maxWidth: \"60%\" }}>\n                                                        <div className='row'>\n                                                            {console.log(inputListFinal[1].optionVal1)}\n                                                            {inputListFinal[1].optionVal1.map((item, key) => (\n                                                                <div className='col-lg-4 m-2' style={{ border: \"1px solid #F1F1F1\", lineHeight: \"22px\", width: \"100px\", textAlign: \"center\" }}>{item.option}</div>\n                                                            ))}\n                                                        </div>\n\n                                                    </div>) : null}\n\n\n                                            </div>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Personal</span><br>\n                                                    </br><span>Brand Overview</span>\n                                                </div>\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                {/* {console.log(impVal7)} */}\n                                                {impVal7 ? (\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\" }}>\n                                                        <div className='row'>\n                                                            {inputListFinal[2].optionVal2.map((item, key) => (\n                                                                <>\n                                                                    <div className=\"square col-lg-2\" style={{ height: \"2px\", width: \"2px\", padding: \"2px\", backgroundColor: \"black\", margin: \"5px\" }}></div>\n                                                                    <div className=\"square col-lg-2\" style={{ text: \"center\", marginTop: \"2px\", padding: \"2px\", fontWeight: \"lighter\" }}>{item.favoption_name}</div>\n                                                                </>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ) : null}\n                                            </div>\n\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Additional</span><br>\n                                                    </br><span>Comments</span>\n                                                </div>\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", color: \"black\" }}>\n                                                    {/* {impVal8 ? (<div>{impVal8}</div>) : null} */}\n\n                                                    {inputListFinal[0].Feature7.map((item, key) => (\n                                                        <div>{item.comment}</div>\n                                                    ))}\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                    </div>) : null}\n\n                                </div>\n\n\n                                <hr style={{ border: \"1px  black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"30px\" }} />\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"8px\" }}>\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n                            </div>\n                        </>\n                    ) : null}\n\n\n\n\n                </>\n\n\n            ) : null}\n\n            <fieldset>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {/* <h2 className=\"steps\">100%</h2> */}\n                        <div className=\"steps\">\n                            {/* <CircularProgressWithLabel size={70} value={5 * 10} data={param_id} /> */}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-card\" style={{ height: 'auto' }}>\n\n                    <h2 className=\"purple-text text-center\"><strong>You did it!</strong> <br />\n                        Wasn’t that easy?</h2>\n                    <br />\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-3\">\n                            <div className=\"success-animation\">\n                                <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n                                    <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" />\n                                    <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n                                </svg>\n                            </div>\n                        </div>\n                    </div>\n                    <br />\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-7 text-center\">\n                            <h5 className=\"purple-text text-center\">Thank you for your time. We now hope others will return the favor for you someday. Wish you much success.</h5>\n                        </div>\n                    </div>\n                    {/* <button onClick={() => window.print()} >check</button> */}\n                </div>\n\n\n\n            </fieldset >\n\n\n\n\n\n            {list1.length == 5 ? (<button\n                type=\"button\"\n                class=\"btn downloadbtn waves-effect\"\n                onClick={exportPDFWithMethod}\n                style={{position:\"relative\",left:\"46%\"}}\n\n            >\n                Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\n            </button>) : null}\n\n            {/* <div className='ccdf'>\n                <h1>Amplioso aaaa</h1>\n                <p>Amplioso aaaa</p>\n            </div> */}\n\n            {/* {pdfShowDes > 0 ? (\n                <PDFExport paperSize=\"A4\"\n                    ref={pdfExportComponent}\n                    fileName={`${beliverName}-${history.location.pathname}`}\n                >\n                    <div>\n                        <span>hallo shubhaa</span>\n                    </div>\n\n                </PDFExport>) : null} */}\n\n            {pdfShowDes > 0 ? (\n                <PDFExport paperSize=\"A4\"\n                    ref={pdfExportComponent}\n                    fileName={`${beliverName}-${history.location.pathname}`}\n                >\n\n\n                    <div className=\"feed_block_row row \"  >\n                        <div className='circle' style={{ position: \"absolute\", top: \"23%\", left: \"272px\" }}>\n                            <Star style={{ fill: \"#FFFDFD\", fontSize: \"38px\", position: \"relative\", right: \"7px\", top: \"4px\" }} />\n                        </div>\n                        <div className='page1_circle2' style={{ position: \"absolute\", top: \"73%\", left: \"272px\" }}>\n                            <CheckIcon style={{ fill: \"#FFFDFD\", fontSize: \"38px\", position: \"relative\", right: \"7px\", top: \"4px\" }} />\n                        </div>\n\n                        <div className=\"col-lg-6 feed_block feed_block1 text-black\">\n                            <img className=\"logo_icon\" src={logo_icon} alt=\"company_logo\" />\n                            <div>\n                                <p >THE QUICK, BROWN FOX JUMPS OVER A LAZY DOG. DJS<br />\n                                    FLOCK BY WHEN MTV AX QUIZ PROG. JUNK MTV QUIZ <br />\n                                    GRACED BY FOX WHELPS. BAWDS JOG, FLICK QUARTZ, VEX<br />\n                                    NYMPHS. WALTZ, BAD NYMPH, FOR QUICK JIGS VEX! FOX<br />\n                                    NYMPHS GRAB QUICK-JIVED WALTZ BRICK QUIZ WHANGS<br />\n                                    JUMPY VELDT FOX. BRIGHT VIXENS JUMP; DOZY FOWL</p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-6 feed_block feed_block2\">\n\n                            <div className='text-white' style={{ position: \"relative\", left: \"16px\", top: \"225px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }}>\n                                {/* <p>Feedback Report</p> */}\n                                <span>Feedback</span><br>\n                                </br><span>Report</span>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-6 feed_block feed_block3 text-black\">\n                            <div style={{ fontSize: \"10px\", color: \"white\", float: \"left\", padding: \"20px 20px\", flex: \"0 0 auto\", width: \"100%\" }}>\n                                {/* Company Details */}\n                            </div>\n                            <div style={{ color: \"white\", position: \"relative\", left: \"16px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }}>\n                                <span>Conversant</span><br>\n                                </br><span>Technologies</span>\n                            </div>\n\n                            <div style={{ position: \"relative\", color: \"white\", left: \"26px\", top: \"100px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }} >\n                                <span style={{ fontSize: \"58px\" }}>{new Date().getFullYear()}</span><br>\n                                </br><span style={{ fontSize: \"10px\" }}>www.amplioso.com</span>\n\n                            </div>\n                        </div>\n\n                        {feedbackData ? (\n                            <>\n                                <div className=\"col-lg-6 feed_block feed_block4 text-black\">\n                                    <div style={{ fontSize: \"10px\", position: \"relative\", left: \"-85px\", padding: \"20px 20px\" }}>\n                                        {/* Employee Details */}\n                                    </div>\n                                    {/* <span >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`}</span> */}\n                                    {/* {console.log(feedbackData)} */}\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"8px\" }}>\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\", textTransform: \"capitalize\" }}>{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`}</span><br />\n                                        <span style={{ fontSize: \"8px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\", fontWeight: \"100px\" }}>{`${feedbackData[0].user_email}`}</span>\n                                    </div>\n\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"46px\" }}>\n                                        <span style={{ fontSize: \"8px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Feedback Period</span><br />\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].period_start.split('T')[0]}</span><br />\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].period_end.split('T')[0]}</span><br />\n                                    </div>\n\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"76px\", textTransform: \"capitalize\" }}>\n                                        <span style={{ fontSize: \"8px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Created By</span><br />\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].ManagerId.first_name} {feedbackData[0].ManagerId.last_name}</span><br />\n                                        <span style={{ fontSize: \"8px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Generated On</span><br />\n                                        <span style={{ fontSize: \"22px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].createdAt.split('T')[0]}</span><br />\n\n                                    </div>\n\n                                </div>\n                            </>\n                        ) : null}        </div>\n                    {/* <Pdf_page1 /> */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\" style={{ padding: \"25px 0px 0px 25px\" }} >\n                                <div >\n                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n                                    {console.log(\"val==> \" + impVal)}\n\n                                    {impVal && list1.length == 5 ? (\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"14px\", fontSize: \"40px\" }}>\n\n                                            <div className=\"square_bar\"></div>\n                                            <div className='page_left_header' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <span>Overall</span><br>\n                                                </br><span>Performance</span>\n                                            </div>\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                                <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                                </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\n                                            </div>\n                                            <div className='row p-5' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", border: \"0px solid black\", width: \"100%\", position: \"relative\", left: \"5%\", top: \"-40px\" }}>\n                                                {/* {console.log(inputListFinal)} */}\n\n\n                                                {/* {inputListFinal[0].Feature.map((item, key) => {\n                                                    console.log(item)\n                                                })} */}\n\n                                                {/* {inputListFinal[0].Feature1.map((item, key) => {\n                                                    console.log(item)\n                                                })} */}\n\n\n                                                {inputListFinal[0].Feature.map((item, key) => {\n                                                    // { console.log(item) }\n\n                                                    return (\n                                                        <>\n                                                            <div className='col-2'>\n                                                                <div style={{ fontSize: \"16px\" }}>\n                                                                    <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\n                                                                        <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].surveyMean).toFixed(1)}</span><br />\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Survey</span><br />\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Mean</span>\n                                                                    </div>\n                                                                </div>\n\n                                                                <div style={{ padding: impValFn(list1[key][0].surveyMean, 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[0].color }} >\n                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className='col-2' style={{ margin: \"0px 18px 0px 18px\" }}>\n                                                                <div style={{ fontSize: \"16px\" }}>\n                                                                    <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\n                                                                        <span style={{ fontSize: \"20px\", }}>{Math.ceil(item.range_val).toFixed(1)}</span><br />\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Self</span><br />\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Assessment</span>\n                                                                    </div>\n                                                                </div>\n\n                                                                {/* Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) : 92 */}\n                                                                <div style={{ padding: impValFn((item.range_val), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[1].color }} >\n                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\n                                                                </div>\n                                                            </div>\n                                                            <div className='col-2' style={{ margin: \"0px 18px 0px 3px\" }}>\n                                                                <div style={{ fontSize: \"16px\" }}>\n                                                                    <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\n                                                                        <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].internalBenchmark).toFixed(1)}</span><br />\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Internal</span><br />\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\n                                                                </div>\n                                                                {/* <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[2].color }} > */}\n\n                                                                <div style={{ padding: impValFn((list1[key][0].internalBenchmark), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[2].color }} >\n                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\n                                                                </div>\n                                                            </div>\n                                                            <div className='col-2'>\n                                                                <div style={{ fontSize: \"16px\" }}>\n                                                                    <div style={{ position: \"relative\", top: \"300px\", right: \"-24%\" }}>\n                                                                        <span style={{ fontSize: \"20px\", }}>{Math.ceil(list1[key][0].externalBenchmark).toFixed(1)}</span><br />\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>External </span><br />\n                                                                        <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\n                                                                </div>\n                                                                {/* <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[3].color }} > */}\n\n                                                                <div style={{ padding: impValFn((list1[key][0].externalBenchmark), 1, 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: colorOptions.slices[3].color }} >\n                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\n                                                                </div>\n\n                                                            </div>\n                                                        </>\n                                                    )\n                                                })}\n\n                                            </div>\n                                        </div>) : null}\n\n                                </div>\n\n\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n\n                            </div >\n                        </>\n                    ) : null}\n                    {/* <Pdf_page2 /> */}\n                    {feedbackData ? (\n                        <>\n                            {impVal ? (\n                                <div className=\" row page-break feed_block_row\" >\n                                    <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                        <div >\n                                            {feedbackData ? (\n                                                <>\n                                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\n\n                                            <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\" }}>\n\n                                                <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                    <div style={{ borderLeft: \"6px solid #799FCB\", height: \"84px\" }}></div>\n                                                    <div className='page_left_header'>\n                                                        <span>Personal Brand </span><br>\n                                                        </br><span>Favorability Rating</span>\n                                                    </div>\n\n\n\n                                                    {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                    <div style={{ fontSize: \"7px\", fontWeight: \"lighter\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                                        <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                                        </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\n                                                    </div>\n                                                </div>\n\n                                                <div style={{ position: \"relative\", bottom: \"30px\", left: \"18%\" }}>\n                                                    <div style={{ margin: \"5px\" }}>\n\n                                                        <> <div style={{ width: 312, height: 312, position: \"relative\", left: \"0%\" }}>\n                                                            {/* <h1>{impVal}</h1> */}\n\n                                                            {impVal.map((item, key) => {\n                                                                return (\n                                                                    <>\n                                                                        <div>\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"60px\", color: \"white\" }}>{item.answer ? (item.answer) : null}</div>\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"80px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean.toFixed(1))}</div>\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"100px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench.toFixed(1))}</div>\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"120px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench.toFixed(1))}</div>\n                                                                        </div>\n\n\n\n\n\n                                                                        <CircularProgressbarWithChildren\n                                                                            value={impValFn((Val.[`data${key}`][0].survey_mean), 1, 10)}\n                                                                            // text={`${percentage}%`}\n                                                                            // circleRatio={5}\n                                                                            strokeWidth={10}\n                                                                            styles={buildStyles({\n\n                                                                                // Rotation of path and trail, in number of turns (0-1)\n                                                                                rotation: 1,\n\n                                                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                                                                strokeLinecap: 'butt',\n\n                                                                                // Text size\n                                                                                textSize: '16px',\n\n                                                                                // How long animation takes to go from one percentage to another, in seconds\n                                                                                pathTransitionDuration: 0.5,\n                                                                                pathTransition: 0.7,\n\n                                                                                // Can specify path transition in more detail, or remove it entirely\n                                                                                // pathTransition: 'none',\n\n                                                                                // Colors\n                                                                                pathColor: `rgb(168,26,12, ${impValFn((Val.[`data${key}`][0].survey_mean), 1, 10)})`,\n\n                                                                                // pathColor: `rgb(168,26,12, ${item.answer * 10 / 100})`,\n                                                                                textColor: '#f88',\n                                                                                // trailColor: '#d6d6d6',\n                                                                                backgroundColor: '#3e98c7',\n                                                                            })}\n                                                                        >\n                                                                            {/* <hr style={{width:\"20%\"}} /> */}\n\n                                                                            <div style={{ width: 246, height: 246, }}>\n                                                                                {/* <span>{impValFn(item.answer,1,10)}</span> */}\n                                                                                <CircularProgressbarWithChildren\n                                                                                    // value={Math.ceil(9) * 10}\n                                                                                    value={impValFn(item.answer, 1, 10)}\n                                                                                    // text={`${percentage}%`}\n                                                                                    // circleRatio={5}\n                                                                                    strokeWidth={14}\n                                                                                    styles={buildStyles({\n\n                                                                                        // Rotation of path and trail, in number of turns (0-1)\n                                                                                        rotation: 1,\n\n                                                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                                                                        strokeLinecap: 'butt',\n\n                                                                                        // Text size\n                                                                                        textSize: '16px',\n\n                                                                                        // How long animation takes to go from one percentage to another, in seconds\n                                                                                        pathTransitionDuration: 0.5,\n                                                                                        pathTransition: 0.7,\n\n                                                                                        // Can specify path transition in more detail, or remove it entirely\n                                                                                        // pathTransition: 'none',\n\n                                                                                        // Colors\n                                                                                        pathColor: `rgb(55,55,94, ${impValFn(item.answer, 1, 10)})`,\n                                                                                        textColor: '#f88',\n                                                                                        // trailColor: '#d6d6d6',\n                                                                                        backgroundColor: '#3e98c7',\n                                                                                    })}\n                                                                                >\n\n                                                                                    <div style={{ width: 172, height: 172 }}>\n                                                                                        <CircularProgressbarWithChildren\n                                                                                            value={impValFn((Val.[`data${key}`][0].internal_bench), 1, 10)}\n                                                                                            // text={`${percentage}%`}\n                                                                                            // circleRatio={5}\n                                                                                            strokeWidth={18}\n                                                                                            styles={buildStyles({\n\n                                                                                                // Rotation of path and trail, in number of turns (0-1)\n                                                                                                rotation: 1,\n\n                                                                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                                                                                strokeLinecap: 'butt',\n\n                                                                                                // Text size\n                                                                                                textSize: '16px',\n\n                                                                                                // How long animation takes to go from one percentage to another, in seconds\n                                                                                                pathTransitionDuration: 0.5,\n                                                                                                pathTransition: 0.7,\n\n                                                                                                // Can specify path transition in more detail, or remove it entirely\n                                                                                                // pathTransition: 'none',\n\n                                                                                                // Colors\n                                                                                                pathColor: `rgb(53,98,136, ${impValFn((Val.[`data${key}`][0].internal_bench), 1, 10)})`,\n                                                                                                textColor: '#f88',\n                                                                                                // trailColor: '#d6d6d6',\n                                                                                                backgroundColor: '#3e98c7',\n                                                                                            })}\n                                                                                        >\n\n                                                                                            <div style={{ width: 123, height: 123 }}>\n                                                                                                <CircularProgressbarWithChildren\n                                                                                                    value={impValFn((Val.[`data${key}`][0].external_bench), 1, 10)}\n                                                                                                    // text={`${percentage}%`}\n                                                                                                    // circleRatio={5}\n\n                                                                                                    strokeWidth={26}\n                                                                                                    styles={buildStyles({\n\n                                                                                                        // Rotation of path and trail, in number of turns (0-1)\n                                                                                                        rotation: 1,\n\n                                                                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                                                                                        strokeLinecap: 'butt',\n\n                                                                                                        // Text size\n                                                                                                        textSize: '16px',\n\n                                                                                                        // How long animation takes to go from one percentage to another, in seconds\n                                                                                                        pathTransitionDuration: 0.5,\n                                                                                                        pathTransition: 0.7,\n\n                                                                                                        // Can specify path transition in more detail, or remove it entirely\n                                                                                                        // pathTransition: 'none',\n\n                                                                                                        // Colors\n                                                                                                        pathColor: `rgb(170,207,221, ${impValFn((Val.[`data${key}`][0].external_bench), 1, 10)})`,\n                                                                                                        textColor: '#f88',\n                                                                                                        // trailColor: '#d6d6d6',\n                                                                                                        backgroundColor: '#3e98c7',\n                                                                                                    })}\n                                                                                                >\n\n\n\n                                                                                                </CircularProgressbarWithChildren>\n                                                                                            </div>\n\n\n                                                                                        </CircularProgressbarWithChildren>\n                                                                                    </div>\n\n                                                                                </CircularProgressbarWithChildren>\n                                                                            </div>\n\n\n\n                                                                        </CircularProgressbarWithChildren>\n\n                                                                    </>\n                                                                )\n                                                            })}\n                                                        </div>\n\n                                                        </>\n                                                    </div>\n\n\n                                                </div>\n\n                                            </div>\n\n                                        </div>\n\n                                    </div>\n\n                                    {impVal.map((item, key) => {\n                                        return (\n                                            <>\n                                                <div className='row block_sqr p-5'>\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                        <div className='row'>\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                                            </div>\n                                                            <div style={{\n                                                                // color:\"black\",\n                                                                fontSize: \"9px\",\n                                                                position: \"relative\",\n                                                                // bottom:\"90px\",\n                                                                left: \"-14px\",\n                                                            }}>\n                                                                <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean).toFixed(1)}</span><br>\n                                                                </br><span>Survey</span><br>\n                                                                </br><span>Mean</span>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                        <div className='row'>\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                                            </div>\n\n                                                            <div style={{\n                                                                // color:\"black\",\n                                                                fontSize: \"9px\",\n                                                                position: \"relative\",\n                                                                // bottom:\"90px\",\n                                                                left: \"-14px\",\n                                                            }}>\n                                                                <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{parseFloat(item.answer).toFixed(1)}</span><br>\n                                                                </br><span>Self</span><br>\n                                                                </br><span>Assessment</span>\n                                                            </div>\n\n                                                        </div>\n\n                                                    </div>\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                        <div className='row'>\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                                            </div>\n                                                            <div style={{\n                                                                // color:\"black\",\n                                                                fontSize: \"9px\",\n                                                                position: \"relative\",\n                                                                // bottom:\"90px\",\n                                                                left: \"-14px\",\n                                                            }}>\n                                                                <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench).toFixed(1)}</span><br>\n                                                                </br><span>Internal</span><br>\n                                                                </br><span>Benchmark</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                        <div className='row'>\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                                            </div>\n                                                            <div style={{\n                                                                // color:\"black\",\n                                                                fontSize: \"9px\",\n                                                                position: \"relative\",\n                                                                // bottom:\"90px\",\n                                                                left: \"-14px\",\n                                                            }}>\n                                                                <span style={{ fontSize: \"12px\", textAlign: \"center\", marginLeft: \"5px\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench).toFixed(1)}</span><br>\n                                                                </br><span>External</span><br>\n                                                                </br><span>Benchmark</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </>\n                                        )\n                                    })}\n\n                                    < hr style={{ border: \"1px solid black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"10px\" }} />\n                                    <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\n                                        <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\n                                        <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\n                                        <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                    </div>\n                                </div >\n                            ) : null}\n                        </>\n                    ) : null}\n                    {/* page ----3 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Universal </span><br>\n                                                    </br><span>Competency Ratings</span>\n                                                </div>\n\n\n\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\n                                                </div>\n                                            </div>\n\n                                            <div style={{ position: \"relative\", bottom: \"5px\" }}>\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\n                                                    <div style={{ position: \"relative\", bottom: \"34px\", fontSize: \"8px\" }}>10.0</div>\n                                                    <div style={{ position: \"relative\", bottom: \"-5px\", fontSize: \"8px\" }}>5.0</div>\n                                                    <div style={{ position: \"relative\", bottom: \"-34px\", fontSize: \"8px\" }}>0.1</div>\n                                                </div>\n                                                {impVal2 ? (\n                                                    <>\n                                                        <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\n                                                            {impVal2.map((item, key) => (\n                                                                <>\n                                                                    {[Val2.[`data${key}`][0].length > 0] ? (<>\n                                                                        <div style={{ marginLeft: \"10px\" }}>\n                                                                            <div className='graph_bar'>\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[0].color) : \"rgb(218,37,12)\", }}></div>\n                                                                            </div>\n                                                                            <div className='graph_bar'>\n                                                                                <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 1 == 0 ? (colorOptions.slices[1].color) : \"rgb(235,82,71)\", }}></div>\n                                                                            </div>\n                                                                            <div className='graph_bar'>\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[2].color) : \"rgb(241,158,152)\", }}></div>\n                                                                            </div>\n                                                                            <div className='graph_bar'>\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 : 100, backgroundColor: key % 1 == 0 ? (colorOptions.slices[3].color) : \"rgb(249,218,216)\", }}></div>\n\n                                                                            </div>\n                                                                            <div style={{ width: \"16px\", height: \"10rem\", float: \"left\" }}></div>\n\n                                                                        </div>\n                                                                    </>) : null}\n                                                                </>\n                                                            ))}\n                                                            <div class=\"display-table\">\n                                                                <div style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\n                                                                    {impVal2.map((item, key) => (\n                                                                        <div className='options2_1 '>{item.option}</div>\n\n                                                                    ))}\n\n\n                                                                </div>\n\n                                                            </div>\n\n                                                        </div>\n\n\n                                                    </>\n                                                ) : null}\n\n\n                                            </div>\n\n                                        </div>\n\n                                    </div>\n                                </div>\n\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"-20px\" }}>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\n                                        </div>\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\n                                        </div>\n\n                                    </div>\n\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\n                                        </div>\n                                    </div>\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n                            </div>\n                        </>\n                    ) : null}\n\n\n                    {/* page -----4 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span></>) : null}\n\n\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Universal</span><br>\n                                                    </br><span>Competency Ratings</span>\n                                                </div>\n\n\n\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\n                                                </div>\n                                            </div>\n\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\n                                                </div>\n\n                                                {impVal2Devided1 && Val2 ? (\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\n\n                                                        {impVal2Devided1.map((item, key) => (\n                                                            <>\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\n                                                                    <>\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[0].color : \"rgb(55,55,94)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 1 == 0 ? colorOptions.slices[1].color : \"rgb(86,86,151)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[2].color : \"rgb(140,140,210)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[3].color : \"rgb(155,155,246)\", }}></div>\n                                                                        </div>\n                                                                    </>\n                                                                ) : null}\n                                                            </>))}\n\n\n\n\n                                                        <div className='row graph_labels2' >\n                                                            {impVal2Devided1.map((item, key) => (\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\n                                                                    {item.option}\n                                                                    {/* {console.log(item.option)} */}\n                                                                </div>\n                                                            ))}\n                                                        </div>\n\n                                                    </div>\n                                                ) : null}\n                                            </div>\n\n\n\n                                        </div>\n\n\n\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\" style={{ visibility: \"hidden\" }}></div>\n                                                <div className='page_left_header'>\n                                                    {/* <span>Universal</span><br>\n                                            </br><span>Competency Ratings</span> */}\n                                                </div>\n\n\n\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\n                                                    {/* <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\n                                            </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span> */}\n                                                </div>\n                                            </div>\n\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\n                                                </div>\n\n                                                {impVal2Devided2 && Val2 ? (\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\n                                                        {impVal2Devided2.map((item, key) => (\n                                                            <>\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\n                                                                    <>\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\n                                                                        <div className='graph_bar_2'>\n\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[0].color : \"rgb(55,55,94)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 1 == 0 ? colorOptions.slices[1].color : \"rgb(86,86,151)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[2].color : \"rgb(140,140,210)\", }}></div>\n                                                                        </div>\n                                                                        <div className='graph_bar_2'>\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 1 == 0 ? colorOptions.slices[3].color : \"rgb(155,155,246)\", }}></div>\n                                                                        </div>\n                                                                    </>\n                                                                ) : null}\n                                                            </>))}\n\n\n                                                        <div className='row graph_labels2' >\n                                                            {impVal2Devided2.map((item, key) => (\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\n                                                                    {item.option}\n                                                                    {/* {console.log(item.option)} */}\n                                                                </div>\n                                                            ))}\n                                                        </div>\n\n                                                    </div>\n                                                ) : null}\n                                            </div>\n\n\n\n                                        </div>\n\n                                    </div>\n\n                                </div>\n\n\n\n\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"90px\" }}>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\n                                        </div>\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\n                                        </div>\n\n                                    </div>\n\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\n                                        </div>\n                                    </div>\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                            </div>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                            </div> */}\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n                            </div>\n                        </>\n                    ) : null}\n\n\n\n                    {/* page ------ 5 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n\n                                            </>\n                                        ) : null}\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header' >\n                                                    <span className='text-future-potential'>Future Potential</span>\n                                                    {/* </br><span>Potential</span> */}\n                                                </div>\n\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\n                                                    {impVal3 && Val3 ? (\n                                                        <div className='row ' >\n                                                            {impVal3.map((item, key) => (\n                                                                <div className='col-lg-6 ' style={{ borderLeft: key % 2 != 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 4 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\n\n                                                                    {[Val3.[`data${key}`][0].length > 0] ? (\n                                                                        <>\n\n                                                                            <div style={{ position: \"relative\", bottom: \"60px\", left: \"20px\", paddingTop: \"40px\" }}>\n\n                                                                                <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\n                                                                                    {item.option}\n                                                                                </div>\n                                                                                <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].survey_mean)]} color={colorOptions.slices[0].color} />\n\n                                                                                </div>\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                    <GraphVerticalBars percentage={item.answer} color={colorOptions.slices[1].color} />\n\n                                                                                </div>\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].internal_bench)]} color={colorOptions.slices[2].color} />\n\n                                                                                </div>\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].external_bench)]} color={colorOptions.slices[3].color} />\n\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </>\n                                                                    ) : null}\n                                                                </div>\n\n                                                            ))}\n\n\n\n                                                            <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Survey Mean\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Self Assessment\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Internal Benchmark\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            External Benchmark\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n\n                                                            </div>\n\n\n\n\n\n                                                        </div>\n                                                    ) : null}\n\n\n                                                </div>\n\n\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                </div>\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n\n\n                            </div>\n                        </>\n                    ) : null}\n\n\n\n\n                    {/* page ------ 6 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n\n                                            </>\n                                        ) : null}\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header' >\n                                                    <span className='text-future-potential'>Think-Act-Feel Leadership Rating</span>\n                                                    {/* </br><span>Potential</span> */}\n                                                </div>\n\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\n                                                    {impVal4 && Val4 ? (\n                                                        <>\n                                                            {Array.from({ length: 3 }, (item, key) => (\n                                                                <div className='row ' >\n\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 0 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\n\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                            <>\n\n                                                                                {/* <h1>{list1[3][key][0].surveyMean}</h1> */}\n\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\n\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\n                                                                                        {/* {item.option} */}\n                                                                                    </div>\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].surveyMean)]} color={colorOptions.slices[0].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val} color={colorOptions.slices[1].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].internalBenchmark)]} color={colorOptions.slices[2].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][0].externalBenchmark)]} color={colorOptions.slices[3].color} />\n\n                                                                                    </div>\n\n                                                                                </div>\n\n                                                                            </>\n                                                                        ) : null}\n                                                                    </div>\n\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 1 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\n\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                            <>\n\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\n\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\n                                                                                        {/* {item.option} */}\n                                                                                    </div>\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].surveyMean)]} color={colorOptions.slices[0].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val1} color={colorOptions.slices[1].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].internalBenchmark)]} color={colorOptions.slices[2].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][1].externalBenchmark)]} color={colorOptions.slices[3].color} />\n\n                                                                                    </div>\n\n                                                                                </div>\n\n                                                                            </>\n                                                                        ) : null}\n                                                                    </div>\n\n                                                                    <div className='col-lg-4 ' style={{ borderLeft: key % 1 == 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 2 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\n\n                                                                        {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                            <>\n\n                                                                                <div style={{ position: \"relative\", bottom: \"60px\", left: \"-70px\", paddingTop: \"40px\" }}>\n\n                                                                                    <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\n                                                                                        {/* {item.option} */}\n                                                                                    </div>\n                                                                                    <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][2].surveyMean)]} color={colorOptions.slices[0].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={inputListFinal[0].Feature3[key].range_val2} color={colorOptions.slices[1].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][2].internalBenchmark)]} color={colorOptions.slices[2].color} />\n\n                                                                                    </div>\n                                                                                    <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\n                                                                                        <GraphVerticalBars percentage={[Math.ceil(list1[3][key][key].externalBenchmark)]} color={colorOptions.slices[3].color} />\n\n                                                                                    </div>\n\n                                                                                </div>\n\n                                                                            </>\n                                                                        ) : null}\n                                                                    </div>\n                                                                </div>\n\n\n                                                            ))}\n\n\n                                                            <div className='row' style={{ position: \"relative\", bottom: \"-70px\", fontSize: \"8px\", left: \"-1px\" }}>\n                                                                {/* <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} /> */}\n\n\n                                                                <div className='col-lg-3'>\n                                                                    <div className='row'>\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\n                                                                        </div>\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\n                                                                    </div>\n\n                                                                </div>\n                                                                <div className='col-lg-3'>\n                                                                    <div className='row'>\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\n                                    </div> */}\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\n\n                                                                        </div>\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\n                                                                    </div>\n\n                                                                </div>\n\n\n                                                                <div className='col-lg-3'>\n                                                                    <div className='row'>\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\n                                    </div> */}\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\n\n                                                                        </div>\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\n                                                                    </div>\n                                                                </div>\n\n                                                                <div className='col-lg-3'>\n                                                                    <div className='row'>\n                                                                        {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\n                                    </div> */}\n                                                                        <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\n                                                                            <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\n\n                                                                        </div>\n                                                                        {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n\n\n\n                                                            {/* <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[0].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Survey Mean\n                                                                        </div>\n                                                                    </div>\n\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[1].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Self Assessment\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[2].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            Internal Benchmark\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className='row m-2' >\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: colorOptions.slices[3].color }}>\n                                                                        </div>\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\n                                                                            External Benchmark\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n\n                                                            </div> */}\n\n\n\n\n                                                        </>\n                                                    ) : null}\n\n\n                                                </div>\n\n\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                </div>\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n\n\n                            </div>\n                        </>\n                    ) : null}\n                    {/* page ------ 7 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\"  >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    <div >\n                                        {feedbackData ? (\n                                            <>\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n                                            </>\n                                        ) : null}\n\n                                        <div style={{ position: \"relative\", top: \"48px\", left: \"-5px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div style={{ position: \"relative\", left: \"22px\" }}>\n                                                    <div className=\"square_bar\"></div>\n                                                    <div className='page_left_header' style={{}}>\n                                                        <span className='Think-Act-Feel-Leadership-Rating'>Think-Act-Feel Leadership Rating</span>\n\n                                                        {/* <span>Think-Act-Feel</span><br>\n                                                        </br><span>Leadership Rating</span> */}\n                                                    </div>\n                                                </div>\n\n\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"60px\" }}>\n                                                    <div className='row' >\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\" }}>\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\" }}>\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\n                                                                    Think\n                                                                </div>\n\n                                                            </div>\n\n                                                        </div>\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\n                                                                    Act\n                                                                </div>\n\n\n                                                            </div>\n\n                                                        </div>\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\n                                                                    Feel\n                                                                </div>\n\n\n                                                            </div>\n\n                                                        </div>\n\n                                                    </div>\n\n\n\n                                                    {impVal4 && Val4 ? (\n                                                        <div className='row' style={{ boder: \"1px solid black\" }}>\n                                                            {impVal4.map((item, key) => (\n                                                                <>\n                                                                    {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                        <div className='col-4' style={{\n                                                                            // boder: \"1px solid black\",\n                                                                            height: \"190px\",\n                                                                            // borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\n                                                                            // borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\n\n                                                                        }}>\n                                                                            <div className='row'>\n                                                                                <div className='row' style={{ height: \"190px\", width: \"500px\", marginLeft: \"auto\" }}>\n\n                                                                                    {[Val4.[`data${key}`][0].length > 0] ? (\n                                                                                        <>\n                                                                                            {console.log((parseInt(key + 1) % 3) != 0)}\n                                                                                            <div className='col-1'>\n                                                                                                <div style={{ fontSize: \"16px\" }}>\n                                                                                                    <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                        {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\n\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                                <div style={{\n                                                                                                    padding: parseFloat(item.answer * 5),\n                                                                                                    width: 20,\n                                                                                                    height: 20,\n                                                                                                    transform: `translate(-5%,50%)`,\n                                                                                                    borderRadius: \"100%\",\n                                                                                                    opacity: 0.8,\n                                                                                                    position: \"relative\",\n                                                                                                    backgroundColor: colorOptions.slices[0].color\n\n                                                                                                }} >\n                                                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\n                                                                                                    </div>\n                                                                                                    <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{parseFloat(item.answer).toFixed(1)}</span><br />\n\n                                                                                                </div>\n                                                                                            </div>\n                                                                                            <div className='col-1' >\n                                                                                                <div style={{ fontSize: \"16px\" }}>\n                                                                                                    <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                        {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\n                                                                                                    </div>\n                                                                                                </div>\n\n                                                                                                <div style={{\n                                                                                                    padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].survey_mean) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].survey_mean) * 5) : 50,\n                                                                                                    width: 20,\n                                                                                                    height: 20,\n                                                                                                    transform: `translate(-5%,50%)`,\n                                                                                                    borderRadius: \"100%\",\n                                                                                                    opacity: 0.8,\n                                                                                                    position: \"relative\",\n                                                                                                    backgroundColor: colorOptions.slices[1].color\n                                                                                                }} >\n                                                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                    <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br />\n\n                                                                                                </div>\n                                                                                            </div>\n                                                                                            <div className='col-1' >\n                                                                                                <div style={{ fontSize: \"16px\" }}>\n                                                                                                    <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                        {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\n                                                                                                    </div>\n                                                                                                </div>\n\n                                                                                                <div style={{\n                                                                                                    padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) : 50,\n                                                                                                    width: 20,\n                                                                                                    height: 20,\n                                                                                                    transform: `translate(-5%,50%)`,\n                                                                                                    borderRadius: \"100%\",\n                                                                                                    opacity: 0.8,\n                                                                                                    position: \"relative\",\n                                                                                                    backgroundColor: colorOptions.slices[2].color\n                                                                                                }} >\n                                                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                    <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\n\n                                                                                                </div>\n                                                                                            </div>\n                                                                                            <div className='col-1' >\n                                                                                                <div style={{ fontSize: \"16px\" }}>\n                                                                                                    <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\n                                                                                                        {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\n                                                                                                    </div>\n                                                                                                </div>\n\n                                                                                                <div style={{\n                                                                                                    padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) : 50,\n                                                                                                    width: 20,\n                                                                                                    height: 20,\n                                                                                                    transform: `translate(-5%,50%)`,\n                                                                                                    borderRadius: \"100%\",\n                                                                                                    opacity: 0.8,\n                                                                                                    position: \"relative\",\n                                                                                                    backgroundColor: colorOptions.slices[3].color\n                                                                                                }} >\n                                                                                                    <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\n                                                                                                    <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\n\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </>\n\n                                                                                    ) : null}\n                                                                                </div>\n\n                                                                            </div>\n\n\n\n\n                                                                        </div>\n                                                                    ) : null}\n\n                                                                </>\n                                                            ))}\n\n\n\n                                                        </div>) : null}\n\n\n\n\n\n                                                </div>\n\n\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n\n\n\n                                </div>\n\n                                <div className='row' style={{ position: \"relative\", bottom: \"10px\", fontSize: \"8px\", left: \"20px\" }}>\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\n\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\n                                            </div>\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\n                                        </div>\n\n                                    </div>\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\n                                    </div> */}\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\n\n                                            </div>\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\n                                        </div>\n\n                                    </div>\n\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\n                                    </div> */}\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\n\n                                            </div>\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\n                                        </div>\n                                    </div>\n\n                                    <div className='col-lg-3'>\n                                        <div className='row'>\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\n                                    </div> */}\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\n\n                                            </div>\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                    ) : null}\n\n\n                    {/* page --------8 */}\n                    {feedbackData ? (\n                        <>\n                            <div className=\" row page-break feed_block_row\" >\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\n                                    {feedbackData ? (<div >\n                                        <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\n                                        <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ {currDateForm}</span>\n                                        <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} ><img className=\"logo_icon headerRightLogo\" src={logo_icon} alt=\"company_logo\" /></span>\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", }}>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Opportunities</span><br>\n                                                    </br><span>Overview</span>\n                                                </div>\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                {impVal5 ? (\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", maxWidth: \"60%\" }}>\n                                                        <div className='row'>\n                                                            {impVal5.map((item, key) => (\n                                                                <div className='col-lg-4 m-2' style={{ border: \"1px solid #F1F1F1\", lineHeight: \"22px\", width: \"100px\", textAlign: \"center\" }}>{item.option}</div>\n                                                            ))}\n                                                        </div>\n\n                                                    </div>) : null}\n\n\n                                            </div>\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Personal</span><br>\n                                                    </br><span>Brand Overview</span>\n                                                </div>\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                {/* {console.log(impVal7)} */}\n                                                {impVal7 ? (\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\" }}>\n                                                        <div className='row'>\n                                                            {impVal7.map((item, key) => (\n                                                                <>\n                                                                    <div className=\"square col-lg-2\" style={{ height: \"2px\", width: \"2px\", padding: \"2px\", backgroundColor: \"black\", margin: \"5px\" }}></div>\n                                                                    <div className=\"square col-lg-2\" style={{ text: \"center\", marginTop: \"2px\", padding: \"2px\", fontWeight: \"lighter\" }}>{item.option}</div>\n                                                                </>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                ) : null}\n                                            </div>\n\n\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\n                                                <div className=\"square_bar\"></div>\n                                                <div className='page_left_header'>\n                                                    <span>Additional</span><br>\n                                                    </br><span>Comments</span>\n                                                </div>\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", color: \"black\" }}>\n                                                    {impVal8 ? (<div>{impVal8}</div>) : null}\n                                                </div>\n\n                                            </div>\n                                        </div>\n\n                                    </div>) : null}\n\n                                </div>\n\n\n                                <hr style={{ border: \"1px  black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"30px\" }} />\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"8px\" }}>\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\n                                </div>\n                            </div>\n                        </>\n                    ) : null}\n\n\n\n\n\n\n                </PDFExport>\n            ) : (null)}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </>\n    )\n}\n\n","import React, { useState, useEffect } from 'react'\nimport CircularProgress, {\n  CircularProgressProps,\n} from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\n\n\nfunction CircularProgressWithLabel(props) {\n  const propData = props.data;\n\n  const uid = JSON.parse(localStorage.getItem('survey_token'));\n  const [RecordeData, setRecordeData] = useState()\n  const [sumVal, setsumVal] = useState()\n\n  const GetRecords = () => {\n    var myHeaders = new Headers();\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    const response4 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${propData}`, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        if (result.status == 200) {\n          console.log(result)\n          console.log(result.data)\n          setRecordeData(result.data)\n          let MyValues = result.data;\n\n          if (MyValues.length > 0) {\n            MyValues.map((x, i) => {\n              let Feature = eval(x.feature);\n              let Feature1 = eval(x.feature1);\n              let Feature2 = eval(x.feature2);\n              let Feature3 = eval(x.feature3);\n              let Feature4 = eval(x.feature4);\n              let Feature5 = eval(x.feature5);\n              let Feature6 = eval(x.feature6);\n              let Feature7 = eval(x.feature7);\n              let Feature8 = eval(x.feature8);\n\n\n              var f1 = Feature ? Feature[0].range_val : 0;\n              let f2 = Feature1 ? Math.ceil(Feature1.reduce((n, { range_val }) => n + parseInt(range_val), 0) / Feature1.length) : 0;\n              let f3 = Feature2 ? Math.ceil((Feature2.reduce((n, { range_val }) => n + parseInt(range_val), 0)) / Feature2.length) : 0;\n              let f4 = Feature3 ? Math.ceil((Feature3.reduce((n, { range_val }) => n + parseInt(range_val), 0) + Feature3.reduce((n, { range_val1 }) => n + parseInt(range_val1), 0) + Feature3.reduce((n, { range_val2 }) => n + parseInt(range_val2), 0)) / (Feature3.length * Feature3.length)) : 0;\n              let f5 = Feature5 ? Feature5[0].range_val : 0\n\n              console.log(parseInt(f1) + \" \" + parseInt(f2) + \" \" + parseInt(f3) + \" \" + parseInt(f4) + \" \" + parseInt(f5))\n              let sum = (parseInt(f1) + parseInt(f2) + parseInt(f3) + parseInt(f4) + parseInt(f5)) * 2\n              console.log(sum)\n              setsumVal(sum)\n            })\n          }\n        }\n\n\n      })\n  }\n\n  useEffect(() => {\n    console.log(propData)\n    GetRecords()\n  }, [])\n\n\n  return (\n    <div style={{ width: 100, height: 100, float: \"right\" }}>\n      <CircularProgressbar value={sumVal ? sumVal : 0} strokeWidth={10} text={sumVal ? sumVal : \"0\"} />\n    </div>\n  );\n}\n\n\n\nexport default CircularProgressWithLabel;","export default __webpack_public_path__ + \"static/media/pic1.73f8d2e3.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport \"../assets/css/style.css\"\r\nimport \"../assets/css/form-steps.css\"\r\nimport logo from \"../assets/images/logo-info.png\"\r\nimport profile from \"../assets/images/profile/pic1.jpg\"\r\nimport { useHistory } from 'react-router-dom';\r\nexport default function SurveyHeader(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const [isActive, setActive] = useState(\"false\");\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [validToken, setvalidToken] = useState(false);\r\n    const history = useHistory();\r\n    const survey_token = localStorage.getItem('survey_token');\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n    const [ImageUrl, setImageUrl] = useState(\"\")\r\n\r\n    // alert(token_ele)\r\n\r\n    // const uid = uid.userId;\r\n\r\n    const handleToggle = () => {\r\n        setActive(!isActive);\r\n    };\r\n\r\n    function chekAuthUser() {\r\n        // console.log(uid.userId)\r\n        // console.log(survey_token.userId)\r\n        console.log(uid)\r\n        // if (uid) {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        // inputList.map((item,key)=>{\r\n        var raw = JSON.stringify({\r\n            token_ele: uid.token,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/check_survey_key`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                if (resData.status == 200) {\r\n                    console.log(resData.data);\r\n                    setvalidToken(true)\r\n                    console.log(\"valid token\")\r\n                    // localStorage.setItem(\"survey_token\", token_ele)\r\n                    // GetAllRecords();\r\n                    // props.next(values);\r\n\r\n                } else {\r\n                    console.log(\"Invalid Token\")\r\n                    setvalidToken(false)\r\n                    history.push(\"/unauthorized_tkn\")\r\n                }\r\n                // GetAllRecords();\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n        // } else {\r\n        //     history.push(\"/unauthorized_tkn\")\r\n        // }\r\n    }\r\n\r\n    console.log(uid)\r\n\r\n    const GetAllRecords = () => {\r\n        // alert(BaseURL)\r\n        console.log(uid)\r\n        var myHeaders = new Headers();\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://208.109.14.182:9000/masters/employeedetails/manager/${uid.managerId}`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((resData) => {\r\n            // console.log(resData)\r\n            // console.log(resData.data.length)\r\n            // console.log(resData.data[0].prof_img)\r\n            if (resData.data.length > 0) {\r\n                // alert(\"1\")\r\n                console.log(resData.data[0].prof_img)\r\n                setImageUrl(resData.data[0].prof_img)\r\n                // setImageUrl(\"http://dev.amplioso.com/images/\" + resData.data[0].prof_img)\r\n\r\n            }\r\n\r\n        })\r\n\r\n        fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n                // alert(result.data[0].prof_img)\r\n                console.log(result.data[0])\r\n                // setImageUrl(\"http://dev.amplioso.com/images/\" + \"1615629352514-logo.png\")\r\n                // setImageUrl(\"http://dev.amplioso.com/images/\" + result.data[0].prof_img)\r\n\r\n            })\r\n\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (uid == null) {\r\n            history.push({\r\n                pathname: \"/unauthorized_tkn\",\r\n                state: \"Token Error\"\r\n            })\r\n            return false\r\n        }\r\n        chekAuthUser()\r\n        GetAllRecords();\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className=\"nav-header\">\r\n                <a href=\"/\" className=\"brand-logo\"><img className=\"logo-abbr\" src={logo} alt=\"company_logo\" />\r\n                </a>\r\n            </div> */}\r\n            <div className=\"header\">\r\n                <div className=\"header-content\">\r\n                    <nav className=\"navbar navbar-expand\">\r\n                        <div className=\"collapse navbar-collapse justify-content-between\">\r\n                            <ul className=\"navbar-nav header-right\">\r\n                                <li className=\"nav-item dropdown header-profile\">\r\n                                    <a className=\"nav-link\"\r\n                                        onClick={handleToggle} role=\"button\" data-bs-toggle=\"dropdown\">\r\n                                        <div className=\"header-info me-3\"> <span className=\"fs-16 font-w600 \" style={{ textTransform: \"capitalize\" }}>{first_name} {last_name}</span> <small className=\"text-end fs-14 font-w400\">April 2021 - June 2021</small> </div>\r\n                                        {/* {console.log(ImageUrl)} */}\r\n                                        {/* <span>shhyu{\"http://dev.amplioso.com/images/\" + ImageUrl}</span> */}\r\n                                        {ImageUrl ? <img src={\"http://dev.amplioso.com/images/\" +ImageUrl} width={20} /> :\r\n                                            <div\r\n                                                style={{\r\n                                                    textTransform: \"uppercase\", border: \"1px solid gray\", borderRadius: \"50px\", height: \"43px\", width: \"45px\", textAlign: \"center\",\r\n                                                    // boxShadow:\"0px 1px 4px 0px grey\" \r\n                                                }}>\r\n                                                <h2 style={{ color: \"#996161\", marginTop: \"2px\" }} >\r\n                                                    {first_name.charAt(0) + \"\" + last_name.charAt(0)}\r\n                                                </h2>\r\n                                            </div>}\r\n                                    </a>\r\n                                    <div className={`dropdown-menu dropdown-menu-end  ${isActive ? \"\" : \"show\"}`} > <a href=\"app-profile.html\" className=\"dropdown-item ai-icon\">\r\n                                        <svg id=\"icon-user1\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-blk\" width={18} height={18} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth='2' strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                            <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\r\n                                            <circle cx={12} cy={7} r={4} />\r\n                                        </svg>\r\n                                        <span className=\"ms-2\">Profile </span> </a> <a href=\"https://ventic.dexignzone.com/xhtml/error-404.html\" className=\"dropdown-item ai-icon\">\r\n                                            <svg id=\"icon-logout\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-blk\" width={18} height={18} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth='2' strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                                <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\r\n                                                <polyline points=\"16 17 21 12 16 7\" />\r\n                                                <line x1={21} y1={12} x2={9} y2={12} />\r\n                                            </svg>\r\n                                            <span className=\"ms-2\">Logout </span> </a> </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n            <div>{props.data}</div>\r\n        </div>\r\n    )\r\n}\r\n// }\r\n","import React, { Component, PropTypes } from 'react';\r\n\r\nclass Checkbox extends Component {\r\n    state = {\r\n        isChecked: false,\r\n    }\r\n\r\n    toggleCheckboxChange = () => {\r\n        const { handleCheckboxChange, label } = this.props;\r\n\r\n        this.setState(({ isChecked }) => (\r\n            {\r\n\r\n                isChecked: !isChecked,\r\n            }\r\n        ));\r\n\r\n        handleCheckboxChange(label);\r\n    }\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { isChecked } = this.state;\r\n\r\n        return (\r\n            <div className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        value={label}\r\n                        checked={isChecked}\r\n                        onChange={this.toggleCheckboxChange}\r\n                    />\r\n                    {label}\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Checkbox;","import React, { Component } from 'react';\r\nimport Checkbox from '../components/CheckBox';\r\n\r\nconst items = [\r\n    \"One\",\r\n    \"Two\",\r\n    \"Three\",\r\n];\r\n\r\nclass Application extends Component {\r\n    componentWillMount = () => {\r\n        this.selectedCheckboxes = new Set();\r\n    }\r\n\r\n    toggleCheckbox = label => {\r\n        if (this.selectedCheckboxes.has(label)) {\r\n            this.selectedCheckboxes.delete(label);\r\n        } else {\r\n            this.selectedCheckboxes.add(label);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = formSubmitEvent => {\r\n        formSubmitEvent.preventDefault();\r\n\r\n        for (const checkbox of this.selectedCheckboxes) {\r\n            console.log(checkbox, 'is selected.');\r\n        }\r\n    }\r\n\r\n    createCheckbox = label => (\r\n        <Checkbox\r\n            label={label}\r\n            handleCheckboxChange={this.toggleCheckbox}\r\n            key={label}\r\n        />\r\n    )\r\n\r\n    createCheckboxes = () => (\r\n        items.map(this.createCheckbox)\r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n\r\n                        <form onSubmit={this.handleFormSubmit}>\r\n                            {this.createCheckboxes()}\r\n\r\n                            <button className=\"btn btn-default\" type=\"submit\">Save</button>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Application;","export default __webpack_public_path__ + \"static/media/w2.0b64f7b0.jpg\";","import { Form, Formik } from 'formik';\r\nimport React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport welcome from \"../../assets/images/w2.jpg\"\r\nimport * as Yup from \"yup\";\r\n\r\nfunction Instruction() {\r\n    const history = useHistory();\r\n    const [Display, setDisplay] = useState(false);\r\n    const [Display1, setDisplay1] = useState(false);\r\n\r\n    const [img_urls, setimg_urls] = useState(\"\");\r\n\r\n    // useEffect(() => {\r\n    //     setDisplay(true)\r\n    // }, [])\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const initialValues = {\r\n        prof_img: \"\",\r\n    };\r\n\r\n    const validate = Yup.object({\r\n        prof_img: Yup.string()\r\n            .required(\"Prof Image is required\"),\r\n\r\n    });\r\n\r\n    const GetAllRecords = () => {\r\n        var header = new Headers();\r\n        var request = {\r\n            method: \"GET\",\r\n            headers: header,\r\n            redirect: \"follow\"\r\n        }\r\n        fetch(`http://208.109.14.182:9000/masters/employeedetails/manager/${uid.managerId}`, request)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                // console.log(resData)\r\n                // console.log(resData.data.length)\r\n                // console.log(resData.data[0].prof_img)\r\n                if (resData.data[0].prof_img == \"\") {\r\n                    setDisplay(true)\r\n                }\r\n\r\n                if (resData.data.length > 0) {\r\n                    // alert(\"1\")\r\n                    console.log(resData.data[0].prof_img)\r\n                    setimg_urls(\"http://dev.amplioso.com/images/\" + resData.data[0].prof_img)\r\n                } else {\r\n                    setDisplay(true)\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetAllRecords()\r\n    }, [])\r\n\r\n    const OnSubmitForm = (values) => {\r\n        console.log(values)\r\n\r\n        var myHeaders = new Headers();\r\n        // myHeaders.append(\"Content-Type\", \"application/json\");\r\n        // myHeaders.append(\"Authorization\");\r\n\r\n        var formdata = new FormData();\r\n        // console.log(\"gg\")\r\n\r\n        if (values) {\r\n            formdata.append('prof_img', values.prof_img, values.prof_img.name);\r\n        }\r\n\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: formdata,\r\n            redirect: \"follow\",\r\n        };\r\n\r\n        fetch(`http://208.109.14.182:9000/masters/employeedetails/manager_id/updateprofile_img/${uid.managerId}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.status == 200) {\r\n                    console.log(\"uploaded successfully\")\r\n                    GetAllRecords()\r\n\r\n                    setDisplay1(true)\r\n                    setTimeout(() => {\r\n                        setDisplay1(false)\r\n                        setDisplay(false)\r\n                    }, 2000);\r\n\r\n\r\n\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"about-area about-back-bg pt-120 pb-85 mb0\" >\r\n\r\n            <Modal\r\n                size=\"sm\"\r\n                show={Display1}\r\n                onHide={() => setDisplay1(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-md\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Notification</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className=\"success text-center \" >\r\n                    {/* <img style={{ height: \"80px\", width: \"80px\" }} src={Ico12} /> */}\r\n                    {/* <FaIconz.FaTimesCircle style={{ height: \"60px\", width: \"60px\" }} /> */}\r\n                    <div>\r\n                        <h3 class=\"dynamic-message\"> Image Uploaded Succesfully </h3>\r\n                    </div>\r\n                </Modal.Body>\r\n\r\n                {/* <Modal.Body className=\"success text-center text-danger bold h3\">shubh</Modal.Body>\r\n                <Modal.Body className=\"success text-center text-black bold\" ><p style={{ cursor: 'pointer' }} onClick={() => setDisplay(false)} >Ok</p></Modal.Body> */}\r\n\r\n            </Modal>\r\n\r\n            <Modal\r\n                size=\"xl\"\r\n                show={Display}\r\n                onHide={() => setDisplay(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-md\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Notification</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className=\"success text-center mt-5\" style={{ backgroundColor: \"#7b2cbf\" }}>\r\n                    {/* <img style={{ height: \"80px\", width: \"80px\" }} src={Ico12} /> */}\r\n                    {/* <FaIconz.FaTimesCircle style={{ height: \"60px\", width: \"60px\" }} /> */}\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validate}\r\n                        validateOnBlur={false}\r\n                        validateOnChange={false}\r\n                        onSubmit={(values, props) => {\r\n                            OnSubmitForm(values, props);\r\n                        }}\r\n                        render={({ values, errors, touched, handleReset, setFieldValue, formik }) => {\r\n                            return (\r\n\r\n                                <Form class=\"form-container\">\r\n                                    <div class=\"upload-files-container\">\r\n                                        <div class=\"drag-file-area\">\r\n                                            <span class=\"material-icons-outlined upload-icon\"> file_upload </span>\r\n                                            <h3 class=\"dynamic-message\"> Drag & drop any file here </h3>\r\n                                            <label class=\"label\"> or <span class=\"browse-files\">\r\n                                                <input type=\"file\" class=\"default-file-input\"\r\n                                                    onChange={value => {\r\n                                                        // console.log(value.target.files && value.target.files[0])\r\n                                                        setFieldValue(`prof_img`, (value.target.files && value.target.files[0] ? value.target.files[0] : \"\"))\r\n                                                        // setFieldValue(`img_url`, (value.target.files && value.target.files[0] ? URL.createObjectURL(value.target.files[0]) : \"\"))\r\n                                                        setimg_urls(value.target.files && value.target.files[0] ? URL.createObjectURL(value.target.files[0]) : \"\")\r\n                                                    }\r\n                                                    }\r\n                                                />\r\n                                                <span class=\"browse-files-text\">browse file</span> <span>from device</span> </span> </label>\r\n                                            <span class=\"browse-files-text\">{values.prof_img.name}</span>\r\n                                            {/* {console.log(values)} */}\r\n\r\n                                            {/* <div className=\"file-path-wrapper\">\r\n                                                <img src={values ? values.img_url : \"\"} className=\"comapnylogoimg\" style={{ marginLeft: \"18px\" }} width=\"120\" height=\"85\" />\r\n                                            </div> */}\r\n                                            <div className=\"file-path-wrapper\">\r\n                                                {/* <input className=\"file-path validate\" type=\"text\" defaultValue=\"Profile\" /> */}\r\n                                                <img src={img_urls ? img_urls : \"\"} className=\"comapnylogoimg\" style={{ marginLeft: \"18px\" }} width=\"120\" height=\"85\" alt=\"img\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"cannot-upload-message\"> <span class=\"material-icons-outlined\">error</span> Please select a file first <span class=\"material-icons-outlined cancel-alert-button\">cancel</span> </span>\r\n                                        <div class=\"file-block\">\r\n                                            <div class=\"file-info\"> <span class=\"material-icons-outlined file-icon\">description</span> <span class=\"file-name\"> </span> | <span class=\"file-size\">  </span> </div>\r\n                                            <span class=\"material-icons remove-file-icon\">delete</span>\r\n                                            <div class=\"progress-bar\"> </div>\r\n                                        </div>\r\n                                        <button type=\"submit\" class=\"upload-button\" > Upload </button>\r\n                                    </div>\r\n                                </Form>\r\n\r\n\r\n\r\n                            )\r\n                        }}\r\n                    />\r\n                </Modal.Body>\r\n\r\n                {/* <Modal.Body className=\"success text-center text-danger bold h3\">shubh</Modal.Body>\r\n                <Modal.Body className=\"success text-center text-black bold\" ><p style={{ cursor: 'pointer' }} onClick={() => setDisplay(false)} >Ok</p></Modal.Body> */}\r\n\r\n            </Modal>\r\n            <div className=\"container fullwidthcont\">\r\n                <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-7 text-pad1\">\r\n                        <strong>A few things you should know before we jump in:</strong>\r\n                        <ul className=\"abt-list\">\r\n                            <li>All questions seek your personal perspective. There are no right or wrong answers. </li>\r\n                            <li>Responses are anonymized and only aggregated insights are shared with the person on whom feedback is sought and their manager. </li>\r\n                            <li>You may select NA (Not Applicable) as your response under scenarios where you’ve either not had enough opportunity to observe the competency being rated, are unsure, or would like to skip the question.</li>\r\n                            <li>You can come back to the previous pages to change your answers. However, once the survey is submitted, your answers cannot be changed.</li>\r\n                        </ul><br />\r\n                        <p>\r\n                            You are about to give someone the gift of feedback. Thank you for that commitment. We know your time is valuable. From this point on, we only need 5-10 minutes of your time. Let’s get started.\r\n                        </p>\r\n                        <div className=\"button btn-align\">\r\n                            <a className=\"btn-next-start\" onClick={() => history.push('/surveyform')}><span className=\"txt\">Let's Get Started <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" /></span></a>                              </div>\r\n                    </div>\r\n                    <div className=\"col-lg-5\">\r\n                        <div className=\"abt-img-bak\" />\r\n                        <br />\r\n                        <br />\r\n\r\n                        <img src={welcome} className=\"img-intr\" alt=\"welcome\" />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Instruction;\r\n","import { Checkbox } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport '../../assets/css/Step7.css';\n\nconst items = [\n    \"Collaboration\",\n    \"Vision and Purpose\",\n    \"Sense of Humor\",\n    \"Innovation\",\n    \"Authenticity\",\n    \"Risk Aversion\",\n];\n\nexport default function Step5(props) {\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\n    const [checkedMap, setCheckedMap] = useState(new Map());\n    const [isChecked, setIsChecked] = useState([]);\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\n    const [showError, setshowError] = useState(false)\n\n    // const inputChange = (e, itemOption) => {\n    //     console.log(itemOption);\n    //     console.log(e.target.value);\n    //     // console.log(itemOption);\n\n    //     let iText = e.target.value;\n\n\n    // };\n\n    const inputChange = (e) => {\n        console.log(questionId)\n        console.log(SurveyAnswers)\n        // console.log(e.target.id)\n        let answer = e.target.value;\n        let optionID = parseInt(e.target.id);\n        console.log(answer)\n        console.log(optionID)\n        // var checkAll = SurveyAnswers.filter(({ option_id, created_by }) => option_id === optionID && created_by === uid)\n        // console.log(SurveyAnswers.filter(({question_id, option_id,answer, created_by }) => question_id === questionId && option_id === optionID && answer===\"true\" && created_by === uid));\n        var questionIdwiseData = (SurveyAnswers.filter(({ question_id, answer, created_by }) => question_id === questionId && answer === \"true\" && created_by === uid));\n\n        var alreadyVal = (SurveyAnswers.filter(({ question_id, option_id, created_by }) => question_id === questionId && option_id === optionID && created_by === uid));\n        console.log(alreadyVal)\n        console.log(questionIdwiseData)\n\n        if (alreadyVal.length == 0 && questionIdwiseData.length < 5) {\n            console.log(\"post\")\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            // inputList.map((item,key)=>{\n            var raw = JSON.stringify({\n                survey_id: 0,\n                 employee_id: uid.employeeId,\n    survey_user_mapping_id: 0,\n    surveyor_id: uid.userId,\n    company_id: uid.companyId,\n    manager_id: uid.managerId,\n    question_id: questionId,\n    \n                option_id: optionID,\n                answer: answer,\n                created_by: uid,\n                updated_by: uid,\n            });\n            var requestOptions = {\n                method: \"POST\",\n                headers: myHeaders,\n                body: raw,\n                redirect: \"follow\",\n            };\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\n                .then((response) => response.json())\n                .then((resData) => {\n                    console.log(resData);\n                    if (resData.status == 200) {\n                        console.log(\"Values Submitted Succesfully\");\n                        GetAllRecords();\n                        // props.next(values);\n\n                    }\n                    // GetAllRecords();\n                })\n                .catch((error) => console.log(\"error\", error));\n\n\n        } else if (alreadyVal.length > 0) {\n\n            console.log(questionIdwiseData.length <= 5);\n            console.log(alreadyVal[0].answer);\n            console.log(alreadyVal[0].answer == \"true\" && questionIdwiseData.length < 5 || alreadyVal[0].answer == \"false\" && questionIdwiseData.length != 5)\n            if (alreadyVal[0].answer == \"true\" && questionIdwiseData.length <= 5 || alreadyVal[0].answer == \"false\" && questionIdwiseData.length != 5) {\n                console.log(\"update\")\n\n                console.log(alreadyVal[0].id)\n                console.log(alreadyVal[0].answer == \"false\" ? true : false);\n\n                var myHeaders = new Headers();\n                myHeaders.append(\"Content-Type\", \"application/json\");\n                // inputList.map((item,key)=>{\n                var raw = JSON.stringify({\n                    survey_id: 0,\n                    survey_user_mapping_id: 0,\n                    surveyor_id: uid.userId,\n                    question_id: questionId,\n                    option_id: optionID,\n                    answer: alreadyVal[0].answer == \"false\" ? \"true\" : \"false\",\n                    created_by: uid,\n                    updated_by: uid,\n                });\n                var requestOptions = {\n                    method: \"PUT\",\n                    headers: myHeaders,\n                    body: raw,\n                    redirect: \"follow\",\n                };\n                fetch(`http://208.109.14.182:9000/masters/survey_answers/${alreadyVal[0].id}`, requestOptions)\n                    .then((response) => response.json())\n                    .then((resData) => {\n                        console.log(resData);\n                        if (resData.status == 200) {\n                            console.log(\"Values Submitted Succesfully\");\n                            GetAllRecords();\n                            // props.next(values);\n\n                        }\n                        // GetAllRecords();\n                    })\n                    .catch((error) => console.log(\"error\", error));\n            } else {\n                setshowError(true)\n\n            }\n\n        } else {\n            console.log(\"morethan 5\")\n            setshowError(true)\n        }\n        // for(var i=0; i<SurveyAnswers.length;i++){\n        //     console.log(SurveyAnswers[i].question_id==questionId && SurveyAnswers[i].option_id==optionID && SurveyAnswers[i].created_by==uid && SurveyAnswers[i].answer==\"true\");\n        // }\n\n\n\n        // var myHeaders = new Headers();\n        // myHeaders.append(\"Content-Type\", \"application/json\");\n        // // inputList.map((item,key)=>{\n        // var raw = JSON.stringify({\n        //     survey_id: 0,\n        //     survey_user_mapping_id: 0,\n        //     surveyor_id: uid.userId,\n        //     question_id: questionId,\n        //     option_id: optionID,\n        //     answer: val1,\n        //     created_by: uid,\n        //     updated_by: uid,\n        // });\n        // var requestOptions = {\n        //     method: \"POST\",\n        //     headers: myHeaders,\n        //     body: raw,\n        //     redirect: \"follow\",\n        // };\n        // fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\n        //     .then((response) => response.json())\n        //     .then((resData) => {\n        //         console.log(resData);\n        //         if (resData.status == 200) {\n        //             console.log(\"Values Submitted Succesfully\");\n        //         }\n        //         GetAllRecords();\n        //     })\n        //     .catch((error) => console.log(\"error\", error));\n\n\n        // props.next(values);\n\n\n    }\n\n\n    const [question, setquestion] = useState(\"\")\n    const [questionId, setquestionId] = useState(\"\")\n    const [first_name, setfirst_name] = useState(\"\")\n    const [last_name, setlast_name] = useState(\"\")\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\n\n    let uid = 1;\n\n\n\n\n\n    const GetAllRecords = async () => {\n        setshowError(false)\n\n        // console.log(props.data.que1)\n        var myHeaders = new Headers();\n        var requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n        const response = await fetch(`http://208.109.14.182:9000/masters/users/${uid}`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                // setlistRecord(result.data);\n                console.log(\"11111\")\n                console.log(result.data[0].first_name)\n                setfirst_name(result.data[0].first_name)\n                setlast_name(result.data[0].last_name)\n            })\n            .catch(error => console.log('error', error));\n\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\n            .then(response2 => response2.json())\n            .then(result => {\n                // setlistRecord(result.data);\n                console.log(result)\n                // if(result.length>0){\n                let qID = result.data[4].id;\n                setquestionId(qID);\n                console.log(result.data[4].id)\n                console.log(result.data[4].id)\n                setquestion(result.data[4].question);\n                getOptions(result.data[4].id);\n                // }\n\n            })\n\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\n            .then(surveyResult => {\n                console.log(surveyResult.data)\n                setSurveyAnswers(surveyResult.data);\n\n            })\n    }\n\n    const getOptions = (resIdC) => {\n        console.log(\"checkIDsss\", resIdC, questionId)\n        var myHeaders = new Headers();\n        var requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\n            .then(response3 => response3.json())\n            .then(rwsOpt => {\n                // setlistRecord(rwsOpt.data);\n                // setOptionData(rwsOpt.data);\n\n                console.log(questionId, \"jj\")\n\n                console.log(rwsOpt.data)\n                console.log(rwsOpt.data.length, \"d\")\n                let halfwayPoint = rwsOpt.data.length / 3;\n                console.log(halfwayPoint);\n                let columnA = rwsOpt.data.splice(0, halfwayPoint)\n                let columnB = rwsOpt.data.splice(0, halfwayPoint)\n                let columnC = rwsOpt.data.splice(0)\n                setOptionDataCol1(columnA);\n                setOptionDataCol2(columnB);\n                setOptionDataCol3(columnC);\n\n                console.log(columnA);\n                console.log(columnB);\n                console.log(columnC);\n\n            })\n    }\n\n\n    useEffect(() => {\n\n\n        GetAllRecords()\n\n    }, []);\n    // console.log(columnA, columnB);\n\n    const SelectedOption = () => {\n        // alert(\"ggg\")\n    }\n    return (\n        <fieldset>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h2 className=\"steps\">50%</h2>\n                </div>\n            </div>\n            <div className=\"form-card\">\n                <div className=\"row\">\n                    {/* <Checkbox onChange={inputChange}\n                    /> */}\n                    <p className='fs-title-m'>{question.replace(\"[FIRST NAME ] \", first_name + \" \")}</p>\n                    <hr />\n                    <br />\n                    <br />\n                    {showError == true ? (<span className=\"text-center bold text-danger\">Please select only 5 options</span>) : null}\n\n                    <div className=\"col-12\" >\n\n                        <table width=\"100%\" border={0} cellPadding={0} cellSpacing={0}>\n                            <tbody>\n\n                                <tr>\n                                    <td>\n                                        <table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\n                                            <tbody>\n\n                                                {OptionDataCol1.map((item, key) => {\n                                                    var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid)\n                                                    console.log(optionVal)\n                                                    return (\n                                                        <tr name={item.id} value=\"ee\"  >\n                                                            <td>\n                                                                <div className=\"container\" >\n                                                                    <div >\n                                                                        <label>\n                                                                            <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\n                                                                                id={item.id}\n                                                                                checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\n                                                                            />\n                                                                            <span> {item.option}</span>\n                                                                        </label>\n                                                                    </div>\n                                                                </div>\n\n\n\n\n                                                            </td>\n                                                            {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\n                                                        </tr>\n                                                    )\n                                                })}\n\n                                            </tbody>\n                                        </table>\n                                    </td>\n\n                                    <td>\n                                        <table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\n                                            <tbody>\n\n                                                {OptionDataCol2.map((item, key) => {\n                                                    var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid)\n                                                    console.log(optionVal)\n                                                    return (\n                                                        <tr name={item.id} value=\"ee\"  >\n                                                            <td>\n                                                                <div className=\"container\" >\n                                                                    <div >\n                                                                        <label>\n                                                                            <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\n                                                                                id={item.id}\n                                                                                checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\n                                                                            />\n                                                                            <span> {item.option}</span>\n                                                                        </label>\n                                                                    </div>\n                                                                </div>\n\n\n                                                            </td>\n                                                            {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\n                                                        </tr>\n                                                    )\n                                                })}\n\n                                            </tbody>\n                                        </table>\n                                    </td>\n\n\n                                    <td valign=\"top\">\n                                        <table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\n                                            <tbody>\n\n                                                {OptionDataCol3.map((item, key) => {\n                                                    var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid)\n                                                    console.log(optionVal)\n                                                    return (\n                                                        <tr name={item.id} value=\"ee\"  >\n                                                            <td>\n                                                                <div className=\"container\" >\n                                                                    <div >\n                                                                        <label>\n                                                                            <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\n                                                                                id={item.id}\n                                                                                checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\n                                                                            />\n                                                                            <span> {item.option}</span>\n                                                                        </label>\n                                                                    </div>\n                                                                </div>\n\n\n                                                            </td>\n                                                            {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\n                                                        </tr>\n                                                    )\n                                                })}\n\n                                            </tbody>\n                                        </table>\n                                    </td>\n\n                                </tr>\n                            </tbody></table>\n\n                        {/* {OptionDataCol1.map((item, key) => {\n                            return (\n                                <div class=\"col-sm-4 p-3\" onSelect={SelectedOption}>\n                                    {item.option}\n                                </div>\n                                \n                            )\n                        })} */}\n\n                    </div>\n                    {/* <div className=\"col-sm-4\" >\n\n                        {OptionDataCol2.map((item, key) => {\n                            return (\n                                <div class=\"col-sm-4 p-3\">\n                                    {item.option}\n                                </div>\n                            )\n                        })}\n\n                    </div>\n\n                    <div className=\"col-sm-4\" >\n\n                        {OptionDataCol3.map((item, key) => {\n                            return (\n                                <div class=\"col-sm-4 p-3\">\n                                    {item.option}\n                                </div>\n                            )\n                        })}\n\n                    </div> */}\n\n                </div>\n\n            </div>\n\n\n\n            <div className=\"col-lg-12\">\n                <div className=\"button btn-align-step2\">\n                    <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\n                    <input type=\"button\" onClick={() => props.next()} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\n                </div>\n            </div>\n        </fieldset>\n\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/Welcome.18186ea6.png\";","\r\nimport React from 'react'\r\nimport welcome from \"../../assets/images/Welcome.png\"\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport { useJwt } from \"react-jwt\";\r\nimport { useLayoutEffect } from 'react';\r\nimport { useState } from 'react';\r\nfunction WelcomeScreen(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const [validToken, setvalidToken] = useState(false);\r\n    const [ManagerId, setManagerId] = useState();\r\n\r\n    const history = useHistory();\r\n    const { token_ele } = useParams();\r\n\r\n    // const { decodedToken, isExpired } = useJwt(token_ele);\r\n\r\n\r\n\r\n    function chekAuthUser() {\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        // inputList.map((item,key)=>{\r\n        var raw = JSON.stringify({\r\n            token_ele: token_ele,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/check_survey_key`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                if (resData.status == 200) {\r\n                    var myHeadersCf = new Headers();\r\n                    var requestOptions = {\r\n                        method: 'GET',\r\n                        headers: myHeadersCf,\r\n                        redirect: 'follow'\r\n                    };\r\n\r\n                    fetch(`http://208.109.14.182:9000/masters/collect_feedback/${resData.data.id}`, requestOptions)\r\n                        .then(response => response.json())\r\n                        .then(result => {\r\n                            // setlistRecord(result.data);\r\n                            // setManagerId(result.data[0].manager_id)\r\n                            // console.log(result.data)\r\n\r\n                            if (result.status == 200) {\r\n                                let current_date = new Date().toISOString().split('T')[0]\r\n                                let endDate = result.data[0].period_end;\r\n                                if (current_date > endDate) {\r\n                                    console.log(\"false\")\r\n                                    history.push('/unauthorized_tkn')\r\n                                    return false\r\n                                }\r\n\r\n                                var survey_user = {\r\n                                    token: token_ele,\r\n                                    userId: parseInt(resData.data.id),\r\n                                    employeeId: parseInt(result.data[0].employee_id),\r\n                                    managerId: parseInt(result.data[0].manager_id),\r\n                                    companyId: parseInt(result.data[0].company_id),\r\n                                };\r\n                            }\r\n\r\n\r\n                            console.log(resData);\r\n                            setvalidToken(true)\r\n                            localStorage.setItem(\"survey_token\", JSON.stringify(survey_user))\r\n\r\n                        })\r\n\r\n                        .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n\r\n                    // console.log(resData);\r\n                    // setvalidToken(true)\r\n                    // localStorage.setItem(\"survey_token\", JSON.stringify(survey_user))\r\n                    // GetAllRecords();\r\n                    // props.next(values);\r\n\r\n                } else {\r\n                    setvalidToken(false)\r\n\r\n                    // history.push(\"/Error404\")\r\n                }\r\n                // GetAllRecords();\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(token_ele)\r\n        chekAuthUser()\r\n    }, [])\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"useEffect\")\r\n    //     console.log(isExpired)\r\n\r\n    // }, [])\r\n\r\n    return (\r\n\r\n        <section className=\"about-area about-back-bg pt-120 pb-85 mb0\">\r\n            <div className=\"container fullwidthcont\">\r\n                {/* {console.log(validToken)} */}\r\n                {validToken ? (\r\n                    <div className=\"row clearfix screen-height\">\r\n                        <div className=\"col-lg-6 col-sm-6 img-position-container\">\r\n                            <div className=\"abt-img-bak3\"></div>\r\n                            <br />\r\n                            <br />\r\n                            <img src={welcome} className=\"img-home\" alt=\"welcome\" />\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-sm-6 text-home\">\r\n                            <h5>Welcome!</h5>\r\n                            <div className=\"line\" />\r\n                            <p>\r\n                                We all need feedback. It’s what makes us all better. At Amplioso (amplio = Latin for improvement), we’re passionate about 360-degree feedback and take it seriously. We don’t take you through an unnecessary barrage of questions. We know what matters.\r\n                            </p>\r\n                            <br />\r\n                            <br />\r\n                            <div className=\"button btn-align\">\r\n                                <a className=\"btn-next\" onClick={() => history.push('/instruction')}><span className=\"txt\">Next <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" /></span></a>                              </div>\r\n                        </div>\r\n\r\n\r\n                    </div>) : null}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default WelcomeScreen;","import { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StepOne from \"./steps/Step1\"\r\nimport StepTwo from \"./steps/Step2\"\r\nimport StepThree from \"./steps/Step3\"\r\nimport StepFour from \"./steps/Step4\"\r\nimport StepFive from \"./steps/Step5\"\r\nimport StepSix from \"./steps/Step6\"\r\nimport StepSeven from \"./steps/Step7\"\r\nimport StepEight from \"./steps/Step8\"\r\nimport StepNine from \"./steps/Step9\"\r\nimport Pdf from \"./steps/Pdf\";\r\nexport default function SurveyForm() {\r\n    const [data, setData] = useState({\r\n        first_name: 0,\r\n        last_name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [width, setWidth] = useState(12);\r\n\r\n    const makeRequest = (formData) => {\r\n        console.log(\"Form Submitted\", formData);\r\n    };\r\n\r\n    const handleNextStep = (newData, final = false) => {\r\n        setData((prev) => ({ ...prev, ...newData }));\r\n        if (final) {\r\n            makeRequest(newData);\r\n            return;\r\n        }\r\n        setCurrentStep((prev) => prev + 1);\r\n        setWidth((prev) => prev + 11);\r\n    };\r\n\r\n    const handlePrevStep = (newData) => {\r\n        setData((prev) => ({ ...prev, ...newData }));\r\n        setCurrentStep((prev) => prev - 1);\r\n        setWidth((prev) => prev - 11);\r\n    };\r\n    const steps = [\r\n        // <Pdf />,\r\n        <StepOne next={handleNextStep} data={data} />,\r\n        <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepThree next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepFour next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepFive next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepSix next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepSeven next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepEight next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepNine next={handleNextStep} prev={handlePrevStep} data={data} />\r\n\r\n\r\n\r\n    ];\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"content-body\">\r\n            <div className=\"container-fluid bg-img\">\r\n                <div className=\"form-head mb-4 flex-wrap align-items-center\">\r\n                    <div className=\"me-auto\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-lg-12 text-center p-0 mt-3 mb-2 form-box\" style={{ marginBottom: '40px !important' }}>\r\n                                <div className=\"px-0 pb-0 mt-3 mb-3\">\r\n                                    <div id=\"msform\">\r\n                                        {/* <div className=\"progress\">\r\n                                            <div className=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuemin={0} aria-valuemax={100} style={{ width: `${width}%` }} />\r\n                                        </div> */}\r\n                                        <div className=\"App\">{steps[currentStep]}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const stepOneValidationSchema = Yup.object({\r\n//     first_name: Yup.string().required().label(\"First name\"),\r\n//     last_name: Yup.string().required().label(\"Last name\")\r\n// });\r\n\r\n// const StepOne = (props) => {\r\n//     const handleSubmit = (values) => {\r\n//         props.next(values);\r\n//     };\r\n\r\n//     return (\r\n//         <Formik\r\n//             validationSchema={stepOneValidationSchema}\r\n//             initialValues={props.data}\r\n//             onSubmit={handleSubmit}\r\n//         >\r\n//             {() => (\r\n//                 <Form>\r\n//                     <p>First Name</p>\r\n//                     <Field name=\"first_name\" />\r\n//                     <ErrorMessage name=\"first_name\" />\r\n\r\n//                     <p>Last Name</p>\r\n//                     <Field name=\"last_name\" />\r\n//                     <ErrorMessage name=\"last_name\" />\r\n\r\n//                     <button type=\"submit\">Next</button>\r\n//                 </Form>\r\n//             )}\r\n//         </Formik>\r\n//     );\r\n// };\r\n\r\n// const stepTwoValidationSchema = Yup.object({\r\n//     email: Yup.string().required().email().label(\"Email\"),\r\n//     password: Yup.string().required().label(\"Password\")\r\n// });\r\n\r\n// const StepTwo = (props) => {\r\n//     const handleSubmit = (values) => {\r\n//         props.next(values, true);\r\n//     };\r\n\r\n//     return (\r\n//         <Formik\r\n//             validationSchema={stepTwoValidationSchema}\r\n//             initialValues={props.data}\r\n//             onSubmit={handleSubmit}\r\n//         >\r\n//             {({ values }) => (\r\n//                 <Form>\r\n//                     <p>Email</p>\r\n//                     <Field name=\"email\" />\r\n//                     <ErrorMessage name=\"email\" />\r\n\r\n//                     <p>Password</p>\r\n//                     <Field name=\"password\" />\r\n//                     <ErrorMessage name=\"password\" />\r\n\r\n//                     <button type=\"button\" onClick={() => props.prev(values)}>\r\n//                         Back\r\n//                     </button>\r\n//                     <button type=\"submit\">Submit</button>\r\n//                 </Form>\r\n//             )}\r\n//         </Formik>\r\n//     );\r\n// };\r\n","export default __webpack_public_path__ + \"static/media/default-logo.06ecaef6.png\";","import React, { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport image from '../../assets/images/default-logo.png'\r\n\r\nconst TokenExpiredPage = () => {\r\n  let location = useLocation();\r\n  useEffect(() => {\r\n    console.log(location)\r\n  }, [])\r\n  return (\r\n    // <div>{location.state ? location.state : \"token expired\"}</div>\r\n\r\n    <section className=\"about-area about-back-bg pt-120 pb-85 mb0\">\r\n      <img className='m-3' src={image} style={{ padding: \"5px\" }} height={`60px`} />\r\n\r\n      <div className=\"container fullwidthcont\">\r\n        <div className='text-center' style={{ fontSize: \"50px\", position: \"relative\", bottom: \"-350px\" }}>! {location.state ? location.state : \"token expired\"}</div>\r\n      </div>\r\n    </section>\r\n\r\n  )\r\n}\r\n\r\nexport default TokenExpiredPage","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useHistory,\r\n    useParams,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport SurveyHeader from \"./components/SurveyHeader\";\r\nimport Application from \"./pages/test\";\r\nimport Instruction from \"./pages/Survey/Instruction\";\r\nimport StepCheck from \"./pages/Survey/StepCheck\";\r\n\r\nimport WelcomeScreen from \"./pages/Survey/welcomescreen\";\r\nimport SurveyForm from \"./pages/Survey/SurveyForm\";\r\nimport TokenExpiredPage from \"./pages/Survey/TokenExpiredPage\";\r\nimport ReportPdf from \"./pages/Survey/steps/ReportPdf\";\r\n\r\nconst SuperAdminRouting = () => { \r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() => (\r\n                <Redirect to=\"/unauthorized_tkn\" />\r\n            )} />\r\n\r\n            <Route path=\"/tkn/:token_ele\"> \r\n                <WelcomeScreen />\r\n            </Route>\r\n            <Route path=\"/instruction\">\r\n                <SurveyHeader data={<Instruction />}\r\n                />\r\n            </Route>\r\n            <Route path=\"/StepCheck\">\r\n                <SurveyHeader data={<StepCheck />}\r\n                />\r\n            </Route>\r\n            <Route path=\"/surveyform\">\r\n                <SurveyHeader data={<SurveyForm />}\r\n                />\r\n            </Route>\r\n            <Route path=\"/unauthorized_tkn\">\r\n                <TokenExpiredPage />\r\n            </Route>\r\n            <Route path=\"/ReportPdf\">\r\n                <ReportPdf />\r\n            </Route>\r\n\r\n        </Switch>\r\n    );\r\n};\r\n\r\n\r\n\r\n// const colorOptions={\r\n//     slices: {\r\n//         0: { color: \"rgb(168,26,12)\" },\r\n//         1: { color: \"rgb(55,55,94)\" },\r\n//         2: { color: \"rgb(53,98,136)\" },\r\n//         3: { color: \"rgb(170,207,221)\" },\r\n//     },\r\n// }\r\n\r\nexport default SuperAdminRouting","import React, { createContext, useEffect, useReducer } from \"react\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport SurveyRouting from \"./SurveyRouting\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={'/main_amp'} >\n      <SurveyRouting />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react'\n\nexport default function GraphVerticalBars(props) {\n    console.log(props);\n    const percentage = Math.ceil(props.percentage);\n    const color = props.color;\n\n    return (\n        <>\n            <div className='graph_bar_test'>\n                <div style={{ width: \"100%\", height: percentage * 10 > 100 ? \"100%\" : `${percentage * 10}%`, backgroundColor: color }}>\n                    <div style={{ width: \"98%\", height: percentage * 10 + 5, backgroundColor: color }}>\n                        {/* <div style={{ color: \"white\", transform: \"rotate(-90deg)\", textAlign: \"start\", fontSize: \"8px\" }}>{percentage > 100 ? \"100%\" : `${percentage}%`}</div> */}\n                    </div> <div style={{ color: \"white\", transform: \"rotate(-90deg)\", textAlign: \"end\", fontSize: \"8px\",marginTop:\"-5px\" }}>{percentage > 10 ? \"10.0\" : `${percentage}.0`}</div>\n                    {/* <span>{percentage}</span> */}\n                </div>\n            </div>\n\n        </>\n    )\n}\n","import { Button, Checkbox, CircularProgress } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Modal } from 'react-bootstrap';\r\nimport CircularProgressWithLabel from '../../../components/CircularProgressWithLabel';\r\n\r\nconst items = [\r\n    \"Collaboration\",\r\n    \"Vision and Purpose\",\r\n    \"Sense of Humor\",\r\n    \"Innovation\",\r\n    \"Authenticity\",\r\n    \"Risk Aversion\",\r\n];\r\n\r\nexport default function Step5(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionDataCol, setOptionDataCol] = useState([])\r\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\r\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\r\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [showError, setshowError] = useState(false)\r\n    const [loading, setloading] = useState(0)\r\n    const [OptionLenght, setOptionLenght] = useState()\r\n    const [noti, setNoti] = useState(false)\r\n\r\n    const [notification, setnotification] = useState(\"\");\r\n    const [Display, setDisplay] = useState(false);\r\n    const [inputListFinal, setInputListFinal] = useState([]);\r\n    const [inputListFinal1, setInputListFinal1] = useState([]);\r\n    const [inputListFinal2, setInputListFinal2] = useState([]);\r\n\r\n    const [RecordeData, setRecordeData] = useState()\r\n    // const [inputListFinal, setInputListFinal] = useState([{ range_val: 0, option: \"\", option_id: 0 }, { range_val: 0, option: \"\", option_id: 0 }, { range_val: 0, option: \"\", option_id: 0 }, { range_val: 0, option: \"\", option_id: 0 }, { range_val: 0, option: \"\", option_id: 0 }]);\r\n\r\n\r\n\r\n    const handleSubmit = (values) => {\r\n        // var questionIdwiseData = (SurveyAnswers.filter(({ question_id, answer, created_by }) => question_id === questionId && answer === \"true\" && created_by === uid.userId));\r\n\r\n        var countInputList = inputListFinal.filter(({ status }) => status == true).length;\r\n\r\n        if (countInputList != 5) {\r\n            setnotification(\"Please Select Only Five Options\")\r\n            setDisplay(true)\r\n            return false\r\n        }\r\n\r\n\r\n\r\n        console.log(RecordeData)\r\n        console.log(questionId);\r\n        // props.next(values);\r\n        console.log(\"update\")\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n            feature4: inputListFinal,\r\n            updated_by: uid.userId\r\n        });\r\n        var requestOptions = {\r\n            method: \"PUT\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                if (resData.status == 200) {\r\n                    console.log(\"Values Submitted Succesfully\");\r\n                    GetAllRecords();\r\n                    props.next(values);\r\n                    console.log(resData);\r\n                }\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const getSelectedOptions = async () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        var raw = JSON.stringify({\r\n            question_id: 27,\r\n            surveyor_id: uid.userId\r\n        })\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        }\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/survey_answers/step5-7`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(resData => {\r\n                console.log(\"0008\", resData.data)\r\n                setOptionLenght(resData.data)\r\n                if (resData.data > 5) {\r\n                    // alert(\"false\")\r\n                    console.log(\"morethan 5\")\r\n                    setnotification(\"!Oops sorry, you can select only five options\")\r\n                    setDisplay(true)\r\n                    // window.scrollTo(0, 0)\r\n                    setloading(0)\r\n                    return false\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const GetAllRecords = async () => {\r\n        setshowError(false)\r\n\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[4].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[4].id)\r\n                console.log(result.data[4].id)\r\n                setquestion(result.data[4].question);\r\n                getOptions(result.data[4].id);\r\n                // }\r\n\r\n            })\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/survey_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                console.log(result.data)\r\n                setRecordeData(result.data)\r\n                console.log(result.data.feature)\r\n\r\n                let MyValues = result.data;\r\n                console.log(\"Edit Values\", MyValues);\r\n\r\n                MyValues.map((x, i) => {\r\n                    // console.log(i)\r\n                    let Feature = eval(x.feature4);\r\n                    console.log(\"feature\", Feature);\r\n                    if (Feature) {\r\n                        setInputListFinal(Feature)\r\n\r\n                    }\r\n                })\r\n\r\n\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        setloading(1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                // setOptionData(rwsOpt.data);\r\n                console.log(rwsOpt.data)\r\n                console.log(\"yes\")\r\n                setOptionDataCol(rwsOpt.data);\r\n                // console.log(questionId, \"jj\")\r\n\r\n                // console.log(rwsOpt.data)\r\n                // console.log(rwsOpt.data.length, \"d\")\r\n                // let halfwayPoint = rwsOpt.data.length;\r\n                // console.log(halfwayPoint);\r\n                let column = rwsOpt.data;\r\n                // let columnA = rwsOpt.data.splice(0, halfwayPoint)\r\n                // let columnB = rwsOpt.data.splice(0, halfwayPoint)\r\n                // let columnC = rwsOpt.data.splice(0)\r\n                // setOptionDataCol1(columnA);\r\n                // setOptionDataCol2(columnB);\r\n                // setOptionDataCol3(columnC);\r\n                // setOptionDataCol(column);\r\n                // console.log(column);\r\n\r\n                // console.log(columnA);\r\n                // console.log(columnB);\r\n                // console.log(columnC);\r\n\r\n                if (column.length != inputListFinal.length) {\r\n                    column.map((item, index) => {\r\n                        setInputListFinal(inputListFinal => [...inputListFinal, { option_id: null, range_val: 0, option: \"\", status: false }])\r\n                    })\r\n                    setloading(0)\r\n\r\n                }\r\n\r\n                // if (columnB.length != inputListFinal.length) {\r\n                //     columnB.map((item, index) => {\r\n                //         console.log(item)\r\n                //         setInputListFinal(inputListFinal1 => [...inputListFinal1, { range_val: 0 }])\r\n                //     })\r\n                // }\r\n\r\n\r\n                // if (columnC.length != inputListFinal.length) {\r\n                //     columnC.map((item, index) => {\r\n                //         console.log(item)\r\n                //         setInputListFinal(inputListFinal2 => [...inputListFinal2, { range_val: 0 }])\r\n                //     })\r\n                // }\r\n\r\n\r\n                // if (columnB.length != inputListFinal.length) {\r\n                //     columnB.map((item, index) => {\r\n                //         console.log(item)\r\n                //         setInputListFinal(inputListFinal => [...inputListFinal, { range_val1: 0 }])\r\n                //     })\r\n                // }\r\n\r\n                // if (columnC.length != inputListFinal.length) {\r\n                //     columnC.map((item, index) => {\r\n                //         console.log(item)\r\n                //         setInputListFinal(inputListFinal => [...inputListFinal, { range_val3: 0 }])\r\n                //     })\r\n                // }\r\n\r\n\r\n\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // setloading(0)\r\n        GetAllRecords()\r\n            .then(() => {\r\n                // setloading(0)\r\n                getSelectedOptions()\r\n            })\r\n\r\n        // renderModal()\r\n\r\n    }, []);\r\n\r\n    if (loading === 1) {\r\n        return <div className=\"loader\"> <CircularProgress /></div>\r\n    }\r\n    // const renderModal = () => {\r\n    //     // e.preventDefault()\r\n    //     // alert(\"hhg\")\r\n    //     setnotification(\"!Oops sorry, you can select only five options\")\r\n    //     setDisplay(true)\r\n    // }\r\n\r\n    const handleInputChange = (e, i, option) => {\r\n\r\n        var countInputList = inputListFinal.filter(({ status }) => status == true).length;\r\n\r\n        if (countInputList == 5 && e.target.checked == true) {\r\n            setnotification(\"You Can Select Only Five Options\")\r\n            setDisplay(true)\r\n            return false\r\n        }\r\n\r\n        const { id, name, value, checked } = e.target;\r\n        console.log(checked)\r\n        const list = [...inputListFinal];\r\n        console.log(\"Here is the Value\", list);\r\n        // list[i][name] = value;\r\n        list[i][\"option_id\"] = id;\r\n        list[i][name] = option;\r\n        list[i][\"status\"] = checked;\r\n        setInputListFinal(list);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading === 1 ? (<div className=\"loader\" style={{ position: \"fixed\", top: \"0px\" }}> <CircularProgress /></div>) : null}\r\n\r\n            <fieldset style={{ pointerEvents: loading === 1 ? \"none\" : \"all\" }}>\r\n                {/* <ModalComp data={{ display: noti, notification: \"Errorss\" }} /> */}\r\n                <Modal\r\n                    size=\"md\"\r\n                    show={Display}\r\n                    onHide={() => setDisplay(false)}\r\n                    aria-labelledby=\"example-modal-sizes-title-md\"\r\n                    centered\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Notification</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body className=\"success text-center mt-5\">\r\n                        {/* <img style={{ height: \"80px\", width: \"80px\" }} src={Ico12} /> */}\r\n                        {/* <FaIconz.FaTimesCircle style={{ height: \"60px\", width: \"60px\" }} /> */}\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Body className=\"success text-center text-danger bold h3\">{notification}</Modal.Body>\r\n                    <Modal.Body className=\"success text-center text-black bold\" ><p style={{ cursor: 'pointer' }} onClick={() => setDisplay(false)} >Ok</p></Modal.Body>\r\n\r\n                </Modal>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* <h2 className=\"steps\">50%</h2> */}\r\n                        <div className=\"steps\">\r\n                            <CircularProgressWithLabel size={70} data={uid.userId} value={5 * 10} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-card\">\r\n                    {/* <button onClick={renderModal}  >check</button> */}\r\n\r\n                    <div className=\"row\">\r\n                        {/* <Checkbox onChange={inputChange}\r\n                    /> */}\r\n                        <p className='fs-title-m'>{question.replace(\"[FIRST NAME ] \", first_name + \" \")}</p>\r\n                        <hr />\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"text-center bold text-danger\" >\r\n                            {showError == true ? (<span >Please select only 5 options</span>) : null}\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"row p-5\" >\r\n                            <table className=\"table text-center\">\r\n                                {/* <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\"></th>\r\n                                        <th scope=\"col\"></th>\r\n                                        <th scope=\"col\"></th>\r\n                                    </tr>\r\n                                    \r\n                                </thead> */}\r\n\r\n                                <tbody>\r\n                                    <tr className='row'>\r\n                                        {OptionDataCol.map((item, i) => {\r\n                                            return (\r\n                                                <div className='col-sm-4' >\r\n                                                    <div className=\"container\" >\r\n                                                        {console.log(inputListFinal)}\r\n                                                        {inputListFinal ? (<div >\r\n                                                            <label  >\r\n                                                                <input type=\"checkbox\"\r\n                                                                    name=\"option\"\r\n                                                                    onChange={(e) => handleInputChange(e, i,item.option)}\r\n                                                                    // value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                    id={item.id}\r\n                                                                    checked={inputListFinal[i].status}\r\n                                                                />\r\n                                                                <span className=\"sub-q min-height\"> {item.option}</span>\r\n\r\n                                                            </label>\r\n                                                        </div>) : null}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"button btn-align-step2\">\r\n                        <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                        <input type=\"button\" onClick={handleSubmit} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/star_img.0f83ddab.jpg\";"],"sourceRoot":""}