{"version":3,"sources":["assets/images/profile/pic1.jpg","components/SurveyHeader.js","components/CheckBox.js","pages/test.js","assets/images/w2.jpg","pages/Survey/Instruction.js","pages/Survey/StepCheck.js","assets/images/Welcome.png","pages/Survey/welcomescreen.js","pages/Survey/steps/Step1.js","pages/Survey/steps/Step2.js","pages/Survey/steps/Step3.js","pages/Survey/steps/Step4.js","pages/Survey/steps/Step5.js","pages/Survey/steps/Step6.js","pages/Survey/steps/Step7.js","pages/Survey/steps/Step8.js","assets/images/deflogo.png","assets/images/star_img.jpg","components/GraphVerticalBars.js","pages/Survey/steps/Step9.js","pages/Survey/SurveyForm.js","assets/images/default-logo.png","pages/Survey/TokenExpiredPage.js","SurveyRouting.js","App.js","reportWebVitals.js","index.js"],"names":["SurveyHeader","props","process","REACT_APP_Base_URL_Backend","useState","isActive","setActive","localStorage","getItem","first_name","setfirst_name","last_name","setlast_name","setvalidToken","history","useHistory","uid","JSON","parse","console","log","useEffect","push","pathname","state","myHeaders","Headers","append","raw","stringify","token_ele","token","fetch","method","headers","body","redirect","then","response","json","resData","status","data","catch","error","chekAuthUser","requestOptions","userId","result","GetAllRecords","className","onClick","role","style","textTransform","src","profile","width","alt","href","id","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","points","x1","y1","x2","y2","Checkbox","isChecked","toggleCheckboxChange","handleCheckboxChange","label","setState","this","type","value","checked","onChange","Component","items","Instruction","welcome","Step5","Map","SurveyAnswers","setSurveyAnswers","showError","setshowError","inputChange","e","questionId","answer","target","optionID","parseInt","questionIdwiseData","filter","question_id","created_by","alreadyVal","option_id","length","survey_id","employee_id","employeeId","survey_user_mapping_id","surveyor_id","company_id","companyId","manager_id","managerId","updated_by","question","setquestion","setquestionId","OptionDataCol1","setOptionDataCol1","OptionDataCol2","setOptionDataCol2","OptionDataCol3","setOptionDataCol3","a","response2","qID","getOptions","responseSurveyAnswer","surveyResult","resIdC","response3","rwsOpt","halfwayPoint","columnA","splice","columnB","columnC","replace","border","cellPadding","cellSpacing","map","item","key","optionVal","name","option","valign","prev","defaultValue","next","WelcomeScreen","validToken","useParams","Date","toISOString","split","period_end","survey_user","setItem","Step1","loading","setloading","OptData","setOptData","OptionVal","setOptionVal","impVal","setimpVal","email","password","que1","handleChange","stepOneValidationSchema","Yup","raw1","CircularProgress","validationSchema","initialValues","onSubmit","values","warn","formik","handleSubmit","errors","touched","handleBlur","isValid","dirty","min","max","backgroundColor","inputVal","Step2","OptionData","setOptionData","val1","optionId","getOptions1","getFilteredValue","pointerEvents","valid_val","validate","Step3","inpV","setinputValue","ssr","optionVal1","optionVal2","check","setOptionLenght","getSelectedOptions","window","scrollTo","position","top","value1","OptionDataColUnfav1","setOptionDataColUnfav1","OptionDataColUnfav2","setOptionDataColUnfav2","response4","colSpan","align","rows","placeholder","updId","GraphVerticalBars","percentage","Math","ceil","color","transform","textAlign","fontSize","marginTop","Step9","DisplayDiv","pdfShowDes","setpdfShowDes","beliverName","exportPDFWithMethod","setTimeout","pdfExportComponent","current","save","React","useRef","impVal2Devided1","set_impVal2Devided1","impVal2Devided2","set_impVal2Devided2","survey_count","set_survey_count","managers_length","set_managers_length","company_length","set_company_length","competition","feedbackData","setfeedbackData","impVal2","setimpVal2","impVal3","setimpVal3","impVal4","setimpVal4","impVal5","setimpVal5","setimpVal6","impVal7","setimpVal7","impVal8","setimpVal8","Val","setVal","Val2","setVal2","Val3","setVal3","Val4","setVal4","ManagersLength","myHeaders4","requestOptions4","result4","result5","requestOptions2","user_email","result1","result2","result3","Devided1","Devided2","result3_1","left","right","fontWeight","logo_icon","MozTextAlignLast","textAlignLast","float","padding","getFullYear","period_start","ManagerId","createdAt","paddingLeft","paddingRight","bottom","toFixed","parseFloat","borderRadius","opacity","borderLeft","margin","survey_mean","internal_bench","external_bench","marginLeft","CompanyId","company_name","styles","buildStyles","rotation","textSize","pathTransitionDuration","pathTransition","pathColor","textColor","borderTop","borderRight","class","visibility","borderBlockEnd","paddingTop","chartType","options","legend","slices","boder","maxWidth","lineHeight","text","PDFExport","paperSize","ref","fileName","location","SurveyForm","setData","currentStep","setCurrentStep","setWidth","makeRequest","formData","handleNextStep","newData","final","handlePrevStep","steps","marginBottom","TokenExpiredPage","useLocation","image","SuperAdminRouting","exact","path","render","to","App","basename","SurveyRouting","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1447ce8d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pic1.73f8d2e3.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport \"../assets/css/style.css\"\r\nimport \"../assets/css/form-steps.css\"\r\nimport logo from \"../assets/images/logo-info.png\"\r\nimport profile from \"../assets/images/profile/pic1.jpg\"\r\nimport { useHistory } from 'react-router-dom';\r\nexport default function SurveyHeader(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const [isActive, setActive] = useState(\"false\");\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [validToken, setvalidToken] = useState(false);\r\n    const history = useHistory();\r\n    const survey_token = localStorage.getItem('survey_token');\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    // alert(token_ele)\r\n\r\n    // const uid = uid.userId;\r\n\r\n    const handleToggle = () => {\r\n        setActive(!isActive);\r\n    };\r\n\r\n    function chekAuthUser() {\r\n        // console.log(uid.userId)\r\n        // console.log(survey_token.userId)\r\n        console.log(uid)\r\n        // if (uid) {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        // inputList.map((item,key)=>{\r\n        var raw = JSON.stringify({\r\n            token_ele: uid.token,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/check_survey_key`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                if (resData.status == 200) {\r\n                    console.log(resData.data);\r\n                    setvalidToken(true)\r\n                    console.log(\"valid token\")\r\n                    // localStorage.setItem(\"survey_token\", token_ele)\r\n                    // GetAllRecords();\r\n                    // props.next(values);\r\n\r\n                } else {\r\n                    console.log(\"Invalid Token\")\r\n                    setvalidToken(false)\r\n                    history.push(\"/unauthorized_tkn\")\r\n                }\r\n                // GetAllRecords();\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n        // } else {\r\n        //     history.push(\"/unauthorized_tkn\")\r\n        // }\r\n    }\r\n\r\n    console.log(uid)\r\n\r\n    const GetAllRecords = () => {\r\n        // alert(BaseURL)\r\n        console.log(uid)\r\n        var myHeaders = new Headers();\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(uid==null){\r\n            history.push({\r\n                pathname:\"/unauthorized_tkn\",\r\n                state:\"Token Error\"\r\n            })\r\n            return false\r\n        }\r\n        chekAuthUser()\r\n        GetAllRecords();\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className=\"nav-header\">\r\n                <a href=\"/\" className=\"brand-logo\"><img className=\"logo-abbr\" src={logo} alt=\"company_logo\" />\r\n                </a>\r\n            </div> */}\r\n            <div className=\"header\">\r\n                <div className=\"header-content\">\r\n                    <nav className=\"navbar navbar-expand\">\r\n                        <div className=\"collapse navbar-collapse justify-content-between\">\r\n                            <ul className=\"navbar-nav header-right\">\r\n                                <li className=\"nav-item dropdown header-profile\">\r\n                                    <a className=\"nav-link\"\r\n                                        onClick={handleToggle} role=\"button\" data-bs-toggle=\"dropdown\">\r\n                                        <div className=\"header-info me-3\"> <span className=\"fs-16 font-w600 \" style={{textTransform:\"capitalize\"}}>{first_name} {last_name}</span> <small className=\"text-end fs-14 font-w400\">April 2021 - June 2021</small> </div>\r\n                                        <img src={profile} width={20} alt=\"profile\" /> </a>\r\n                                    <div className={`dropdown-menu dropdown-menu-end  ${isActive ? \"\" : \"show\"}`} > <a href=\"app-profile.html\" className=\"dropdown-item ai-icon\">\r\n                                        <svg id=\"icon-user1\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-blk\" width={18} height={18} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth='2' strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                            <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\r\n                                            <circle cx={12} cy={7} r={4} />\r\n                                        </svg>\r\n                                        <span className=\"ms-2\">Profile </span> </a> <a href=\"https://ventic.dexignzone.com/xhtml/error-404.html\" className=\"dropdown-item ai-icon\">\r\n                                            <svg id=\"icon-logout\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-blk\" width={18} height={18} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth='2' strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                                <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\r\n                                                <polyline points=\"16 17 21 12 16 7\" />\r\n                                                <line x1={21} y1={12} x2={9} y2={12} />\r\n                                            </svg>\r\n                                            <span className=\"ms-2\">Logout </span> </a> </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n            <div>{props.data}</div>\r\n        </div>\r\n    )\r\n}\r\n// }\r\n","import React, { Component, PropTypes } from 'react';\r\n\r\nclass Checkbox extends Component {\r\n    state = {\r\n        isChecked: false,\r\n    }\r\n\r\n    toggleCheckboxChange = () => {\r\n        const { handleCheckboxChange, label } = this.props;\r\n\r\n        this.setState(({ isChecked }) => (\r\n            {\r\n\r\n                isChecked: !isChecked,\r\n            }\r\n        ));\r\n\r\n        handleCheckboxChange(label);\r\n    }\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { isChecked } = this.state;\r\n\r\n        return (\r\n            <div className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        value={label}\r\n                        checked={isChecked}\r\n                        onChange={this.toggleCheckboxChange}\r\n                    />\r\n                    {label}\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Checkbox;","import React, { Component } from 'react';\r\nimport Checkbox from '../components/CheckBox';\r\n\r\nconst items = [\r\n    \"One\",\r\n    \"Two\",\r\n    \"Three\",\r\n];\r\n\r\nclass Application extends Component {\r\n    componentWillMount = () => {\r\n        this.selectedCheckboxes = new Set();\r\n    }\r\n\r\n    toggleCheckbox = label => {\r\n        if (this.selectedCheckboxes.has(label)) {\r\n            this.selectedCheckboxes.delete(label);\r\n        } else {\r\n            this.selectedCheckboxes.add(label);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = formSubmitEvent => {\r\n        formSubmitEvent.preventDefault();\r\n\r\n        for (const checkbox of this.selectedCheckboxes) {\r\n            console.log(checkbox, 'is selected.');\r\n        }\r\n    }\r\n\r\n    createCheckbox = label => (\r\n        <Checkbox\r\n            label={label}\r\n            handleCheckboxChange={this.toggleCheckbox}\r\n            key={label}\r\n        />\r\n    )\r\n\r\n    createCheckboxes = () => (\r\n        items.map(this.createCheckbox)\r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n\r\n                        <form onSubmit={this.handleFormSubmit}>\r\n                            {this.createCheckboxes()}\r\n\r\n                            <button className=\"btn btn-default\" type=\"submit\">Save</button>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Application;","export default __webpack_public_path__ + \"static/media/w2.0b64f7b0.jpg\";","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport welcome from \"../../assets/images/w2.jpg\"\r\nfunction Instruction() {\r\n    const history = useHistory();\r\n    return (\r\n        <section className=\"about-area about-back-bg pt-120 pb-85 mb0\" >\r\n            <div className=\"container fullwidthcont\">\r\n                <div className=\"row clearfix\">\r\n                    <div className=\"col-lg-7 text-pad1\">\r\n                        <strong>A few things you should know before we jump in:</strong>\r\n                        <ul className=\"abt-list\">\r\n                            <li>All questions seek your personal perspective. There are no right or wrong answers. </li>\r\n                            <li>Responses are anonymized and only aggregated insights are shared with the person on whom feedback is sought and their manager. </li>\r\n                            <li>You may select NA (Not Applicable) as your response under scenarios where you’ve either not had enough opportunity to observe the competency being rated, are unsure, or would like to skip the question.</li>\r\n                            <li>You can come back to the previous pages to change your answers. However, once the survey is submitted, your answers cannot be changed.</li>\r\n                        </ul><br />\r\n                        <p>\r\n                        You are about to give someone the gift of feedback. Thank you for that commitment. We know your time is valuable. From this point on, we only need 5-10 minutes of your time. Let’s get started.\r\n                        </p>\r\n                        <div className=\"button btn-align\">\r\n                            <a className=\"btn-next-start\" onClick={() => history.push('/surveyform')}><span className=\"txt\">Let's Get Started <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" /></span></a>                              </div>\r\n                    </div>\r\n                    <div className=\"col-lg-5\">\r\n                    <div className=\"abt-img-bak\"/>\r\n                    <br/>\r\n                    <br/>\r\n           \r\n                    <img src={welcome} className=\"img-intr\" alt=\"welcome\" />\r\n     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Instruction;\r\n","import { Checkbox } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport '../../assets/css/Step7.css';\n\nconst items = [\n    \"Collaboration\",\n    \"Vision and Purpose\",\n    \"Sense of Humor\",\n    \"Innovation\",\n    \"Authenticity\",\n    \"Risk Aversion\",\n];\n\nexport default function Step5(props) {\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\n    const [checkedMap, setCheckedMap] = useState(new Map());\n    const [isChecked, setIsChecked] = useState([]);\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\n    const [showError, setshowError] = useState(false)\n\n    // const inputChange = (e, itemOption) => {\n    //     console.log(itemOption);\n    //     console.log(e.target.value);\n    //     // console.log(itemOption);\n\n    //     let iText = e.target.value;\n\n\n    // };\n\n    const inputChange = (e) => {\n        console.log(questionId)\n        console.log(SurveyAnswers)\n        // console.log(e.target.id)\n        let answer = e.target.value;\n        let optionID = parseInt(e.target.id);\n        console.log(answer)\n        console.log(optionID)\n        // var checkAll = SurveyAnswers.filter(({ option_id, created_by }) => option_id === optionID && created_by === uid)\n        // console.log(SurveyAnswers.filter(({question_id, option_id,answer, created_by }) => question_id === questionId && option_id === optionID && answer===\"true\" && created_by === uid));\n        var questionIdwiseData = (SurveyAnswers.filter(({ question_id, answer, created_by }) => question_id === questionId && answer === \"true\" && created_by === uid));\n\n        var alreadyVal = (SurveyAnswers.filter(({ question_id, option_id, created_by }) => question_id === questionId && option_id === optionID && created_by === uid));\n        console.log(alreadyVal)\n        console.log(questionIdwiseData)\n\n        if (alreadyVal.length == 0 && questionIdwiseData.length < 5) {\n            console.log(\"post\")\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            // inputList.map((item,key)=>{\n            var raw = JSON.stringify({\n                survey_id: 0,\n                 employee_id: uid.employeeId,\n    survey_user_mapping_id: 0,\n    surveyor_id: uid.userId,\n    company_id: uid.companyId,\n    manager_id: uid.managerId,\n    question_id: questionId,\n    \n                option_id: optionID,\n                answer: answer,\n                created_by: uid,\n                updated_by: uid,\n            });\n            var requestOptions = {\n                method: \"POST\",\n                headers: myHeaders,\n                body: raw,\n                redirect: \"follow\",\n            };\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\n                .then((response) => response.json())\n                .then((resData) => {\n                    console.log(resData);\n                    if (resData.status == 200) {\n                        console.log(\"Values Submitted Succesfully\");\n                        GetAllRecords();\n                        // props.next(values);\n\n                    }\n                    // GetAllRecords();\n                })\n                .catch((error) => console.log(\"error\", error));\n\n\n        } else if (alreadyVal.length > 0) {\n\n            console.log(questionIdwiseData.length <= 5);\n            console.log(alreadyVal[0].answer);\n            console.log(alreadyVal[0].answer == \"true\" && questionIdwiseData.length < 5 || alreadyVal[0].answer == \"false\" && questionIdwiseData.length != 5)\n            if (alreadyVal[0].answer == \"true\" && questionIdwiseData.length <= 5 || alreadyVal[0].answer == \"false\" && questionIdwiseData.length != 5) {\n                console.log(\"update\")\n\n                console.log(alreadyVal[0].id)\n                console.log(alreadyVal[0].answer == \"false\" ? true : false);\n\n                var myHeaders = new Headers();\n                myHeaders.append(\"Content-Type\", \"application/json\");\n                // inputList.map((item,key)=>{\n                var raw = JSON.stringify({\n                    survey_id: 0,\n                    survey_user_mapping_id: 0,\n                    surveyor_id: uid.userId,\n                    question_id: questionId,\n                    option_id: optionID,\n                    answer: alreadyVal[0].answer == \"false\" ? \"true\" : \"false\",\n                    created_by: uid,\n                    updated_by: uid,\n                });\n                var requestOptions = {\n                    method: \"PUT\",\n                    headers: myHeaders,\n                    body: raw,\n                    redirect: \"follow\",\n                };\n                fetch(`http://208.109.14.182:9000/masters/survey_answers/${alreadyVal[0].id}`, requestOptions)\n                    .then((response) => response.json())\n                    .then((resData) => {\n                        console.log(resData);\n                        if (resData.status == 200) {\n                            console.log(\"Values Submitted Succesfully\");\n                            GetAllRecords();\n                            // props.next(values);\n\n                        }\n                        // GetAllRecords();\n                    })\n                    .catch((error) => console.log(\"error\", error));\n            } else {\n                setshowError(true)\n\n            }\n\n        } else {\n            console.log(\"morethan 5\")\n            setshowError(true)\n        }\n        // for(var i=0; i<SurveyAnswers.length;i++){\n        //     console.log(SurveyAnswers[i].question_id==questionId && SurveyAnswers[i].option_id==optionID && SurveyAnswers[i].created_by==uid && SurveyAnswers[i].answer==\"true\");\n        // }\n\n\n\n        // var myHeaders = new Headers();\n        // myHeaders.append(\"Content-Type\", \"application/json\");\n        // // inputList.map((item,key)=>{\n        // var raw = JSON.stringify({\n        //     survey_id: 0,\n        //     survey_user_mapping_id: 0,\n        //     surveyor_id: uid.userId,\n        //     question_id: questionId,\n        //     option_id: optionID,\n        //     answer: val1,\n        //     created_by: uid,\n        //     updated_by: uid,\n        // });\n        // var requestOptions = {\n        //     method: \"POST\",\n        //     headers: myHeaders,\n        //     body: raw,\n        //     redirect: \"follow\",\n        // };\n        // fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\n        //     .then((response) => response.json())\n        //     .then((resData) => {\n        //         console.log(resData);\n        //         if (resData.status == 200) {\n        //             console.log(\"Values Submitted Succesfully\");\n        //         }\n        //         GetAllRecords();\n        //     })\n        //     .catch((error) => console.log(\"error\", error));\n\n\n        // props.next(values);\n\n\n    }\n\n\n    const [question, setquestion] = useState(\"\")\n    const [questionId, setquestionId] = useState(\"\")\n    const [first_name, setfirst_name] = useState(\"\")\n    const [last_name, setlast_name] = useState(\"\")\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\n\n    let uid = 1;\n\n\n\n\n\n    const GetAllRecords = async () => {\n        setshowError(false)\n\n        // console.log(props.data.que1)\n        var myHeaders = new Headers();\n        var requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n        const response = await fetch(`http://208.109.14.182:9000/masters/users/${uid}`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                // setlistRecord(result.data);\n                console.log(\"11111\")\n                console.log(result.data[0].first_name)\n                setfirst_name(result.data[0].first_name)\n                setlast_name(result.data[0].last_name)\n            })\n            .catch(error => console.log('error', error));\n\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\n            .then(response2 => response2.json())\n            .then(result => {\n                // setlistRecord(result.data);\n                console.log(result)\n                // if(result.length>0){\n                let qID = result.data[4].id;\n                setquestionId(qID);\n                console.log(result.data[4].id)\n                console.log(result.data[4].id)\n                setquestion(result.data[4].question);\n                getOptions(result.data[4].id);\n                // }\n\n            })\n\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\n            .then(surveyResult => {\n                console.log(surveyResult.data)\n                setSurveyAnswers(surveyResult.data);\n\n            })\n    }\n\n    const getOptions = (resIdC) => {\n        console.log(\"checkIDsss\", resIdC, questionId)\n        var myHeaders = new Headers();\n        var requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\n            .then(response3 => response3.json())\n            .then(rwsOpt => {\n                // setlistRecord(rwsOpt.data);\n                // setOptionData(rwsOpt.data);\n\n                console.log(questionId, \"jj\")\n\n                console.log(rwsOpt.data)\n                console.log(rwsOpt.data.length, \"d\")\n                let halfwayPoint = rwsOpt.data.length / 3;\n                console.log(halfwayPoint);\n                let columnA = rwsOpt.data.splice(0, halfwayPoint)\n                let columnB = rwsOpt.data.splice(0, halfwayPoint)\n                let columnC = rwsOpt.data.splice(0)\n                setOptionDataCol1(columnA);\n                setOptionDataCol2(columnB);\n                setOptionDataCol3(columnC);\n\n                console.log(columnA);\n                console.log(columnB);\n                console.log(columnC);\n\n            })\n    }\n\n\n    useEffect(() => {\n\n\n        GetAllRecords()\n\n    }, []);\n    // console.log(columnA, columnB);\n\n    const SelectedOption = () => {\n        alert(\"ggg\")\n    }\n    return (\n        <fieldset>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h2 className=\"steps\">50%</h2>\n                </div>\n            </div>\n            <div className=\"form-card\">\n                <div className=\"row\">\n                    {/* <Checkbox onChange={inputChange}\n                    /> */}\n                    <p className='fs-title-m'>{question.replace(\"[FIRST NAME ] \", first_name + \" \")}</p>\n                    <hr />\n                    <br />\n                    <br />\n                    {showError == true ? (<span className=\"text-center bold text-danger\">Please select only 5 options</span>) : null}\n\n                    <div className=\"col-12\" >\n\n                        <table width=\"100%\" border={0} cellPadding={0} cellSpacing={0}>\n                            <tbody>\n\n                                <tr>\n                                    <td>\n                                        <table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\n                                            <tbody>\n\n                                                {OptionDataCol1.map((item, key) => {\n                                                    var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid)\n                                                    console.log(optionVal)\n                                                    return (\n                                                        <tr name={item.id} value=\"ee\"  >\n                                                            <td>\n                                                                <div className=\"container\" >\n                                                                    <div >\n                                                                        <label>\n                                                                            <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\n                                                                                id={item.id}\n                                                                                checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\n                                                                            />\n                                                                            <span> {item.option}</span>\n                                                                        </label>\n                                                                    </div>\n                                                                </div>\n\n\n\n\n                                                            </td>\n                                                            {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\n                                                        </tr>\n                                                    )\n                                                })}\n\n                                            </tbody>\n                                        </table>\n                                    </td>\n\n                                    <td>\n                                        <table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\n                                            <tbody>\n\n                                                {OptionDataCol2.map((item, key) => {\n                                                    var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid)\n                                                    console.log(optionVal)\n                                                    return (\n                                                        <tr name={item.id} value=\"ee\"  >\n                                                            <td>\n                                                                <div className=\"container\" >\n                                                                    <div >\n                                                                        <label>\n                                                                            <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\n                                                                                id={item.id}\n                                                                                checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\n                                                                            />\n                                                                            <span> {item.option}</span>\n                                                                        </label>\n                                                                    </div>\n                                                                </div>\n\n\n                                                            </td>\n                                                            {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\n                                                        </tr>\n                                                    )\n                                                })}\n\n                                            </tbody>\n                                        </table>\n                                    </td>\n\n\n                                    <td valign=\"top\">\n                                        <table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\n                                            <tbody>\n\n                                                {OptionDataCol3.map((item, key) => {\n                                                    var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid)\n                                                    console.log(optionVal)\n                                                    return (\n                                                        <tr name={item.id} value=\"ee\"  >\n                                                            <td>\n                                                                <div className=\"container\" >\n                                                                    <div >\n                                                                        <label>\n                                                                            <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\n                                                                                id={item.id}\n                                                                                checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\n                                                                            />\n                                                                            <span> {item.option}</span>\n                                                                        </label>\n                                                                    </div>\n                                                                </div>\n\n\n                                                            </td>\n                                                            {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\n                                                        </tr>\n                                                    )\n                                                })}\n\n                                            </tbody>\n                                        </table>\n                                    </td>\n\n                                </tr>\n                            </tbody></table>\n\n                        {/* {OptionDataCol1.map((item, key) => {\n                            return (\n                                <div class=\"col-sm-4 p-3\" onSelect={SelectedOption}>\n                                    {item.option}\n                                </div>\n                                \n                            )\n                        })} */}\n\n                    </div>\n                    {/* <div className=\"col-sm-4\" >\n\n                        {OptionDataCol2.map((item, key) => {\n                            return (\n                                <div class=\"col-sm-4 p-3\">\n                                    {item.option}\n                                </div>\n                            )\n                        })}\n\n                    </div>\n\n                    <div className=\"col-sm-4\" >\n\n                        {OptionDataCol3.map((item, key) => {\n                            return (\n                                <div class=\"col-sm-4 p-3\">\n                                    {item.option}\n                                </div>\n                            )\n                        })}\n\n                    </div> */}\n\n                </div>\n\n            </div>\n\n\n\n            <div className=\"col-lg-12\">\n                <div className=\"button btn-align-step2\">\n                    <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\n                    <input type=\"button\" onClick={() => props.next()} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\n                </div>\n            </div>\n        </fieldset>\n\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/Welcome.18186ea6.png\";","\r\nimport React from 'react'\r\nimport welcome from \"../../assets/images/Welcome.png\"\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport { useJwt } from \"react-jwt\";\r\nimport { useLayoutEffect } from 'react';\r\nimport { useState } from 'react';\r\nfunction WelcomeScreen(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const [validToken, setvalidToken] = useState(false);\r\n    const [ManagerId, setManagerId] = useState();\r\n\r\n    const history = useHistory();\r\n    const { token_ele } = useParams();\r\n\r\n    // const { decodedToken, isExpired } = useJwt(token_ele);\r\n\r\n\r\n\r\n    function chekAuthUser() {\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        // inputList.map((item,key)=>{\r\n        var raw = JSON.stringify({\r\n            token_ele: token_ele,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/check_survey_key`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                if (resData.status == 200) {\r\n                    var myHeadersCf = new Headers();\r\n                    var requestOptions = {\r\n                        method: 'GET',\r\n                        headers: myHeadersCf,\r\n                        redirect: 'follow'\r\n                    };\r\n\r\n                    fetch(`http://208.109.14.182:9000/masters/collect_feedback/${resData.data.id}`, requestOptions)\r\n                        .then(response => response.json())\r\n                        .then(result => {\r\n                            // setlistRecord(result.data);\r\n                            // setManagerId(result.data[0].manager_id)\r\n                            // console.log(result.data)\r\n\r\n                            if (result.status == 200) {\r\n                                let current_date = new Date().toISOString().split('T')[0]\r\n                                let endDate = result.data[0].period_end;\r\n                                if (current_date > endDate) {\r\n                                    console.log(\"false\")\r\n                                    history.push('/unauthorized_tkn')\r\n                                    return false\r\n                                }\r\n\r\n                                var survey_user = {\r\n                                    token: token_ele,\r\n                                    userId: parseInt(resData.data.id),\r\n                                    employeeId: parseInt(result.data[0].employee_id),\r\n                                    managerId: parseInt(result.data[0].manager_id),\r\n                                    companyId: parseInt(result.data[0].company_id),\r\n                                };\r\n                            }\r\n\r\n\r\n                            console.log(resData);\r\n                            setvalidToken(true)\r\n                            localStorage.setItem(\"survey_token\", JSON.stringify(survey_user))\r\n\r\n                        })\r\n\r\n                        .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n\r\n                    // console.log(resData);\r\n                    // setvalidToken(true)\r\n                    // localStorage.setItem(\"survey_token\", JSON.stringify(survey_user))\r\n                    // GetAllRecords();\r\n                    // props.next(values);\r\n\r\n                } else {\r\n                    setvalidToken(false)\r\n\r\n                    // history.push(\"/Error404\")\r\n                }\r\n                // GetAllRecords();\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(token_ele)\r\n        chekAuthUser()\r\n    }, [])\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"useEffect\")\r\n    //     console.log(isExpired)\r\n\r\n    // }, [])\r\n\r\n    return (\r\n\r\n        <section className=\"about-area about-back-bg pt-120 pb-85 mb0\">\r\n            <div className=\"container fullwidthcont\">\r\n                {/* {console.log(validToken)} */}\r\n                {validToken ? (\r\n                    <div className=\"row clearfix screen-height\">\r\n                        <div className=\"col-lg-6 col-sm-6 img-position-container\">\r\n                            <div className=\"abt-img-bak3\"></div>\r\n                            <br />\r\n                            <br />\r\n                            <img src={welcome} className=\"img-home\" alt=\"welcome\" />\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-sm-6 text-home\">\r\n                            <h5>Welcome!</h5>\r\n                            <div className=\"line\" />\r\n                            <p>\r\n                                We all need feedback. It’s what makes us all better. At Amplioso (amplio = Latin for improvement), we’re passionate about 360-degree feedback and take it seriously. We don’t take you through an unnecessary barrage of questions. We know what matters.\r\n                            </p>\r\n                            <br />\r\n                            <br />\r\n                            <div className=\"button btn-align\">\r\n                                <a className=\"btn-next\" onClick={() => history.push('/instruction')}><span className=\"txt\">Next <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" /></span></a>                              </div>\r\n                        </div>\r\n\r\n\r\n                    </div>) : null}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default WelcomeScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function Step1(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\");\r\n    const [question, setquestion] = useState(\"\");\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n    const [loading, setloading] = useState(0);\r\n\r\n\r\n    const [OptData, setOptData] = useState(\"\")\r\n    const [OptionVal, setOptionVal] = useState(\"\")\r\n    const [impVal, setimpVal] = useState(0)\r\n\r\n    const [questionId, setquestionId] = useState(\"\")\r\n\r\n    const [data, setData] = useState({\r\n        // inputVal: 0,\r\n        last_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        que1: \"\",\r\n    });\r\n\r\n    // let uid = 1;\r\n    const [value, setValue] = useState(0);\r\n    const handleChange = (e) => {\r\n        setimpVal(e.target.value);\r\n    }\r\n\r\n\r\n    const handleSubmit = (values) => {\r\n        console.log(impVal)\r\n        if (impVal == 0) {\r\n            return false\r\n        }\r\n        console.log(questionId);\r\n        if (OptData) {\r\n            console.warn(\"update\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: 190,\r\n                answer: impVal,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/${OptData}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n        } else {\r\n            console.warn(\"post\")\r\n            // props.next(values);\r\n\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: 190,\r\n                answer: impVal,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n        }\r\n\r\n    };\r\n    const stepOneValidationSchema = Yup.object({\r\n        // first_name: Yup.number().required().label(\"First name\").min(1, \"Please select a value\")\r\n        // last_name: Yup.string().required().label(\"Last name\")\r\n    });\r\n\r\n    const GetAllRecords = () => {\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        console.log(uid.userId)\r\n\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            }).then(() => {\r\n                fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        // setlistRecord(result.data);\r\n                        console.log(result.data[0], \"hh\")\r\n\r\n                        let qID = result.data[0].id;\r\n                        setquestionId(qID);\r\n                        console.log(result.data[0].id)\r\n                        console.log(result.data[0].id)\r\n                        setquestion(result.data[0].question);\r\n                        getOptions(result.data[0].id);\r\n                    })\r\n\r\n                    .catch(error => console.log('error', error));\r\n            }).then(() => setloading(0))\r\n\r\n\r\n    }\r\n\r\n\r\n    const getOptions = (resIdC) => {\r\n        // console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw1 = JSON.stringify({\r\n            surveyor_id: uid.userId,\r\n            question_id: resIdC,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw1,\r\n            redirect: \"follow\",\r\n        };\r\n\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/survey_answers_same`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n\r\n                // console.log(questionId, \"jj\")\r\n                if (rwsOpt.data) {\r\n                    console.log(rwsOpt.data.id)\r\n                    console.log(rwsOpt.data.answer)\r\n\r\n                    setOptData(rwsOpt.data.id);\r\n                    setOptionVal(rwsOpt.data.answer)\r\n                    setimpVal(rwsOpt.data.answer)\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords()\r\n    }, []);\r\n\r\n    if (loading === 1) {\r\n        return <div className=\"loader\"> <CircularProgress /></div>\r\n    }\r\n\r\n    return (\r\n        // <fieldset>\r\n        <div>\r\n            <Formik\r\n                validationSchema={stepOneValidationSchema}\r\n                initialValues={props.data}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {(formik) => {\r\n                    const {\r\n                        values,\r\n                        // handleChange,\r\n                        handleSubmit,\r\n                        errors,\r\n                        touched,\r\n                        handleBlur,\r\n                        isValid,\r\n                        dirty\r\n                    } = formik;\r\n                    return (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <h2 className=\"steps\">10%</h2>\r\n                                    <h3 className=\"smtxt\">1 = Poor &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Outstanding &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-card\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                                        <p className=\"fs-title-m\">First, we’d like you to give us an overall rating (all things considered) for the performance period.</p>\r\n                                        <h2 className=\"fs-title1\">[1-10 scale] Overall, {question.replace(\"[FIRST NAME]\", first_name)}</h2>\r\n\r\n                                        <div className=\"card pad-card\">\r\n                                            <div className=\"range-slider\">\r\n                                                <input className=\"range-slider__range\" type=\"range\" value={impVal} onChange={handleChange} name=\"inputVal\" defaultValue={OptionVal} min={0} max={10} />\r\n                                                <span className=\"range-slider__value\" style={{ backgroundColor: impVal == 0 || impVal == \"\" || impVal == \"NA\" ? \"rgb(221,38,60)\" : \"\" }} >{impVal == 0 ? \"NA\" : impVal}</span> </div>\r\n                                            {/* <span className=\"range-slider__value\" style={{backgroundColor:\"rgb(221,38,60)\"}} >{impVal == 0 ? \"NA\" : impVal}</span> </div> */}\r\n\r\n                                            <div>\r\n                                                {errors.inputVal && touched.inputVal && (\r\n                                                    <span className=\"error\">{errors.inputVal}</span>\r\n                                                )}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"button btn-align-step\">\r\n                                            <button type=\"submit\" className=\"btn-next-step\">Next</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <input type=\"button\" onClick={() => props.next()} name=\"next\" className=\"next action-button\" defaultValue=\"Next\" /> */}\r\n\r\n                        </Form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n        //  </fieldset >\r\n    )\r\n}\r\n\r\n","// chrome-extension://chphlpgkkbolifaimnlloiipkdnihall/onetab.html  \r\nimport { CircularProgress } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n    const [question, setquestion] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [loading, setloading] = useState(0);\r\n\r\n\r\n    function validate() {\r\n        var valid_val = true;\r\n        OptionData.map((item, key) => {\r\n            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n            if (optionVal.length == 0) {\r\n                console.log(false)\r\n                valid_val = false\r\n            }\r\n\r\n            optionVal.map((item, key) => {\r\n                console.log(item)\r\n                if (item.answer == 0 || item.length == 0) {\r\n                    console.log(false)\r\n                    valid_val = false\r\n                }\r\n            })\r\n        })\r\n        return valid_val\r\n    }\r\n\r\n    const nextFunction = () => {\r\n        if (validate()) {\r\n            props.next()\r\n        }\r\n    }\r\n\r\n    const inputChange = (e) => {\r\n        setloading(1)\r\n        let val1 = e.target.value;\r\n        let optionId = e.target.id;\r\n        console.log(val1)\r\n        console.log(questionId)\r\n        console.log(optionId)\r\n        var alreadyVal = (SurveyAnswers.filter(({ question_id, option_id, created_by }) => question_id == questionId && option_id == optionId && created_by == uid.userId));\r\n        console.log(alreadyVal)\r\n        if (alreadyVal.length > 0) {\r\n            console.log(\"update\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n                option_id: optionId,\r\n                answer: val1,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/${alreadyVal[0].id}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        setloading(0)\r\n\r\n                    }\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n        } else {\r\n            console.log(\"post\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n                option_id: optionId,\r\n                answer: val1,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                    }\r\n                    GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n        }\r\n\r\n    }\r\n\r\n    const GetAllRecords = async () => {\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                let qID = result.data[1].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[1].id)\r\n                console.log(result.data[1].id)\r\n                setquestion(result.data[1].question);\r\n                getOptions(result.data[1].id);\r\n                getOptions1(result.data[0].id);\r\n            })\r\n\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                setOptionData(rwsOpt.data);\r\n            })\r\n    }\r\n\r\n    const getOptions1 = (resIdC) => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw1 = JSON.stringify({\r\n            surveyor_id: uid.userId,\r\n            question_id: resIdC,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw1,\r\n            redirect: \"follow\",\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/survey_answers_same`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                if (rwsOpt.data) {\r\n                    console.log(rwsOpt.data)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n  \r\n\r\n    const getFilteredValue = (optionVal) => {\r\n        return optionVal.length != 0 ? optionVal[0].answer : null\r\n    }\r\n    return (\r\n        <>\r\n            {loading === 1 ? (<div className=\"loader\"> <CircularProgress /></div>) : null}\r\n            <fieldset style={{ pointerEvents: loading === 1 ? \"none\" : \"all\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"steps\">20%</h2>\r\n                        <h3 className=\"smtxt\">1 = Poor &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Outstanding &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-card\">\r\n                    <p className='fs-title-m'>Next, {question.replace(\"[FIRST NAME]\", first_name)}</p>\r\n                    <hr />\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        {OptionData.map((item, key) => {\r\n                            // console.log(item.id)\r\n                            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n                            if (optionVal.length > 0) {\r\n                                console.log(optionVal[0].answer)\r\n                            }\r\n\r\n                            return (\r\n                                <div className=\"col-sm-6\">\r\n                                    <div className=\"card pad-card\">\r\n                                        <div className=\"range-slider\">\r\n                                            <div className=\"sub-q\" data-tip={item.option}>{item.option}</div>\r\n                                            <ReactTooltip />\r\n                                            {/* style={{pointerEvents:loading==0}} */}\r\n                                            <input className=\"range-slider__range\" type=\"range\" id={item.id} value={getFilteredValue(optionVal)} defaultValue={0} min={0} max={10} onChange={inputChange} />\r\n                                            <span className=\"range-slider__value\" style={{ backgroundColor: getFilteredValue(optionVal) == 0 || getFilteredValue(optionVal) == \"\" || getFilteredValue(optionVal) == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>{optionVal.length > 0 ? getFilteredValue(optionVal) : \"NA\"}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"button btn-align-step2\">\r\n                        <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                        <input type=\"button\" onClick={nextFunction} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { ListItem, CircularProgress } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport default function Step3(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [inputValue, setinputValue] = useState([{ inpV: \"\" }])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [loading, setloading] = useState(0)\r\n\r\n    // let uid.userId = 1;\r\n\r\n\r\n    function validate() {\r\n        var ssr = true;\r\n        OptionData.map((item, key) => {\r\n            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n            if (optionVal.length == 0) {\r\n                console.log(false)\r\n                ssr = false\r\n            }\r\n\r\n            optionVal.map((item, key) => {\r\n                if (item.answer == 0) {\r\n                    ssr = false\r\n                }\r\n            })\r\n        })\r\n        return ssr\r\n    }\r\n\r\n    const nextFunction = () => {\r\n        if (validate()) {\r\n            props.next()\r\n        }\r\n    }\r\n\r\n\r\n    const inputChange = (e) => {\r\n        setloading(1)\r\n        let val1 = e.target.value;\r\n        let optionId = e.target.id;\r\n        console.log(val1)\r\n        console.log(optionId)\r\n        setinputValue(val1);\r\n\r\n        var alreadyVal = (SurveyAnswers.filter(({ question_id, option_id, created_by }) => question_id == questionId && option_id == optionId && created_by == uid.userId));\r\n        console.log(alreadyVal);\r\n        if (alreadyVal.length > 0) {\r\n            console.log(\"update\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: optionId,\r\n                answer: val1,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/${alreadyVal[0].id}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        // props.next(values);\r\n                        setloading(0)\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n        } else {\r\n            console.log(\"post\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: optionId,\r\n                answer: val1,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        setloading(0)\r\n\r\n                    }\r\n                    GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n        }\r\n\r\n\r\n        // props.next(values);\r\n\r\n\r\n    }\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[2].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[2].id)\r\n                console.log(result.data[2].id)\r\n                setquestion(result.data[2].question);\r\n                getOptions(result.data[2].id);\r\n                // }\r\n\r\n            })\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                setOptionData(rwsOpt.data);\r\n\r\n                console.log(questionId, \"jj\")\r\n\r\n                console.log(rwsOpt.data)\r\n\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getFilteredValue = (optionVal) => {\r\n        return optionVal.length != 0 ? optionVal[0].answer : null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading === 1 ? (<div className=\"loader\"> <CircularProgress /></div>) : null}\r\n\r\n            <fieldset style={{ pointerEvents: loading === 1 ? \"none\" : \"all\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"steps\">30%</h2>\r\n                        <h3 className=\"smtxt\">1 = Completely Disagree &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Completely Agree &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-card\">\r\n                    <div className=\"row\">\r\n                        {/* <p>Next, we’d like you to tell us how you’d rate [FIRST NAME] on a few competencies that help predict their\r\n                        future potential. On a 10-point scale, give us your agreement rating on the following.</p> */}\r\n\r\n                        <p className='fs-title-m'>Next, {question.replace(\"[FIRST NAME]\", first_name)}</p>\r\n                        <hr />\r\n                        <br />\r\n                        <br />\r\n\r\n\r\n\r\n                        {OptionData.map((item, key) => {\r\n                            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n\r\n                            return (\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"card pad-card\">\r\n                                        <div className=\"range-slider\">\r\n                                            {/* <h3 className=\"sub-q\">{item.option}</h3> */}\r\n                                            <div className=\"sub-q\" data-tip={item.option}>{item.option}</div>\r\n                                            <ReactTooltip />\r\n\r\n                                            <input className=\"range-slider__range\" type=\"range\" id={item.id} value={getFilteredValue(optionVal)} onChange={inputChange} defaultValue={0} min={0} max={10} />\r\n                                            <span className=\"range-slider__value\" style={{ backgroundColor: getFilteredValue(optionVal) == 0 || getFilteredValue(optionVal) == \"\" || getFilteredValue(optionVal) == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>{optionVal.length > 0 ? getFilteredValue(optionVal) : \"NA\"}</span> </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"button btn-align-step2\">\r\n                    <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                    <input type=\"button\" onClick={nextFunction} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                </div>\r\n            </fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { CircularProgress } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\r\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\r\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\r\n    const [inputValue, setinputValue] = useState([{ inpV: \"\" }])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [loading, setloading] = useState(0)\r\n\r\n    // let uid.userId = 1;\r\n\r\n    function validate() {\r\n        var ssr = true;\r\n        OptionDataCol1.map((item, key) => {\r\n            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n            if (optionVal.length == 0) {\r\n                ssr = false\r\n            }\r\n\r\n            optionVal.map((item, key) => {\r\n                // console.log(item)\r\n                if (item.answer == 0) {\r\n                    ssr = false\r\n                }\r\n            })\r\n        })\r\n        OptionDataCol2.map((item, key) => {\r\n            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n            if (optionVal.length == 0) {\r\n                ssr = false\r\n            }\r\n            optionVal.map((item, key) => {\r\n                // console.log(item)\r\n                if (item.answer == 0) {\r\n                    ssr = false\r\n                }\r\n            })\r\n        })\r\n        OptionDataCol3.map((item, key) => {\r\n            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n            if (optionVal.length == 0) {\r\n                ssr = false\r\n            }\r\n            optionVal.map((item, key) => {\r\n                // console.log(item)\r\n                if (item.answer == 0) {\r\n                    ssr = false\r\n                }\r\n            })\r\n        })\r\n        return ssr\r\n    }\r\n\r\n    const nextFunction = () => {\r\n        console.log(validate())\r\n        var check = validate()\r\n        console.log(check)\r\n        if (check) {\r\n            props.next()\r\n        }\r\n\r\n    }\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[3].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[3].id)\r\n                console.log(result.data[3].id)\r\n                setquestion(result.data[3].question);\r\n                getOptions(result.data[3].id);\r\n                // }\r\n\r\n            })\r\n\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                setOptionData(rwsOpt.data);\r\n\r\n                console.log(questionId, \"jj\")\r\n\r\n                console.log(rwsOpt.data)\r\n                console.log(rwsOpt.data.length, \"d\")\r\n                let halfwayPoint = rwsOpt.data.length / 3;\r\n                console.log(halfwayPoint);\r\n                let columnA = rwsOpt.data.splice(0, halfwayPoint)\r\n                let columnB = rwsOpt.data.splice(0, halfwayPoint)\r\n                let columnC = rwsOpt.data.splice(0)\r\n                setOptionDataCol1(columnA);\r\n                setOptionDataCol2(columnB);\r\n                setOptionDataCol3(columnC);\r\n\r\n                console.log(columnA);\r\n                console.log(columnB);\r\n                console.log(columnC);\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n\r\n    // if (loading === 1) {\r\n    //     return <div className=\"loader\"> <CircularProgress /></div>\r\n    // }\r\n\r\n\r\n    const inputChange = (e) => {\r\n        setloading(1)\r\n\r\n        let val1 = e.target.value;\r\n        let optionId = e.target.id;\r\n        console.log(val1)\r\n        console.log(optionId)\r\n        setinputValue(val1);\r\n\r\n        console.log(SurveyAnswers)\r\n        var alreadyVal = (SurveyAnswers.filter(({ question_id, option_id, created_by }) => question_id == questionId && option_id == optionId && created_by == uid.userId));\r\n        console.log(alreadyVal)\r\n\r\n        if (alreadyVal.length > 0) {\r\n            console.log(\"update\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n                option_id: optionId,\r\n                answer: val1,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/${alreadyVal[0].id}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        setloading(0)\r\n                        // props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n        } else {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: optionId,\r\n                answer: val1,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        setloading(0)\r\n\r\n                    }\r\n                    GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n            // props.next(values);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const getFilteredValue = (optionVal) => {\r\n        return optionVal.length != 0 ? optionVal[0].answer : null\r\n    }\r\n\r\n    return (\r\n        <>\r\n                    {loading === 1 ? (<div className=\"loader\"> <CircularProgress /></div>) : null}\r\n\r\n        <fieldset style={{pointerEvents:loading===1?\"none\":\"all\"}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"steps\">40%</h2>\r\n                    <h3 className=\"smtxt\">1 = Completely Disagree &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Completely Agree &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-card\">\r\n                <p className='fs-title-m'>{question.replace(\"[FIRST NAME]\", first_name).replace(\"[FIRST NAME]\", first_name)}</p>\r\n                <hr />\r\n                <br />\r\n                <br />\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-sm-4\">\r\n\r\n                        <div className=\"card pad-card\">\r\n                            <h2 className=\"fs-title\">{first_name} THINKS</h2>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n\r\n                        <div className=\"card pad-card\">\r\n                            <h2 className=\"fs-title\">{first_name} ACTS</h2>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n\r\n                        <div className=\"card pad-card\">\r\n                            <h2 className=\"fs-title\">{first_name} Makes Me FEEL</h2>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-sm-4\" >\r\n\r\n                        {OptionDataCol1.map((item, key) => {\r\n                            var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n\r\n                            return (\r\n\r\n                                <div className=\"card pad-card\" >\r\n                                    <div className=\"range-slider\" >\r\n                                        <h3 className=\"sub-q min-height\">{item.option}</h3>\r\n                                        <input className=\"range-slider__range\" type=\"range\" id={item.id} value={getFilteredValue(optionVal)} onChange={inputChange} defaultValue={0} min={0} max={10} />\r\n                                        <span className=\"range-slider__value \" style={{ backgroundColor: getFilteredValue(optionVal) == 0 || getFilteredValue(optionVal) == \"\" || getFilteredValue(optionVal) == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>{optionVal.length > 0 ? getFilteredValue(optionVal) : \"NA\"}</span> </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-4\" >\r\n                        {OptionDataCol2.map((item, key) => {\r\n                            var optionVal1 = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n\r\n                            return (\r\n\r\n                                <div className=\"card pad-card\" >\r\n                                    <div className=\"range-slider\" >\r\n                                        <h3 className=\"sub-q min-height\">{item.option}</h3>\r\n                                        <input className=\"range-slider__range\" type=\"range\" id={item.id} value={getFilteredValue(optionVal1)} onChange={inputChange} defaultValue={0} min={0} max={10} />\r\n                                        <span className=\"range-slider__value\" style={{ backgroundColor: getFilteredValue(optionVal1) == 0 || getFilteredValue(optionVal1) == \"\" || getFilteredValue(optionVal1) == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>{optionVal1.length > 0 ? getFilteredValue(optionVal1) : \"NA\"}</span> </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-4\" >\r\n                        {OptionDataCol3.map((item, key) => {\r\n                            var optionVal2 = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n\r\n                            return (\r\n\r\n                                <div className=\"card pad-card\" >\r\n                                    <div className=\"range-slider\" >\r\n                                        <h3 className=\"sub-q min-height\">{item.option}</h3>\r\n                                        <input className=\"range-slider__range\" type=\"range\" id={item.id} value={getFilteredValue(optionVal2)} onChange={inputChange} defaultValue={0} min={0} max={10} />\r\n                                        <span className=\"range-slider__value\" style={{ backgroundColor: getFilteredValue(optionVal2) == 0 || getFilteredValue(optionVal2) == \"\" || getFilteredValue(optionVal2) == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>{optionVal2.length > 0 ? getFilteredValue(optionVal2) : \"NA\"}</span> </div>\r\n                                    {/* <span>{optionVal2.length > 0 ? optionVal2[0].answer : null}</span> */}\r\n\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n                <div className=\"button btn-align-step2\">\r\n                    <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                    <input type=\"button\" onClick={nextFunction} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { Button, Checkbox, CircularProgress } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nconst items = [\r\n    \"Collaboration\",\r\n    \"Vision and Purpose\",\r\n    \"Sense of Humor\",\r\n    \"Innovation\",\r\n    \"Authenticity\",\r\n    \"Risk Aversion\",\r\n];\r\n\r\nexport default function Step5(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\r\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\r\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [showError, setshowError] = useState(false)\r\n    const [loading, setloading] = useState(0)\r\n    const [OptionLenght, setOptionLenght] = useState()\r\n\r\n    const nextFunction = () => {\r\n        var questionIdwiseData = (SurveyAnswers.filter(({ question_id, answer, created_by }) => question_id === questionId && answer === \"true\" && created_by === uid.userId));\r\n        console.log(questionIdwiseData.length)\r\n\r\n        if (questionIdwiseData.length == 5) {\r\n            props.next()\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const inputChange = (e) => {\r\n        getSelectedOptions()\r\n\r\n        setloading(1)\r\n\r\n        console.log(questionId)\r\n        console.log(SurveyAnswers)\r\n\r\n        // console.log(e.target.id)\r\n        let answer = e.target.value;\r\n        let optionID = parseInt(e.target.id);\r\n        console.log(answer)\r\n        console.log(optionID)\r\n        // var checkAll = SurveyAnswers.filter(({ option_id, created_by }) => option_id === optionID && created_by === uid.userId)\r\n        // console.log(SurveyAnswers.filter(({question_id, option_id,answer, created_by }) => question_id === questionId && option_id === optionID && answer===\"true\" && created_by === uid.userId));\r\n        var questionIdwiseData = (SurveyAnswers.filter(({ question_id, answer, created_by }) => question_id === questionId && answer === \"true\" && created_by === uid.userId));\r\n\r\n        var alreadyVal = (SurveyAnswers.filter(({ question_id, option_id, created_by }) => question_id === questionId && option_id === optionID && created_by === uid.userId));\r\n        console.log(alreadyVal)\r\n        console.log(questionIdwiseData)\r\n\r\n        // if (OptionLenght===5) {\r\n        //     console.log(\"false fj\")\r\n        //     console.log(\"morethan 5\")\r\n        //     setshowError(true)\r\n        //     window.scrollTo(0, 0)\r\n        //     setloading(0)\r\n        //     return false\r\n        // }\r\n\r\n        if (alreadyVal.length == 0 && questionIdwiseData.length < 5) {\r\n            getSelectedOptions()\r\n            console.log(\"post\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n                option_id: optionID,\r\n                answer: answer,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        setloading(0)\r\n                        GetAllRecords();\r\n                        // props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n        } else if (alreadyVal.length > 0) {\r\n\r\n            console.log(questionIdwiseData.length <= 5);\r\n            console.log(alreadyVal[0].answer);\r\n            console.log(alreadyVal[0].answer == \"true\" && questionIdwiseData.length < 5 || alreadyVal[0].answer == \"false\" && questionIdwiseData.length != 5)\r\n            if (alreadyVal[0].answer == \"true\" && questionIdwiseData.length <= 5 || alreadyVal[0].answer == \"false\" && questionIdwiseData.length != 5) {\r\n                console.log(\"update\")\r\n\r\n                console.log(alreadyVal[0].id)\r\n                console.log(alreadyVal[0].answer == \"false\" ? true : false);\r\n\r\n                var myHeaders = new Headers();\r\n                myHeaders.append(\"Content-Type\", \"application/json\");\r\n                // inputList.map((item,key)=>{\r\n                var raw = JSON.stringify({\r\n                    survey_id: 0,\r\n                    survey_user_mapping_id: 0,\r\n                    surveyor_id: uid.userId,\r\n                    question_id: questionId,\r\n                    option_id: optionID,\r\n                    answer: alreadyVal[0].answer == \"false\" ? \"true\" : \"false\",\r\n                    created_by: uid.userId,\r\n                    updated_by: uid.userId,\r\n                });\r\n                var requestOptions = {\r\n                    method: \"PUT\",\r\n                    headers: myHeaders,\r\n                    body: raw,\r\n                    redirect: \"follow\",\r\n                };\r\n                fetch(`http://208.109.14.182:9000/masters/survey_answers/${alreadyVal[0].id}`, requestOptions)\r\n                    .then((response) => response.json())\r\n                    .then((resData) => {\r\n                        console.log(resData);\r\n                        if (resData.status == 200) {\r\n                            console.log(\"Values Submitted Succesfully\");\r\n                            setloading(0)\r\n                            GetAllRecords();\r\n                            // props.next(values);\r\n\r\n                        }\r\n                        // GetAllRecords();\r\n                    })\r\n                    .catch((error) => console.log(\"error\", error));\r\n            } else {\r\n                setshowError(true)\r\n                window.scrollTo(0, 0)\r\n                setloading(0)\r\n\r\n\r\n            }\r\n        } else {\r\n            console.log(\"morethan 5\")\r\n            setshowError(true)\r\n            window.scrollTo(0, 0)\r\n            setloading(0)\r\n\r\n\r\n        }\r\n\r\n\r\n        // props.next(values);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    // let uid.userId = 1;\r\n\r\n\r\n    const getSelectedOptions = async () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        var raw = JSON.stringify({\r\n            question_id: 27,\r\n            surveyor_id: uid.userId\r\n        })\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        }\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/survey_answers/step5-7`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(resData => {\r\n                console.log(\"0008\", resData.data)\r\n                setOptionLenght(resData.data)\r\n                if (resData.data === 5) {\r\n                    // alert(\"false\")\r\n                    console.log(\"morethan 5\")\r\n                    setshowError(true)\r\n                    window.scrollTo(0, 0)\r\n                    setloading(0)\r\n                    return false\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const GetAllRecords = async () => {\r\n        setshowError(false)\r\n\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[4].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[4].id)\r\n                console.log(result.data[4].id)\r\n                setquestion(result.data[4].question);\r\n                getOptions(result.data[4].id);\r\n                // }\r\n\r\n            })\r\n\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                // setOptionData(rwsOpt.data);\r\n\r\n                console.log(questionId, \"jj\")\r\n\r\n                console.log(rwsOpt.data)\r\n                console.log(rwsOpt.data.length, \"d\")\r\n                let halfwayPoint = rwsOpt.data.length / 3;\r\n                console.log(halfwayPoint);\r\n                let columnA = rwsOpt.data.splice(0, halfwayPoint)\r\n                let columnB = rwsOpt.data.splice(0, halfwayPoint)\r\n                let columnC = rwsOpt.data.splice(0)\r\n                setOptionDataCol1(columnA);\r\n                setOptionDataCol2(columnB);\r\n                setOptionDataCol3(columnC);\r\n\r\n                console.log(columnA);\r\n                console.log(columnB);\r\n                console.log(columnC);\r\n\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // setloading(0)\r\n        GetAllRecords()\r\n            .then(() => {\r\n                // setloading(0)\r\n                getSelectedOptions()\r\n            })\r\n\r\n    }, []);\r\n\r\n    if (loading === 1) {\r\n        return <div className=\"loader\"> <CircularProgress /></div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading === 1 ? (<div className=\"loader\" style={{ position: \"fixed\", top: \"0px\" }}> <CircularProgress /></div>) : null}\r\n\r\n            <fieldset style={{ pointerEvents: loading === 1 ? \"none\" : \"all\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"steps\">50%</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-card\">\r\n                    <div className=\"row\">\r\n                        {/* <Checkbox onChange={inputChange}\r\n                    /> */}\r\n                        <p className='fs-title-m'>{question.replace(\"[FIRST NAME ] \", first_name + \" \")}</p>\r\n                        <hr />\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"text-center bold text-danger\" >\r\n                            {showError == true ? (<span >Please select only 5 options</span>) : null}\r\n                        </div>\r\n\r\n                        <div className=\"col-12\" >\r\n\r\n                            <table width=\"100%\" border={0} cellPadding={0} cellSpacing={0}>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\r\n                                                <tbody>\r\n\r\n                                                    {OptionDataCol1.map((item, key) => {\r\n                                                        var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n                                                        console.log(optionVal)\r\n                                                        return (\r\n                                                            <tr name={item.id} value=\"ee\"  >\r\n                                                                <td>\r\n                                                                    <div className=\"container\" >\r\n                                                                        <div >\r\n                                                                            <label>\r\n                                                                                <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                                    id={item.id}\r\n                                                                                    checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\r\n                                                                                />\r\n                                                                                <span className=\"sub-q min-height\"> {item.option}</span>\r\n\r\n                                                                            </label>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n\r\n                                                                </td>\r\n                                                                {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\r\n                                                <tbody>\r\n\r\n                                                    {OptionDataCol2.map((item, key) => {\r\n                                                        var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n                                                        console.log(optionVal)\r\n                                                        return (\r\n                                                            <tr name={item.id} value=\"ee\"  >\r\n                                                                <td>\r\n                                                                    <div className=\"container\" >\r\n                                                                        <div >\r\n                                                                            <label>\r\n                                                                                <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                                    id={item.id}\r\n                                                                                    checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\r\n                                                                                />\r\n                                                                                <span className=\"sub-q min-height\"> {item.option}</span>\r\n\r\n                                                                            </label>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n\r\n                                                                </td>\r\n                                                                {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n\r\n\r\n                                        <td>\r\n                                            <table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\r\n                                                <tbody>\r\n\r\n                                                    {OptionDataCol3.map((item, key) => {\r\n                                                        var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n                                                        console.log(optionVal)\r\n                                                        return (\r\n                                                            <tr name={item.id} value=\"ee\"  >\r\n                                                                <td>\r\n                                                                    <div className=\"container\" >\r\n                                                                        <div >\r\n                                                                            <label>\r\n                                                                                <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                                    id={item.id}\r\n                                                                                    checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\r\n                                                                                />\r\n                                                                                <span className=\"sub-q min-height\"> {item.option}</span>\r\n\r\n                                                                            </label>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n\r\n                                                                </td>\r\n                                                                {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                </tbody></table>\r\n\r\n                            {/* {OptionDataCol1.map((item, key) => {\r\n                            return (\r\n                                <div class=\"col-sm-4 p-3\" onSelect={SelectedOption}>\r\n                                    {item.option}\r\n                                </div>\r\n                                \r\n                            )\r\n                        })} */}\r\n\r\n                        </div>\r\n                        {/* <div className=\"col-sm-4\" >\r\n\r\n                        {OptionDataCol2.map((item, key) => {\r\n                            return (\r\n                                <div class=\"col-sm-4 p-3\">\r\n                                    {item.option}\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-4\" >\r\n\r\n                        {OptionDataCol3.map((item, key) => {\r\n                            return (\r\n                                <div class=\"col-sm-4 p-3\">\r\n                                    {item.option}\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    </div> */}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"button btn-align-step2\">\r\n                        <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                        <input type=\"button\" onClick={nextFunction} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [inputValue, setinputValue] = useState([{ inpV: \"\" }])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n\r\n    const [OptData, setOptData] = useState(\"\")\r\n    const [OptionVal, setOptionVal] = useState(\"\")\r\n    const [impVal, setimpVal] = useState(0)\r\n    const [loading, setloading] = useState(0)\r\n\r\n    // let uid.userId = 1;\r\n    const handleChange = (e) => {\r\n        // setimpVal(e.target.value);\r\n        var value1 = e.target.value;\r\n\r\n        console.log(OptData);\r\n        if (OptData) {\r\n            console.warn(\"update\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: 191,\r\n                answer: value1,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/${OptData}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        // props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n        } else {\r\n            console.warn(\"post\")\r\n            // props.next(values);\r\n\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: 191,\r\n                answer: value1,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        // props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const inputChange = (e) => {\r\n        let val1 = e.target.value;\r\n        let updId = e.target.id;\r\n        console.log(val1)\r\n        console.log(updId)\r\n        setinputValue(val1);\r\n\r\n        // if(updId){\r\n        //     alert(updId)\r\n        // }else{\r\n        //     alert(\"erro\")\r\n\r\n        // }\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        // inputList.map((item,key)=>{\r\n        var raw = JSON.stringify({\r\n            survey_id: 0,\r\n            survey_user_mapping_id: 0,\r\n            surveyor_id: uid.userId,\r\n            question_id: 0,\r\n            option_id: updId ? updId : 0,\r\n            answer: val1,\r\n            created_by: uid.userId,\r\n            updated_by: uid.userId,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((resData) => {\r\n                console.log(resData);\r\n                if (resData.status == 200) {\r\n                    console.log(\"Values Submitted Succesfully\");\r\n                }\r\n                // GetallRecords();\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n        // props.next(values);\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords().then(()=>{\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n\r\n    if (loading === 1) {\r\n        return <div className=\"loader\"> <CircularProgress /></div>\r\n    }\r\n\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[5].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[5].id)\r\n                console.log(result.data[5].id)\r\n                setquestion(result.data[5].question);\r\n                getOptions(result.data[5].id);\r\n                // }\r\n\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        // console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw1 = JSON.stringify({\r\n            surveyor_id: uid.userId,\r\n            question_id: resIdC,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw1,\r\n            redirect: \"follow\",\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/survey_answers_same`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n\r\n                // console.log(questionId, \"jj\")\r\n                if (rwsOpt.data) {\r\n                    console.log(rwsOpt.data.id)\r\n                    setOptData(rwsOpt.data.id);\r\n                    setOptionVal(rwsOpt.data.answer)\r\n                    setimpVal(rwsOpt.data.answer)\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n    const handleSubmit = (values) => {\r\n        if (impVal == 0) {\r\n            return false\r\n        }\r\n        console.log(OptData);\r\n        if (OptData) {\r\n            console.warn(\"update\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: 191,\r\n                answer: impVal,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/${OptData}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n        } else {\r\n            console.warn(\"post\")\r\n            // props.next(values);\r\n\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: 191,\r\n                answer: impVal,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const stepOneValidationSchema = Yup.object({\r\n        // first_name: Yup.number().required().label(\"First name\").min(1, \"Please select a value\")\r\n        // last_name: Yup.string().required().label(\"Last name\")\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                validationSchema={stepOneValidationSchema}\r\n                initialValues={props.data}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {(formik) => {\r\n                    const {\r\n                        values,\r\n                        // handleChange,\r\n                        handleSubmit,\r\n                        errors,\r\n                        touched,\r\n                        handleBlur,\r\n                        isValid,\r\n                        dirty\r\n                    } = formik;\r\n                    return (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <h2 className=\"steps\">10%</h2>\r\n                                    <h3 className=\"smtxt\">1 = Poor &nbsp;&nbsp;|&nbsp;&nbsp;  10 = Outstanding &nbsp;&nbsp;|&nbsp;&nbsp; NA = Not Applicable</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-card\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        {/* <p className=\"fs-title-m\">First, we’d like you to give us an overall rating (all things considered) for the performance period.</p> */}\r\n                                        {/* <h2 className=\"fs-title\">[1-10 scale] Overall, how would you rate the (year/ quarter) [FIRST NAME] has had?</h2> */}\r\n                                        <p className=\"fs-title-m\">Now, {question.replace(\"[FIRST NAME]\", first_name)}</p>\r\n                                        <br />\r\n                                        <br />\r\n                                        <div className=\"card pad-card\">\r\n                                            <div className=\"range-slider\">\r\n                                                <input className=\"range-slider__range\" type=\"range\" value={impVal} onChange={handleChange} name=\"inputVal\" defaultValue={OptionVal} min={0} max={10} />\r\n                                                <span className=\"range-slider__value\" style={{ backgroundColor: impVal == 0 || impVal == \"\" || impVal == \"NA\" ? \"rgb(221,38,60)\" : \"\" }}>{impVal === 0 ? \"NA\" : impVal}</span> </div>\r\n                                            <div>  {errors.inputVal && touched.inputVal && (\r\n                                                <span className=\"error\">{errors.inputVal}</span>\r\n                                            )}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* <div className=\"form-card\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <p>First, we’d like you to give us an overall rating (all things considered) for the performance period.</p>\r\n                                        <h2 className=\"fs-title\">[1-10 scale] Overall, {question.replace(\"[FIRST NAME]\", first_name)}</h2>\r\n                                        <div className=\"card pad-card\">\r\n                                            <div className=\"range-slider\">\r\n                                                <input className=\"range-slider__range\" type=\"range\" value={values.inputVal} onChange={handleChange} name=\"inputVal\" defaultValue={OptionVal} min={0} max={10} />\r\n                                                <span className=\"range-slider__value\">{values.first_name === 0 ? \"NA\" : values.first_name}</span> </div>\r\n                                            <div>  {errors.first_name && touched.first_name && (\r\n                                                <span className=\"error\">{errors.first_name}</span>\r\n                                            )}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                            {/* <input type=\"button\" onClick={() => props.next()} name=\"next\" className=\"next action-button\" defaultValue=\"Next\" /> */}\r\n\r\n\r\n\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"button btn-align-step2\">\r\n                                    <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                                    <button type=\"submit\" name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" >Next</button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { Checkbox, CircularProgress } from '@material-ui/core';\r\nimport '../../../assets/css/Step7.css'\r\n\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\r\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\r\n    const [OptionDataColUnfav1, setOptionDataColUnfav1] = useState([])\r\n    const [OptionDataColUnfav2, setOptionDataColUnfav2] = useState([])\r\n\r\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [showError, setshowError] = useState(false)\r\n    const [loading, setloading] = useState(false)\r\n\r\n    // let uid.userId = 1;\r\n\r\n    const nextFunction = () => {\r\n        var questionIdwiseData = (SurveyAnswers.filter(({ question_id, answer, created_by }) => question_id === questionId && answer === \"true\" && created_by === uid.userId));\r\n        console.log(questionIdwiseData.length)\r\n\r\n        if (questionIdwiseData.length == 5) {\r\n            props.next()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const inputChange = (e) => {\r\n        getSelectedOptions()\r\n\r\n        setloading(1)\r\n        console.log(questionId)\r\n        console.log(SurveyAnswers)\r\n        // console.log(e.target.id)\r\n        let answer = e.target.value;\r\n        // let optionID = parseInt(e.target.id);\r\n        console.log(answer)\r\n        // console.log(optionID)\r\n        // var checkAll = SurveyAnswers.filter(({ option_id, created_by }) => option_id === optionID && created_by === uid.userId)\r\n        // console.log(SurveyAnswers.filter(({question_id, option_id,answer, created_by }) => question_id === questionId && option_id === optionID && answer===\"true\" && created_by === uid.userId));\r\n        var questionIdwiseData = (SurveyAnswers.filter(({ question_id, answer, created_by }) => question_id === questionId && answer === \"true\" && created_by === uid.userId));\r\n\r\n        var alreadyVal = (SurveyAnswers.filter(({ question_id, option_id, created_by }) => question_id === questionId && option_id === parseInt(e.target.id) && created_by === uid.userId));\r\n        console.log(alreadyVal)\r\n        console.log(questionIdwiseData)\r\n\r\n        if (alreadyVal.length === 5) {\r\n            getSelectedOptions()\r\n\r\n            console.log(\"morethan 5\")\r\n            setshowError(true)\r\n            window.scrollTo(0, 0)\r\n            setloading(0)\r\n            return false\r\n        } else if (alreadyVal.length === 0 && questionIdwiseData.length < 5) {\r\n            getSelectedOptions()\r\n\r\n            console.log(\"post\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: parseInt(e.target.id),\r\n                answer: answer,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        setloading(0)\r\n\r\n                        GetAllRecords();\r\n                        // props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n        } else if (alreadyVal.length > 0) {\r\n\r\n            console.log(questionIdwiseData.length <= 5);\r\n            console.log(alreadyVal[0].answer);\r\n            console.log(alreadyVal[0].answer == \"true\" && questionIdwiseData.length < 5 || alreadyVal[0].answer == \"false\" && questionIdwiseData.length != 5)\r\n            if (alreadyVal[0].answer == \"true\" && questionIdwiseData.length <= 5 || alreadyVal[0].answer == \"false\" && questionIdwiseData.length != 5) {\r\n                console.log(\"update\")\r\n\r\n                console.log(alreadyVal[0].id)\r\n                console.log(alreadyVal[0].answer == \"false\" ? true : false);\r\n\r\n                var myHeaders = new Headers();\r\n                myHeaders.append(\"Content-Type\", \"application/json\");\r\n                // inputList.map((item,key)=>{\r\n                var raw = JSON.stringify({\r\n                    survey_id: 0,\r\n                    survey_user_mapping_id: 0,\r\n                    surveyor_id: uid.userId,\r\n                    question_id: questionId,\r\n                    option_id: parseInt(e.target.id),\r\n                    answer: alreadyVal[0].answer == \"false\" ? \"true\" : \"false\",\r\n                    created_by: uid.userId,\r\n                    updated_by: uid.userId,\r\n                });\r\n                var requestOptions = {\r\n                    method: \"PUT\",\r\n                    headers: myHeaders,\r\n                    body: raw,\r\n                    redirect: \"follow\",\r\n                };\r\n                fetch(`http://208.109.14.182:9000/masters/survey_answers/${alreadyVal[0].id}`, requestOptions)\r\n                    .then((response) => response.json())\r\n                    .then((resData) => {\r\n                        console.log(resData);\r\n                        if (resData.status == 200) {\r\n                            console.log(\"Values Submitted Succesfully\");\r\n                            setloading(0)\r\n\r\n                            GetAllRecords();\r\n                            // props.next(values);\r\n\r\n                        }\r\n                        // GetAllRecords();\r\n                    })\r\n                    .catch((error) => console.log(\"error\", error));\r\n            } else {\r\n                setshowError(true);\r\n                window.scrollTo(0, 0)\r\n                setloading(0)\r\n\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"morethan 5\")\r\n            setshowError(true)\r\n            window.scrollTo(0, 0)\r\n            setloading(0)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[6].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[6].id)\r\n                console.log(result.data[6].id)\r\n                setquestion(result.data[6].question);\r\n                getOptions(result.data[6].id);\r\n                // }\r\n\r\n            })\r\n\r\n\r\n        const responseSurveyAnswer = await fetch(`http://208.109.14.182:9000/masters/survey_answers`, requestOptions)\r\n            .then(responseSurveyAnswer => responseSurveyAnswer.json())\r\n            .then(surveyResult => {\r\n                console.log(surveyResult.data)\r\n                setSurveyAnswers(surveyResult.data);\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const getSelectedOptions = async () => {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        var raw = JSON.stringify({\r\n            question_id: 27,\r\n            surveyor_id: uid.userId\r\n        })\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: \"follow\"\r\n        }\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/survey_answers/step5-7`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(resData => {\r\n                console.log(\"0008\", resData.data)\r\n                // setOptionLenght(resData.data)\r\n                if (resData.data === 5) {\r\n                    // alert(\"false\")\r\n                    console.log(\"morethan 5\")\r\n                    setshowError(true)\r\n                    window.scrollTo(0, 0)\r\n                    setloading(0)\r\n                    return false\r\n                }\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/option/opt/${resIdC}`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                // setOptionData(rwsOpt.data);\r\n\r\n                console.log(questionId, \"s\")\r\n\r\n                console.log(rwsOpt.data)\r\n                console.log(rwsOpt.data.length, \"d\")\r\n                let halfwayPoint = rwsOpt.data.length / 2;\r\n                console.log(halfwayPoint);\r\n                let columnA = rwsOpt.data.splice(0, halfwayPoint)\r\n                let columnB = rwsOpt.data.splice(0)\r\n                setOptionDataCol1(columnA);\r\n                setOptionDataCol2(columnB);\r\n\r\n                console.log(columnA);\r\n                console.log(columnB);\r\n\r\n            })\r\n\r\n        const response4 = fetch(`http://208.109.14.182:9000/masters/option/opt/unfav/${resIdC}`, requestOptions)\r\n            .then(response4 => response4.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n                // setOptionData(rwsOpt.data);\r\n\r\n                console.log(questionId, \"s\")\r\n\r\n                console.log(rwsOpt.data)\r\n                console.log(rwsOpt.data.length, \"d\")\r\n                let halfwayPoint = rwsOpt.data.length / 2;\r\n                console.log(halfwayPoint);\r\n                let columnA = rwsOpt.data.splice(0, halfwayPoint)\r\n                let columnB = rwsOpt.data.splice(0)\r\n                setOptionDataColUnfav1(columnA);\r\n                setOptionDataColUnfav2(columnB);\r\n\r\n                console.log(columnA);\r\n                console.log(columnB);\r\n\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            getSelectedOptions()\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n\r\n    if (loading !== 0) {\r\n        return <div className=\"loader\"> <CircularProgress /></div>\r\n    }\r\n\r\n\r\n    return (\r\n        <fieldset>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"steps\">70%</h2>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-card\">\r\n                <div className=\"row\">\r\n                    <p className=\"fs-title-m\">{question.replace(\"[FIRST NAME]\", first_name + \" \")}</p>\r\n\r\n                    <hr />\r\n                    <br />\r\n                    <br />\r\n                    {showError == true ? (<span className=\"text-center bold text-danger\">Please select only 5 options</span>) : null}\r\n                    <div className=\"col-12\">\r\n\r\n                        {/*<h2 class=\"fs-title\">[1-10 scale] Overall, how would you rate the (year/ quarter) [FIRST NAME] has had?</h2>*/}\r\n                        <table width=\"100%\" border={0} cellPadding={0} cellSpacing={0}>\r\n                            <tbody><tr>\r\n                                {/* <td height={40} colSpan={2} align=\"center\" valign=\"top\"><strong>Favorable</strong></td>\r\n                                <td colSpan={2} align=\"center\" valign=\"top\"><strong>Unfavorable</strong></td> */}\r\n                                <td height={40} colSpan={2} align=\"center\" valign=\"top\"><strong className=\"font-sixe\">Favorable</strong></td>\r\n                                <td colSpan={2} align=\"center\" valign=\"top\"><strong className=\"font-sixe\">Unfavorable</strong></td>\r\n\r\n                            </tr>\r\n                                <tr>\r\n                                    <td valign=\"top\"><table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\r\n                                        <tbody>\r\n                                            {OptionDataCol1.map((item, key) => {\r\n                                                var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n                                                console.log('Option value is :', optionVal);\r\n                                                return (\r\n                                                    <tr name={item.id} value=\"ee\"  >\r\n                                                        <td>\r\n                                                            <div className=\"container\" >\r\n                                                                <div >\r\n                                                                    <label>\r\n                                                                        <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                            id={item.id}\r\n                                                                            checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\r\n                                                                        />\r\n                                                                        <span className=\"sub-q min-height\"> {item.option}</span>\r\n\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                        </td>\r\n                                                        {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </tbody></table></td>\r\n                                    <td valign=\"top\"><table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\r\n                                        <tbody>\r\n                                            {OptionDataCol2.map((item, key) => {\r\n                                                var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n                                                console.log(optionVal)\r\n                                                return (\r\n                                                    <tr name={item.id} value=\"ee\"  >\r\n                                                        <td>\r\n                                                            <div className=\"container\" >\r\n                                                                <div >\r\n                                                                    <label>\r\n                                                                        <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                            id={item.id}\r\n                                                                            checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\r\n                                                                        />\r\n                                                                        <span>{item.option}</span>\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                        </td>\r\n                                                        {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n\r\n                                        </tbody></table></td>\r\n\r\n                                    <td valign=\"top\"><table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\r\n                                        <tbody>\r\n                                            {OptionDataColUnfav1.map((item, key) => {\r\n                                                var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n                                                console.log(optionVal)\r\n                                                return (\r\n                                                    <tr name={item.id} value=\"ee\"  >\r\n                                                        <td>\r\n                                                            <div className=\"container\" >\r\n                                                                <div >\r\n                                                                    <label>\r\n                                                                        <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                            id={item.id}\r\n                                                                            checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\r\n                                                                        />\r\n                                                                        <span className=\"sub-q min-height\"> {item.option}</span>\r\n\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                        </td>\r\n                                                        {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n\r\n                                        </tbody></table></td>\r\n                                    <td valign=\"top\"><table border={0} cellPadding={0} cellSpacing={0} className=\"table row-select\">\r\n                                        <tbody>\r\n                                            {OptionDataColUnfav2.map((item, key) => {\r\n                                                var optionVal = SurveyAnswers.filter(({ option_id, created_by }) => option_id === item.id && created_by === uid.userId)\r\n                                                console.log(optionVal)\r\n                                                return (\r\n                                                    <tr name={item.id} value=\"ee\"  >\r\n                                                        <td>\r\n                                                            <div className=\"container\" >\r\n                                                                <div >\r\n                                                                    <label>\r\n                                                                        <input type=\"checkbox\" onChange={inputChange} value={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer ? false : true}\r\n                                                                            id={item.id}\r\n                                                                            checked={optionVal.length > 0 && optionVal[0].question_id == questionId && optionVal[0].answer == \"true\" ? optionVal[0].answer : false}\r\n                                                                        />\r\n                                                                        <span className=\"sub-q min-height\"> {item.option}</span>\r\n\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                        </td>\r\n                                                        {/* value={optionVal.length > 0 ? optionVal[0].answer : true} */}\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n\r\n                                        </tbody></table></td>\r\n\r\n                                </tr>\r\n                            </tbody></table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"button btn-align-step2\">\r\n                <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                <input type=\"button\" onClick={nextFunction} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n            </div>             </fieldset>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport default function Step2(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n    const [question, setquestion] = useState(\"\")\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [inputValue, setinputValue] = useState([{ inpV: \"\" }])\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n\r\n    const [OptData, setOptData] = useState(\"\")\r\n    const [OptionVal, setOptionVal] = useState(\"\")\r\n    const [impVal, setimpVal] = useState(0)\r\n    const [loading, setloading] = useState(0)\r\n\r\n    // let uid.userId = 1;\r\n\r\n\r\n    const inputChange = (e) => {\r\n        let val1 = e.target.value;\r\n        let updId = e.target.id;\r\n        console.log(val1)\r\n        console.log(updId)\r\n        setimpVal(val1);\r\n\r\n        // if(updId){\r\n        //     alert(updId)\r\n        // }else{\r\n        //     alert(\"erro\")\r\n\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    const handleSubmit = (values) => {\r\n        if (impVal == \"\") {\r\n            return false\r\n        }\r\n        console.log(OptData);\r\n        if (OptData) {\r\n            console.warn(\"update\")\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: 0,\r\n                answer: impVal,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"PUT\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/${OptData}`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n        } else {\r\n            console.warn(\"post\")\r\n            // props.next(values);\r\n\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            // inputList.map((item,key)=>{\r\n            var raw = JSON.stringify({\r\n                survey_id: 0,\r\n                employee_id: uid.employeeId,\r\n                survey_user_mapping_id: 0,\r\n                surveyor_id: uid.userId,\r\n                company_id: uid.companyId,\r\n                manager_id: uid.managerId,\r\n                question_id: questionId,\r\n\r\n                option_id: 0,\r\n                answer: impVal,\r\n                created_by: uid.userId,\r\n                updated_by: uid.userId,\r\n            });\r\n            var requestOptions = {\r\n                method: \"POST\",\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: \"follow\",\r\n            };\r\n            fetch(`http://208.109.14.182:9000/masters/survey_answers/`, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((resData) => {\r\n                    console.log(resData);\r\n                    if (resData.status == 200) {\r\n                        console.log(\"Values Submitted Succesfully\");\r\n                        GetAllRecords();\r\n                        props.next(values);\r\n\r\n                    }\r\n                    // GetAllRecords();\r\n                })\r\n                .catch((error) => console.log(\"error\", error));\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setloading(1)\r\n        GetAllRecords().then(() => {\r\n            setloading(0)\r\n        })\r\n\r\n    }, []);\r\n\r\n    if (loading === 1) {\r\n        return <div className='loader'><CircularProgress /></div>\r\n    }\r\n\r\n\r\n    const GetAllRecords = async () => {\r\n        // console.log(props.data.que1)\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        const response = await fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(\"11111\")\r\n                console.log(result.data[0].first_name)\r\n                setfirst_name(result.data[0].first_name)\r\n                setlast_name(result.data[0].last_name)\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        const response2 = await fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n            .then(response2 => response2.json())\r\n            .then(result => {\r\n                // setlistRecord(result.data);\r\n                console.log(result)\r\n                // if(result.length>0){\r\n                let qID = result.data[7].id;\r\n                setquestionId(qID);\r\n                console.log(result.data[7].id)\r\n                console.log(result.data[7].id)\r\n                setquestion(result.data[7].question);\r\n                getOptions(result.data[7].id);\r\n                // }\r\n\r\n            })\r\n    }\r\n\r\n    const getOptions = (resIdC) => {\r\n        // console.log(\"checkIDsss\", resIdC, questionId)\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw1 = JSON.stringify({\r\n            surveyor_id: uid.userId,\r\n            question_id: resIdC,\r\n        });\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: raw1,\r\n            redirect: \"follow\",\r\n        };\r\n        const response3 = fetch(`http://208.109.14.182:9000/masters/survey_answers_same`, requestOptions)\r\n            .then(response3 => response3.json())\r\n            .then(rwsOpt => {\r\n                // setlistRecord(rwsOpt.data);\r\n\r\n                // console.log(questionId, \"jj\")\r\n                if (rwsOpt.data) {\r\n                    console.log(rwsOpt.data.id)\r\n                    setOptData(rwsOpt.data.id);\r\n                    setOptionVal(rwsOpt.data.answer)\r\n                    setimpVal(rwsOpt.data.answer)\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <fieldset>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"steps\">80%</h2>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-card\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <p className=\"fs-title-m\">{question.replace(\"[FIRST NAME]\", first_name + \" \")}</p>\r\n                        <hr />\r\n                        <br />\r\n                        <br />\r\n                        {/* <p>Before we let you go, is there anything else on your mind that you’d like to share specific to the performance, strengths, or improvement opportunities for [FIRST NAME]. </p> */}\r\n                        <div className=\"card pad-card\">\r\n                            <div className=\"card-header\">\r\n                                <h4 className=\"font-sixe\">Write a Comment </h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"basic-form\">\r\n                                    <div className=\"mb-3\">\r\n                                        <textarea className=\"form-control\" value={impVal} rows={4} id=\"comment\" placeholder=\"type comment here....\" onChange={inputChange} defaultValue={impVal.inpV} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n                <div className=\"button btn-align-step2\">\r\n                    <input type=\"button\" onClick={() => props.prev()} name=\"previous\" className=\"previous-step-btn\" defaultValue=\"Previous\" />\r\n                    <input type=\"button\" onClick={handleSubmit} name=\"next\" className=\"next-step-btn\" defaultValue=\"Next\" />\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/deflogo.06ecaef6.png\";","export default __webpack_public_path__ + \"static/media/star_img.0f83ddab.jpg\";","import React from 'react'\n\nexport default function GraphVerticalBars(props) {\n    console.log(props);\n    const percentage = Math.ceil(props.percentage);\n    const color = props.color;\n\n    return (\n        <>\n            <div className='graph_bar_test'>\n                <div style={{ width: \"100%\", height: percentage * 10 > 100 ? \"100%\" : `${percentage * 10}%`, backgroundColor: color }}>\n                    <div style={{ width: \"98%\", height: percentage * 10 + 5, backgroundColor: color }}>\n                        {/* <div style={{ color: \"white\", transform: \"rotate(-90deg)\", textAlign: \"start\", fontSize: \"8px\" }}>{percentage > 100 ? \"100%\" : `${percentage}%`}</div> */}\n                    </div> <div style={{ color: \"white\", transform: \"rotate(-90deg)\", textAlign: \"end\", fontSize: \"8px\",marginTop:\"-5px\" }}>{percentage > 10 ? \"10.0\" : `${percentage}.0`}</div>\n                    {/* <span>{percentage}</span> */}\n                </div>\n            </div>\n\n        </>\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Step1 from \"../steps/Step5\";\r\nimport { PDFExport, savePDF } from \"@progress/kendo-react-pdf\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Grid, GridColumn as Column } from \"@progress/kendo-react-grid\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { CircularProgressbar, buildStyles, CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport { Chart } from \"react-google-charts\";\r\nimport '../../../assets/css/pdf_design.css';\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Box, Card, Container } from '@material-ui/core';\r\n// import logo from \"../assets/images/logo-wt.png\";\r\nimport logo_icon from \"../../../assets/images/deflogo.png\";\r\nimport star_img from \"../../../assets/images/star_img.jpg\";\r\nimport Star from '@material-ui/icons/StarRate';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DonutChart from '../../../components/DonutChart';\r\nimport GraphVerticalBars from '../../../components/GraphVerticalBars';\r\n\r\nexport default function Step9(props) {\r\n    const BaseURL = process.env.REACT_APP_Base_URL_Backend;\r\n    const [DisplayDiv, setDisplayDiv] = useState(false);\r\n    const [pdfShowDes, setpdfShowDes] = useState(0);\r\n    const history = useHistory();\r\n    const [beliverName, setbeliverName] = useState(\"\");\r\n    const [SurveyVal, setSurveyVal] = useState({});\r\n\r\n    const exportPDFWithMethod = () => {\r\n        setpdfShowDes(1);\r\n        setTimeout(() => {\r\n            // alert(pdfShowDes);\r\n            if (pdfExportComponent.current) {\r\n                pdfExportComponent.current.save();\r\n\r\n                setTimeout(() => {\r\n                    setpdfShowDes(0);\r\n                }, 2000)\r\n            }\r\n        }, 2000)\r\n\r\n    };\r\n    const pdfExportComponent = React.useRef(null);\r\n\r\n\r\n\r\n    const [impVal2Devided1, set_impVal2Devided1] = useState()\r\n    const [impVal2Devided2, set_impVal2Devided2] = useState()\r\n\r\n    const [survey_count, set_survey_count] = useState()\r\n    const [managers_length, set_managers_length] = useState()\r\n    const [company_length, set_company_length] = useState()\r\n    const [inputListFinal, setInputListFinal] = useState([{ competition: \"\" }]);\r\n    const [SurveyAnswers, setSurveyAnswers] = useState([])\r\n    const [viewModal, setviewModal] = useState(false);\r\n\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const [feedbackData, setfeedbackData] = useState()\r\n\r\n    const [first_name, setfirst_name] = useState(\"\")\r\n    const [last_name, setlast_name] = useState(\"\");\r\n    const [question, setquestion] = useState([]);\r\n    const [answer0, setanswer0] = useState([])\r\n    const [answer1, setanswer1] = useState([])\r\n    const [answer2, setanswer2] = useState([])\r\n    const [answer3, setanswer3] = useState([])\r\n    const [answer4, setanswer4] = useState([])\r\n    const [answer5, setanswer5] = useState([])\r\n    const [answer6, setanswer6] = useState([])\r\n\r\n    const [options0, setoptions0] = useState([])\r\n    const [options1, setoptions1] = useState([])\r\n    const [options2, setoptions2] = useState([])\r\n    const [options3, setoptions3] = useState([])\r\n    const [options4, setoptions4] = useState([])\r\n    const [options5, setoptions5] = useState([])\r\n    const [options6, setoptions6] = useState([])\r\n    const [heights, setheights] = useState(\"10rem\")\r\n\r\n\r\n    const uid = JSON.parse(localStorage.getItem('survey_token'));\r\n\r\n\r\n    const [OptData, setOptData] = useState(\"\")\r\n    const [OptionVal, setOptionVal] = useState(\"\")\r\n    const [impVal, setimpVal] = useState(0)\r\n    const [impVal2, setimpVal2] = useState(0)\r\n    const [impVal3, setimpVal3] = useState(0)\r\n    const [impVal4, setimpVal4] = useState(0)\r\n    const [impVal5, setimpVal5] = useState(0)\r\n    const [impVal6, setimpVal6] = useState(0)\r\n    const [impVal7, setimpVal7] = useState(0)\r\n    const [impVal8, setimpVal8] = useState(0)\r\n    const [impVal9, setimpVal9] = useState(0)\r\n\r\n    const [Val, setVal] = useState(\"\")\r\n    const [Val2, setVal2] = useState(\"\")\r\n    const [Val3, setVal3] = useState(\"\")\r\n    const [Val4, setVal4] = useState(\"\")\r\n    const [Val5, setVal5] = useState(\"\")\r\n    const [Val6, setVal6] = useState(\"\")\r\n    const [Val7, setVal7] = useState(\"\")\r\n    const [Val8, setVal8] = useState(\"\")\r\n    const [Val9, setVal9] = useState(\"\")\r\n\r\n    const [ans, setans] = useState([])\r\n\r\n    const [questionId, setquestionId] = useState(\"\")\r\n    const [OptionData, setOptionData] = useState([])\r\n    const [OptionDataCol1, setOptionDataCol1] = useState([])\r\n    const [OptionDataCol2, setOptionDataCol2] = useState([])\r\n    const [OptionDataCol3, setOptionDataCol3] = useState([])\r\n    const [OptionDataCol5, setOptionDataCol5] = useState([])\r\n    const [OptionDataCol5_2, setOptionDataCol5_2] = useState([])\r\n    const [OptionDataCol5_3, setOptionDataCol5_3] = useState([])\r\n\r\n    const [ReportData, setReportData] = useState({})\r\n    const [step_1, setstep_1] = useState()\r\n    const [step_2, setstep_2] = useState()\r\n    const [step_3, setstep_3] = useState()\r\n    const [step_4, setstep_4] = useState()\r\n\r\n    const [data, setData] = useState({\r\n        // inputVal: 0,\r\n        last_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        que1: \"\",\r\n    });\r\n\r\n\r\n\r\n    const percentage = {\r\n        percentage_1: parseInt(impVal * 10) + impVal * 10 + 20 / impVal * 10,\r\n        percentage_2: parseInt(impVal * 10),\r\n        percentage_3: 70,\r\n        percentage_4: 90,\r\n    }\r\n\r\n    const percentage2 = {\r\n        percentage_1: impVal * 10,\r\n        percentage_2: parseInt(impVal * 10) + impVal * 10 + 20 / impVal * 10,\r\n        percentage_3: 50,\r\n        percentage_4: 150,\r\n    }\r\n\r\n    const val1 = \"abc\";\r\n\r\n    const data_g = [\r\n        [\"Task\", \"Hours per Day\"],\r\n        [\"Work\", parseInt(impVal * 10) + parseInt(impVal) * 10 + 20 / parseInt(impVal) * 10],\r\n        [\"Eat\", parseInt(impVal * 10)],\r\n        [\"Commute\", 6],\r\n        [\"Sleep\", 7],\r\n    ];\r\n\r\n    const options = {\r\n        // title: \"My Daily Activities\",\r\n        legend: \"none\",\r\n        // legend: \"none\",\r\n        // pieSliceText: \"label\",\r\n        title: \"Swiss Language Use (100 degree rotation)\",\r\n        // pieStartAngle: 100,\r\n        slices: {\r\n            0: { color: \"rgb(214,225,185)\" },\r\n            1: { color: \"rgb(121,159,203)\" },\r\n            2: { color: \"rgb(55,55,94)\" },\r\n            3: { color: \"rgb(236,101,94)\" },\r\n\r\n        },\r\n    };\r\n\r\n    const options_2 = {\r\n        // title: \"My Daily Activities\",\r\n        legend: \"none\",\r\n        // legend: \"none\",\r\n        // pieSliceText: \"label\",\r\n        title: \"Shubham knows it\",\r\n        // pieStartAngle: 100,\r\n        slices: {\r\n            0: { color: \"rgb(214,225,185)\" },\r\n            1: { color: \"rgb(121,159,203)\" },\r\n            2: { color: \"rgb(55,55,94)\" },\r\n            3: { color: \"rgb(236,101,94)\" },\r\n\r\n        },\r\n    };\r\n\r\n\r\n\r\n    const ManagersLength = async () => {\r\n        var myHeaders4 = new Headers();\r\n        var requestOptions4 = {\r\n            method: 'GET',\r\n            headers: myHeaders4,\r\n            redirect: 'follow'\r\n        };\r\n\r\n\r\n        fetch(`http://208.109.14.182:9000/masters/company/managers/${uid.userId}`, requestOptions4)\r\n            .then(response => response.json())\r\n            .then(result4 => {\r\n                // console.log(result4,\"res4\")\r\n\r\n                if (result4.status == 200) {\r\n                    // setlistRecord(result4.data);\r\n                    // console.log(result4 + \"hhhh\")\r\n                    // console.log(result4.data, \"hhs\")\r\n                    set_managers_length(result4.data.length)\r\n\r\n\r\n                    fetch(`http://208.109.14.182:9000/masters/company`, requestOptions4)\r\n                        .then(response => response.json())\r\n                        .then(result5 => {\r\n                            // setlistRecord(result5.data);\r\n                            if (result5.status == 200) {\r\n                                // console.log(result5.data, \"company lenght\")\r\n                                set_company_length(result5.data.length)\r\n\r\n                                // console.log(result, \"eer\")\r\n                                // console.log(result1)\r\n                                // console.log(result2)\r\n                                // console.log(result4)\r\n                                // console.log(result5)\r\n                                // exportPDFWithMethod();\r\n\r\n                            }\r\n                        })\r\n                        .catch(error => console.log('error', error));\r\n\r\n                }\r\n\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n\r\n    }\r\n\r\n    const GetAllRecords = async () => {\r\n        // var question_id = q_id;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://208.109.14.182:9000/masters/collect_feedback/${uid.userId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.status == 200) {\r\n\r\n                    // console.log(result.data)\r\n                    // let aa = JSON.parse(result.data[0])\r\n                    // console.log(result.data[0])\r\n                    setfeedbackData(result.data)\r\n\r\n                    var myHeaders2 = new Headers();\r\n                    var requestOptions2 = {\r\n                        method: 'GET',\r\n                        headers: myHeaders2,\r\n                        redirect: 'follow'\r\n                    };\r\n\r\n                    fetch(`http://208.109.14.182:9000/masters/collect_feedback/email/${result.data[0].user_email}`, requestOptions2)\r\n                        .then(response => response.json())\r\n                        .then(result1 => {\r\n                            // setlistRecord(result1.data);\r\n                            if (result1.status == 200) {\r\n                                // console.log(result1)\r\n                                // console.log(result.data[0])\r\n                                // console.log(result1.data.length, \"hh\")\r\n                                set_survey_count(result1.data.length)\r\n\r\n\r\n\r\n                                fetch(`http://208.109.14.182:9000/masters/question/q_type/3`, requestOptions)\r\n                                    .then(response => response.json())\r\n                                    .then(result2 => {\r\n                                        // setlistRecord(result2.data);\r\n                                        if (result2.status == 200) {\r\n                                            // console.log(result2.data, \"allQuestionsByType\")\r\n\r\n                                            // console.log(result2.data[0], \"hh\")\r\n                                            let qID = result2.data[0].id;\r\n                                            setquestionId(qID);\r\n                                            // console.log(result2.data[0].id)\r\n                                            // console.log(result2.data[0].id)\r\n                                            setquestion(result2.data[0].question);\r\n                                            // getOptions(result.data[0].id);\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: uid.userId,\r\n                                                question_id: result2.data[0].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.data) {\r\n                                                        // console.log(result3.data.id)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.id);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        console.log(result3)\r\n                                                        let step = 1\r\n                                                        setVal(result3)\r\n                                                        setimpVal(result3.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: uid.userId,\r\n                                                question_id: result2.data[1].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n                                                    // console.log(result3)\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.data) {\r\n                                                        let halfwayPoint = result3.data.length / 2;\r\n                                                        let Devided1 = result3.data.splice(0, halfwayPoint)\r\n                                                        let Devided2 = result3.data.splice(0, halfwayPoint)\r\n                                                        set_impVal2Devided1(Devided1)\r\n                                                        set_impVal2Devided2(Devided2)\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3_1 => {\r\n                                                    // setlistRecord(result3_1.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3_1.data) {\r\n                                                        // console.log(result3_1.data)\r\n                                                        setVal2(result3_1)\r\n                                                        setimpVal2(result3_1.data)\r\n                                                        console.log(result3_1.data)\r\n                                                        console.log(result3_1)\r\n\r\n                                                        let step = 2;\r\n                                                        let myValues = result3_1.data;\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: uid.userId,\r\n                                                question_id: result2.data[2].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.status == 200) {\r\n                                                        console.log(result3)\r\n\r\n                                                        // console.log(result3.data)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.ids);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        setimpVal3(result3.data)\r\n                                                        setVal3(result3)\r\n\r\n                                                        console.log(result3)\r\n                                                        // console.log(impVal2)\r\n                                                        // console.log(impVal2[0])\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: uid.userId,\r\n                                                question_id: result2.data[3].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.status == 200) {\r\n                                                        // console.log(result3.data)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.ids);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        setVal4(result3)\r\n                                                        setimpVal4(result3.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: uid.userId,\r\n                                                question_id: result2.data[4].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.data) {\r\n                                                        // console.log(result3.data)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.ids);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        setimpVal5(result3.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: uid.userId,\r\n                                                question_id: result2.data[6].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result4 => {\r\n                                                    // setlistRecord(result4.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result4.data) {\r\n                                                        // console.log(result4.data)\r\n                                                        // console.log(result4.data.answer)\r\n\r\n                                                        // setOptData(result4.data.ids);\r\n                                                        // setOptionVal(result4.data.answer)\r\n                                                        setimpVal7(result4.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: uid.userId,\r\n                                                question_id: result2.data[7].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_answers_same`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result5 => {\r\n                                                    // setlistRecord(result5.data);\r\n                                                    // console.log(result5.data + \"ccc\")\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result5.data) {\r\n                                                        // console.log(result5.data.answer + \"ccc\")\r\n                                                        // console.log(result5.data.answer)\r\n\r\n                                                        // setOptData(result5.data.ids);\r\n                                                        // setOptionVal(result5.data.answer)\r\n                                                        setimpVal8(result5.data.answer)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n\r\n                                            var myHeaders = new Headers();\r\n                                            myHeaders.append(\"Content-Type\", \"application/json\");\r\n                                            var raw1 = JSON.stringify({\r\n                                                surveyor_id: uid.userId,\r\n                                                question_id: result2.data[5].id,\r\n                                            });\r\n                                            var requestOptions = {\r\n                                                method: \"POST\",\r\n                                                headers: myHeaders,\r\n                                                body: raw1,\r\n                                                redirect: \"follow\",\r\n                                            };\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/survey_question_option_mapped_ans`, requestOptions)\r\n                                                .then(response3 => response3.json())\r\n                                                .then(result3 => {\r\n                                                    // setlistRecord(result3.data);\r\n\r\n                                                    // console.log(questionId, \"jj\")\r\n                                                    if (result3.data) {\r\n                                                        // console.log(result3.data)\r\n                                                        // console.log(result3.data.answer)\r\n\r\n                                                        // setOptData(result3.data.ids);\r\n                                                        // setOptionVal(result3.data.answer)\r\n                                                        setimpVal6(result3.data)\r\n\r\n\r\n                                                    }\r\n\r\n                                                })\r\n\r\n\r\n                                            var myHeaders4 = new Headers();\r\n                                            var requestOptions4 = {\r\n                                                method: 'GET',\r\n                                                headers: myHeaders4,\r\n                                                redirect: 'follow'\r\n                                            };\r\n\r\n                                            // console.log(result.data[0].company_id)\r\n\r\n                                            fetch(`http://208.109.14.182:9000/masters/company/managers/${result.data[0].company_id}`, requestOptions4)\r\n                                                .then(response => response.json())\r\n                                                .then(result4 => {\r\n                                                    // console.log(result4,\"res4\")\r\n\r\n                                                    if (result4.status == 200) {\r\n                                                        // setlistRecord(result4.data);\r\n                                                        // console.log(result4)\r\n                                                        // console.log(result4.data, \"hhs\")\r\n                                                        set_managers_length(result4.data.length)\r\n\r\n\r\n                                                        fetch(`http://208.109.14.182:9000/masters/company`, requestOptions4)\r\n                                                            .then(response => response.json())\r\n                                                            .then(result5 => {\r\n                                                                // setlistRecord(result5.data);\r\n                                                                if (result5.status == 200) {\r\n                                                                    // console.log(result5.data, \"company lenght\")\r\n                                                                    set_company_length(result5.data.length)\r\n\r\n                                                                    // console.log(result, \"eer\")\r\n                                                                    // console.log(result1)\r\n                                                                    // console.log(result2)\r\n                                                                    // console.log(result4)\r\n                                                                    // console.log(result5)\r\n                                                                    // exportPDFWithMethod();\r\n\r\n                                                                }\r\n                                                            })\r\n                                                            .catch(error => console.log('error', error));\r\n\r\n                                                    }\r\n\r\n                                                })\r\n                                                .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n                                        }\r\n\r\n                                    })\r\n                                    .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n\r\n                            }\r\n\r\n                        })\r\n                        .catch(error => console.log('error', error));\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        ManagersLength();\r\n\r\n        GetAllRecords().then(() => {\r\n            setTimeout(() => {\r\n                exportPDFWithMethod()\r\n            }, 2000);\r\n        })\r\n\r\n    }, []);\r\n\r\n\r\n    const checkFunction = (abc) => {\r\n        return abc + 5;\r\n    }\r\n\r\n    const surveyMean = (value) => {\r\n        // console.log(value)\r\n        // console.log(`${value} / ${survey_count} = ${value/survey_count}`)\r\n        let survey_mean = value / survey_count;\r\n        // let internal_benchmark = survey_mean * survey_count / managers_length;\r\n        // let external_benchmark = internal_benchmark * survey_count / company_length;\r\n        return survey_mean\r\n    }\r\n    // selfAssesments()\r\n    const selfAssesment = (value) => {\r\n        var selfAssesment;\r\n        if (value <= 2.5) {\r\n            selfAssesment = 10\r\n        } else if (value <= 5) {\r\n            selfAssesment = 20\r\n        } else if (value <= 7.5) {\r\n            selfAssesment = 30\r\n        } else {\r\n            selfAssesment = 40\r\n        }\r\n\r\n        return selfAssesment\r\n\r\n    }\r\n\r\n\r\n    const internalBenchmark = (value) => {\r\n        // console.log(value)\r\n        // console.log(`${value} / ${survey_count}* ${survey_count} / ${managers_length}`)\r\n        let internal_benchmark = value / survey_count * survey_count / managers_length;\r\n        return internal_benchmark\r\n    }\r\n\r\n    const externalBenchmark = (value) => {\r\n        // console.log(`${value} / ${survey_count} * ${survey_count} / ${managers_length}* ${survey_count} / ${company_length}`)\r\n        let external_benchmark = value / survey_count * survey_count / managers_length * survey_count / company_length;\r\n        return external_benchmark\r\n    }\r\n\r\n    const data_g_1 = [\r\n        [\"Task\", \"Hours per Day\"],\r\n        [\"Self Assessment\", parseInt(impVal * 10)],\r\n        [\"Survey Mean\", surveyMean(impVal * 10)],\r\n        [\"Internal Benchmark\", internalBenchmark(impVal * 10)],\r\n        [\"External Benchmark\", externalBenchmark(impVal * 10)],\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {DisplayDiv ? (\r\n                <div>\r\n                    <div className=\"feed_block_row row \"  >\r\n                        <div className='circle' style={{ position: \"absolute\", top: \"23%\", left: \"272px\" }}>\r\n                            <Star style={{ fill: \"#FFFDFD\", fontSize: \"38px\", position: \"relative\", right: \"7px\", top: \"4px\" }} />\r\n                        </div>\r\n                        <div className='page1_circle2' style={{ position: \"absolute\", top: \"73%\", left: \"272px\" }}>\r\n                            <CheckIcon style={{ fill: \"#FFFDFD\", fontWeight: \"bold\", fontSize: \"38px\", position: \"relative\", right: \"7px\", top: \"4px\" }} />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 feed_block feed_block1 text-black\">\r\n                            <img className=\"logo_icon\" src={logo_icon} alt=\"company_logo\" />\r\n                            <div>\r\n                                <p >THE QUICK, BROWN FOX JUMPS OVER A LAZY DOG. DJS<br />\r\n                                    FLOCK BY WHEN MTV AX QUIZ PROG. JUNK MTV QUIZ <br />\r\n                                    GRACED BY FOX WHELPS. BAWDS JOG, FLICK QUARTZ, VEX<br />\r\n                                    NYMPHS. WALTZ, BAD NYMPH, FOR QUICK JIGS VEX! FOX<br />\r\n                                    NYMPHS GRAB QUICK-JIVED WALTZ BRICK QUIZ WHANGS<br />\r\n                                    JUMPY VELDT FOX. BRIGHT VIXENS JUMP; DOZY FOWL</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 feed_block feed_block2\">\r\n                            <div className='row ' >\r\n                                <div className='col-lg-6 text-white' >\r\n                                    Feedback Done Right\r\n                                </div>\r\n                                <div className='col-lg-6 text-white'>\r\n                                    www.amplioso.com\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='text-white' style={{ fontSize: \"40px\", fontWeight: \"bold\", position: \"relative\", left: \"16px\", top: \"225px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }}>\r\n                                {/* <p>Feedback Report</p> */}\r\n                                <span>Feedback</span><br>\r\n                                </br><span>Report</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 feed_block feed_block3 text-black\">\r\n                            <div style={{ fontSize: \"10px\", color: \"white\", float: \"left\", padding: \"20px 20px\" }}>Company Details</div>\r\n                            <div style={{ fontSize: \"40px\", color: \"white\", fontWeight: \"bold\", position: \"relative\", left: \"16px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }}>\r\n                                <span>Conversant</span><br>\r\n                                </br><span>Technologies</span>\r\n                            </div>\r\n\r\n                            <div style={{ position: \"relative\", color: \"white\", left: \"26px\", top: \"100px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }} >\r\n                                <span style={{ fontSize: \"58px\", fontWeight: \"bold\" }}>{new Date().getFullYear()}</span><br>\r\n                                </br><span style={{ fontSize: \"10px\" }}>www.amplioso.com</span>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        {feedbackData ? (\r\n                            <>\r\n                                <div className=\"col-lg-6 feed_block feed_block4 text-black\">\r\n                                    <div style={{ fontSize: \"10px\", position: \"relative\", left: \"-85px\", padding: \"20px 20px\" }}>Employee Details</div>\r\n                                    {/* <span >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`}</span> */}\r\n                                    {/* {console.log(feedbackData)} */}\r\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"8px\" }}>\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\", textTransform: \"capitalize\" }}>{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`}</span><br />\r\n                                        <span style={{ fontSize: \"10px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{`${feedbackData[0].user_email}`}</span>\r\n                                    </div>\r\n\r\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"46px\" }}>\r\n                                        <span style={{ fontSize: \"10px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Feedback Period</span><br />\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].period_start.split('T')[0]}</span><br />\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].period_end.split('T')[0]}</span><br />\r\n                                    </div>\r\n\r\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"76px\" }}>\r\n                                        <span style={{ fontSize: \"10px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Created By</span><br />\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].ManagerId.first_name}</span><br />\r\n                                        <span style={{ fontSize: \"10px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Generated On</span><br />\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].createdAt.split('T')[0]}</span><br />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : null}        </div>\r\n                    {/* <Pdf_page1 /> */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\" style={{ padding: \"25px 0px 0px 25px\" }} >\r\n                                <div >\r\n                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                    {console.log(\"val==> \" + impVal)}\r\n\r\n                                    {impVal ? (\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"14px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div className=\"square_bar\"></div>\r\n                                            <div className='page_left_header' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <span>Overall</span><br>\r\n                                                </br><span>Performence</span>\r\n                                            </div>\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                            </div>\r\n                                            <div className='row p-5' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", border: \"0px solid black\", width: \"100%\", position: \"relative\", left: \"5%\", top: \"-40px\" }}>\r\n                                                {impVal.map((item, key) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            {[Val.[`data${key}`][0].length > 0] ? (\r\n                                                                <>\r\n                                                                    <div className='col-2'>\r\n                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                            <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                                <span style={{ fontSize: \"20px\", }}>{Math.ceil(item.answer).toFixed(1)}</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Self</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Assessment</span></div>\r\n                                                                        </div>\r\n                                                                        <div style={{ padding: parseFloat(item.answer * 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: \"rgb(211, 65, 57)\" }} >\r\n                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='col-2' style={{ margin: \"0px 18px 0px 18px\" }}>\r\n                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                            <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                                {/* {Math.ceil(Val.[`data${key}`][0].survey_mean.toFixed(1))} */}\r\n                                                                                <span style={{ fontSize: \"20px\", }}>{Math.ceil(Val.[`data${key}`][0].survey_mean).toFixed(1)}</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Survey</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Mean</span></div>\r\n                                                                        </div>\r\n\r\n                                                                        <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: \"#5e8ec4\" }} >\r\n                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='col-2' style={{ margin: \"0px 18px 0px 3px\" }}>\r\n                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                            <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                                <span style={{ fontSize: \"20px\", }}>{Math.ceil(Val.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Internal</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\r\n                                                                        </div>\r\n\r\n                                                                        <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: \"rgb(175, 199, 208)\" }} >\r\n                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='col-2'>\r\n                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                            <div style={{ position: \"relative\", top: \"300px\", right: \"-24%\" }}>\r\n                                                                                <span style={{ fontSize: \"20px\", }}>{Math.ceil(Val.[`data${key}`][0].external_bench).toFixed(1)}</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>External </span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\r\n                                                                        </div>\r\n\r\n                                                                        <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: \"rgb(226, 235, 200)\" }} >\r\n                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                                        </div>\r\n\r\n                                                                    </div>\r\n                                                                </>\r\n\r\n                                                            ) : null}\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </div>\r\n                                        </div>) : null}\r\n\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n                            </div >\r\n                        </>\r\n                    ) : null}\r\n                    {/* <Pdf_page2 /> */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            {impVal ? (\r\n                                <div className=\" row page-break feed_block_row\" >\r\n                                    <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                        <div >\r\n                                            {feedbackData ? (\r\n                                                <>\r\n                                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                                </>\r\n                                            ) : null}\r\n                                            <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                                <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                    <div style={{ borderLeft: \"6px solid #799FCB\", height: \"84px\" }}></div>\r\n                                                    <div className='page_left_header'>\r\n                                                        <span>Personal Brand </span><br>\r\n                                                        </br><span>Favorability Rating</span>\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                    <div style={{ fontSize: \"7px\", fontWeight: \"lighter\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                        <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                        </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div style={{ position: \"relative\", bottom: \"30px\", left: \"18%\" }}>\r\n                                                    <div className='shubh' style={{ margin: \"5px\" }}>\r\n\r\n                                                        <> <div style={{ width: 312, height: 312, position: \"relative\", left: \"0%\" }}>\r\n                                                            {/* <h1>{impVal}</h1> */}\r\n\r\n                                                            {impVal.map((item, key) => {\r\n                                                                return (\r\n                                                                    <>\r\n                                                                        <div>\r\n                                                                            {console.log(item.answer)}\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"60px\", color: \"white\" }}>{item.answer ? (item.answer) : null}</div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"80px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean.toFixed(1))}</div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"100px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench.toFixed(1))}</div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"120px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench.toFixed(1))}</div>\r\n                                                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                                        <CircularProgressbarWithChildren\r\n                                                                            value={Math.ceil(Val.[`data${key}`][0].survey_mean) * 10}\r\n                                                                            // text={`${percentage}%`}\r\n                                                                            // circleRatio={5}\r\n                                                                            strokeWidth={10}\r\n                                                                            styles={buildStyles({\r\n\r\n                                                                                // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                rotation: 1,\r\n\r\n                                                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                strokeLinecap: 'butt',\r\n\r\n                                                                                // Text size\r\n                                                                                textSize: '16px',\r\n\r\n                                                                                // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                pathTransitionDuration: 0.5,\r\n                                                                                pathTransition: 0.7,\r\n\r\n                                                                                // Can specify path transition in more detail, or remove it entirely\r\n                                                                                // pathTransition: 'none',\r\n\r\n                                                                                // Colors\r\n                                                                                pathColor: `rgb(236,101,94, ${Math.ceil(Val.[`data${key}`][0].survey_mean) * 10})`,\r\n\r\n                                                                                // pathColor: `rgb(236,101,94, ${item.answer * 10 / 100})`,\r\n                                                                                textColor: '#f88',\r\n                                                                                // trailColor: '#d6d6d6',\r\n                                                                                backgroundColor: '#3e98c7',\r\n                                                                            })}\r\n                                                                        >\r\n                                                                            {/* <hr style={{width:\"20%\"}} /> */}\r\n\r\n                                                                            <div style={{ width: 246, height: 246, }}>\r\n                                                                                <CircularProgressbarWithChildren\r\n                                                                                    value={Math.ceil(item.answer) * 10}\r\n                                                                                    // text={`${percentage}%`}\r\n                                                                                    // circleRatio={5}\r\n                                                                                    strokeWidth={14}\r\n                                                                                    styles={buildStyles({\r\n\r\n                                                                                        // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                        rotation: 1,\r\n\r\n                                                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                        strokeLinecap: 'butt',\r\n\r\n                                                                                        // Text size\r\n                                                                                        textSize: '16px',\r\n\r\n                                                                                        // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                        pathTransitionDuration: 0.5,\r\n                                                                                        pathTransition: 0.7,\r\n\r\n                                                                                        // Can specify path transition in more detail, or remove it entirely\r\n                                                                                        // pathTransition: 'none',\r\n\r\n                                                                                        // Colors\r\n                                                                                        pathColor: `rgb(90,90,147, ${Math.ceil(item.answer) * 10})`,\r\n                                                                                        textColor: '#f88',\r\n                                                                                        // trailColor: '#d6d6d6',\r\n                                                                                        backgroundColor: '#3e98c7',\r\n                                                                                    })}\r\n                                                                                >\r\n\r\n                                                                                    <div style={{ width: 172, height: 172 }}>\r\n                                                                                        <CircularProgressbarWithChildren\r\n                                                                                            value={Math.ceil(Val.[`data${key}`][0].internal_bench) * 10}\r\n                                                                                            // text={`${percentage}%`}\r\n                                                                                            // circleRatio={5}\r\n                                                                                            strokeWidth={18}\r\n                                                                                            styles={buildStyles({\r\n\r\n                                                                                                // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                                rotation: 1,\r\n\r\n                                                                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                                strokeLinecap: 'butt',\r\n\r\n                                                                                                // Text size\r\n                                                                                                textSize: '16px',\r\n\r\n                                                                                                // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                                pathTransitionDuration: 0.5,\r\n                                                                                                pathTransition: 0.7,\r\n\r\n                                                                                                // Can specify path transition in more detail, or remove it entirely\r\n                                                                                                // pathTransition: 'none',\r\n\r\n                                                                                                // Colors\r\n                                                                                                pathColor: `rgb(121,159,203, ${Math.ceil(Val.[`data${key}`][0].internal_bench) * 10})`,\r\n                                                                                                textColor: '#f88',\r\n                                                                                                // trailColor: '#d6d6d6',\r\n                                                                                                backgroundColor: '#3e98c7',\r\n                                                                                            })}\r\n                                                                                        >\r\n\r\n                                                                                            <div style={{ width: 123, height: 123 }}>\r\n                                                                                                <CircularProgressbarWithChildren\r\n                                                                                                    value={Math.ceil(Val.[`data${key}`][0].external_bench) * 10}\r\n                                                                                                    // text={`${percentage}%`}\r\n                                                                                                    // circleRatio={5}\r\n\r\n                                                                                                    strokeWidth={26}\r\n                                                                                                    styles={buildStyles({\r\n\r\n                                                                                                        // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                                        rotation: 1,\r\n\r\n                                                                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                                        strokeLinecap: 'butt',\r\n\r\n                                                                                                        // Text size\r\n                                                                                                        textSize: '16px',\r\n\r\n                                                                                                        // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                                        pathTransitionDuration: 0.5,\r\n                                                                                                        pathTransition: 0.7,\r\n\r\n                                                                                                        // Can specify path transition in more detail, or remove it entirely\r\n                                                                                                        // pathTransition: 'none',\r\n\r\n                                                                                                        // Colors\r\n                                                                                                        pathColor: `rgb(214,225,185, ${Math.ceil(Val.[`data${key}`][0].external_bench) * 10})`,\r\n                                                                                                        textColor: '#f88',\r\n                                                                                                        // trailColor: '#d6d6d6',\r\n                                                                                                        backgroundColor: '#3e98c7',\r\n                                                                                                    })}\r\n                                                                                                >\r\n\r\n\r\n\r\n                                                                                                </CircularProgressbarWithChildren>\r\n                                                                                            </div>\r\n\r\n\r\n                                                                                        </CircularProgressbarWithChildren>\r\n                                                                                    </div>\r\n\r\n                                                                                </CircularProgressbarWithChildren>\r\n                                                                            </div>\r\n\r\n\r\n\r\n                                                                        </CircularProgressbarWithChildren>\r\n\r\n                                                                    </>\r\n                                                                )\r\n                                                            })}\r\n                                                        </div>\r\n\r\n                                                        </>\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    {impVal.map((item, key) => {\r\n                                        return (\r\n                                            <>\r\n                                                <div className='row block_sqr p-5'>\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: \"rgb(218,37,12)\" }}>\r\n                                                            </div>\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean).toFixed(1)}</span><br>\r\n                                                                </br><span>Survey</span><br>\r\n                                                                </br><span>Mean</span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                            </div>\r\n\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>{parseFloat(item.answer).toFixed(1)}</span><br>\r\n                                                                </br><span>Self</span><br>\r\n                                                                </br><span>Assessment</span>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\r\n                                                            </div>\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench).toFixed(1)}</span><br>\r\n                                                                </br><span>Internal</span><br>\r\n                                                                </br><span>Benchmark</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\r\n                                                            </div>\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench).toFixed(1)}</span><br>\r\n                                                                </br><span>External</span><br>\r\n                                                                </br><span>Benchmark</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n\r\n                                    < hr style={{ border: \"1px solid black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"10px\" }} />\r\n                                    <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                        <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                        <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                        <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                    </div>\r\n                                </div >\r\n                            ) : null}\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {/* page ----3 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                            </>) : null}            <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Universal </span><br>\r\n                                                    </br><span>Competency Ratings</span>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"5px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"34px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"-5px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"-34px\", fontSize: \"8px\" }}>0.1</div>\r\n                                                </div>\r\n                                                {impVal2 ? (\r\n                                                    <>\r\n                                                        <div className='shubh' style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n                                                            {impVal2.map((item, key) => (\r\n                                                                <>\r\n                                                                    {[Val2.[`data${key}`][0].length > 0] ? (<>\r\n                                                                        <div style={{ marginLeft: \"10px\" }}>\r\n\r\n                                                                            {/* <h1>{console.log(key % 2 == 0)}</h1> */}\r\n\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? (\"rgb(55,55,94)\") : \"rgb(218,37,12)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 2 == 0 ? (\"rgb(86,86,151)\") : \"rgb(235,82,71)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 : 100, backgroundColor: key % 2 == 0 ? (\"rgb(140,140,210)\") : \"rgb(241,158,152)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 : 100, backgroundColor: key % 2 == 0 ? (\"rgb(155,155,246)\") : \"rgb(249,218,216)\", }}></div>\r\n\r\n                                                                            </div>\r\n                                                                            <div style={{ width: \"16px\", height: \"10rem\", float: \"left\" }}></div>\r\n\r\n                                                                        </div>\r\n                                                                    </>) : null}\r\n                                                                </>\r\n                                                            ))}\r\n                                                            <div class=\"display-table\">\r\n                                                                <div style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                                                                    {impVal2.map((item, key) => (\r\n                                                                        <div className='options2_1 '>{item.option}</div>\r\n\r\n                                                                    ))}\r\n\r\n\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n\r\n                                                    </>\r\n                                                ) : null}\r\n\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"-20px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(218,37,12)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(86,86,151)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(140,140,210)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(155,155,246)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {/* page -----4 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                            </>\r\n                                        ) : null}\r\n\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Universal</span><br>\r\n                                                    </br><span>Competency Ratings</span>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\r\n                                                </div>\r\n\r\n                                                {impVal2Devided1 && Val2 ? (\r\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n\r\n                                                        {impVal2Devided1.map((item, key) => (\r\n                                                            <>\r\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\r\n                                                                    <>\r\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(218,37,12)\" : \"rgb(55,55,94)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 2 == 0 ? \"rgb(235,82,71)\" : \"rgb(86,86,151)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(241,158,152)\" : \"rgb(140,140,210)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(249,218,216)\" : \"rgb(155,155,246)\", }}></div>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                ) : null}\r\n                                                            </>))}\r\n\r\n\r\n\r\n\r\n                                                        <div className='row graph_labels2' >\r\n                                                            {impVal2Devided1.map((item, key) => (\r\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\r\n                                                                    {item.option}\r\n                                                                    {/* {console.log(item.option)} */}\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\" style={{ visibility: \"hidden\" }}></div>\r\n                                                <div className='page_left_header'>\r\n                                                    {/* <span>Universal</span><br>\r\n                                            </br><span>Competency Ratings</span> */}\r\n                                                </div>\r\n\r\n\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    {/* <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                            </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span> */}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\r\n                                                </div>\r\n\r\n                                                {impVal2Devided2 && Val2 ? (\r\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n                                                        {impVal2Devided2.map((item, key) => (\r\n                                                            <>\r\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\r\n                                                                    <>\r\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            {/* <span>{key+5}</span> */}\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(218,37,12)\" : \"rgb(55,55,94)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 2 == 0 ? \"rgb(235,82,71)\" : \"rgb(86,86,151)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(241,158,152)\" : \"rgb(140,140,210)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(249,218,216)\" : \"rgb(155,155,246)\", }}></div>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                ) : null}\r\n                                                            </>))}\r\n\r\n\r\n                                                        <div className='row graph_labels2' >\r\n                                                            {impVal2Devided2.map((item, key) => (\r\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\r\n                                                                    {item.option}\r\n                                                                    {/* {console.log(item.option)} */}\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"90px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(218,37,12)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(86,86,151)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(140,140,210)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(155,155,246)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 5 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header' >\r\n                                                    <span className='text-future-potential'>Future Potential</span>\r\n                                                    {/* </br><span>Potential</span> */}\r\n                                                </div>\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\r\n                                                    {impVal3 && Val3 ? (\r\n                                                        <div className='row ' >\r\n                                                            {impVal3.map((item, key) => (\r\n                                                                <div className='col-lg-6 ' style={{ borderLeft: key % 2 != 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 4 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                    {[Val3.[`data${key}`][0].length > 0] ? (\r\n                                                                        <>\r\n\r\n                                                                            <div style={{ position: \"relative\", bottom: \"60px\", left: \"20px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                    {item.option}\r\n                                                                                </div>\r\n                                                                                <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].survey_mean)]} color={`rgb(236,101,94)`} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={item.answer} color={`rgb(55,55,94)`} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].internal_bench)]} color={`rgb(121,159,203)`} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].external_bench)]} color={`rgb(214,225,185)`} />\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n                                                                        </>\r\n                                                                    ) : null}\r\n                                                                </div>\r\n\r\n                                                            ))}\r\n\r\n\r\n\r\n                                                            <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\r\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: \"rgb(236,101,94)\" }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Survey Mean\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Self Assessment\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: \"rgb(121,159,203)\" }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Internal Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: \"rgb(214,225,185)\" }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            External Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    ) : null}\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 6 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div style={{ position: \"relative\", top: \"-14px\" }}>\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"24px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span className='Think-Act-Feel-Leadership-Rating'>Think-Act-Feel Leadership Rating</span>\r\n                                                    {/* </br><span style={{ position: \"relative\", top: \"-16px\" }}>Leadership Rating</span> */}\r\n                                                </div>\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"54px\" }}>\r\n\r\n                                                    <div className='row' >\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\" }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Think\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Act\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Feel\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {impVal4 && Val4 ? (\r\n                                                        <div className='row ' >\r\n                                                            {impVal4.map((item, key) => (\r\n                                                                <>\r\n\r\n\r\n\r\n                                                                    {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: key % 3 != 0 ? \"1px solid rgb(209,209,209)\" : \"\" }}>\r\n                                                                            <span style={{ fontWeight: \"lighter\", fontSize: \"10px\" }}>{item.option}</span>\r\n                                                                            <div style={{ position: \"relative\", bottom: \"0px\", left: \"-14px\" }}>\r\n\r\n                                                                                <Chart\r\n                                                                                    chartType=\"PieChart\"\r\n                                                                                    data={[\r\n                                                                                        [\"Task\", \"Hours per Day\"],\r\n                                                                                        [\"Survey Mean\", [Math.ceil(Val4.[`data${key}`][0].survey_mean)] * 10],\r\n                                                                                        [\"Self Assessment\", item.answer * 10],\r\n                                                                                        [\"Internal Benchmark\", [Math.ceil(Val4.[`data${key}`][0].internal_bench)] * 10],\r\n                                                                                        [\"External Benchmark\", [Math.ceil(Val4.[`data${key}`][0].external_bench)] * 10],\r\n                                                                                    ]}\r\n                                                                                    options={{\r\n                                                                                        // title: \"My Daily Activities\",\r\n                                                                                        legend: \"none\",\r\n                                                                                        // legend: \"none\",\r\n                                                                                        // pieSliceText: \"label\",\r\n                                                                                        // title: item.option,\r\n                                                                                        // pieStartAngle: 100,\r\n                                                                                        slices: {\r\n                                                                                            0: { color: \"rgb(214,225,185)\" },\r\n                                                                                            1: { color: \"rgb(121,159,203)\" },\r\n                                                                                            2: { color: \"rgb(55,55,94)\" },\r\n                                                                                            3: { color: \"rgb(236,101,94)\" },\r\n\r\n                                                                                        },\r\n                                                                                    }}\r\n                                                                                    height={\"80%\"}\r\n                                                                                    width={\"50%\"}\r\n\r\n                                                                                />\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    ) : null}\r\n                                                                </>\r\n\r\n                                                            ))}\r\n\r\n\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    ) : null}\r\n\r\n\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className='row' style={{ position: \"relative\", bottom: \"40px\", fontSize: \"8px\", left: \"20px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(214,225,185)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(121,159,203)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(236,101,94)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 7 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"48px\", left: \"-5px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div style={{ position: \"relative\", left: \"22px\" }}>\r\n                                                    <div className=\"square_bar\"></div>\r\n                                                    <div className='page_left_header' style={{}}>\r\n                                                        <span className='Think-Act-Feel-Leadership-Rating'>Think-Act-Feel Leadership Rating</span>\r\n\r\n                                                        {/* <span>Think-Act-Feel</span><br>\r\n                                                        </br><span>Leadership Rating</span> */}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"60px\" }}>\r\n                                                    <div className='row' >\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\" }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Think\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Act\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Feel\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {impVal4 && Val4 ? (\r\n                                                        <div className='row' style={{ boder: \"1px solid black\" }}>\r\n                                                            {impVal4.map((item, key) => (\r\n                                                                <>\r\n                                                                    {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                        <div className='col-4' style={{\r\n                                                                            boder: \"1px solid black\",\r\n                                                                            height: \"190px\",\r\n                                                                            borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n                                                                            borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n\r\n                                                                        }}>\r\n\r\n                                                                            <div className='row'>\r\n                                                                                {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                                    <>\r\n                                                                                        {console.log((parseInt(key + 1) % 3) != 0)}\r\n                                                                                        <div className='col-1'>\r\n                                                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                    {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\r\n\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            <div style={{\r\n                                                                                                padding: parseFloat(item.answer * 5),\r\n                                                                                                width: 20,\r\n                                                                                                height: 20,\r\n                                                                                                transform: `translate(-5%,50%)`,\r\n                                                                                                borderRadius: \"100%\",\r\n                                                                                                opacity: 0.8,\r\n                                                                                                position: \"relative\",\r\n                                                                                                backgroundColor: \"rgb(168,26,12)\",\r\n\r\n                                                                                            }} >\r\n                                                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\r\n                                                                                                </div>\r\n                                                                                                <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{parseFloat(item.answer).toFixed(1)}</span><br />\r\n\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className='col-1' >\r\n                                                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                    {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div style={{\r\n                                                                                                padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].survey_mean) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].survey_mean) * 5) : 50,\r\n                                                                                                width: 20,\r\n                                                                                                height: 20,\r\n                                                                                                transform: `translate(-5%,50%)`,\r\n                                                                                                borderRadius: \"100%\",\r\n                                                                                                opacity: 0.8,\r\n                                                                                                position: \"relative\",\r\n                                                                                                backgroundColor: \"rgb(55,55,94)\"\r\n                                                                                            }} >\r\n                                                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br />\r\n\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className='col-1' >\r\n                                                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                    {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div style={{\r\n                                                                                                padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) : 50,\r\n                                                                                                width: 20,\r\n                                                                                                height: 20,\r\n                                                                                                transform: `translate(-5%,50%)`,\r\n                                                                                                borderRadius: \"100%\",\r\n                                                                                                opacity: 0.8,\r\n                                                                                                position: \"relative\",\r\n                                                                                                backgroundColor: \"rgb(53,98,136)\"\r\n                                                                                            }} >\r\n                                                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\r\n\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className='col-1' >\r\n                                                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                    {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div style={{\r\n                                                                                                padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) : 50,\r\n                                                                                                width: 20,\r\n                                                                                                height: 20,\r\n                                                                                                transform: `translate(-5%,50%)`,\r\n                                                                                                borderRadius: \"100%\",\r\n                                                                                                opacity: 0.8,\r\n                                                                                                position: \"relative\",\r\n                                                                                                backgroundColor: \"rgb(170,207,221)\"\r\n                                                                                            }} >\r\n                                                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\r\n\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </>\r\n\r\n                                                                                ) : null}\r\n\r\n                                                                            </div>\r\n\r\n\r\n\r\n\r\n                                                                        </div>\r\n                                                                    ) : null}\r\n\r\n                                                                </>\r\n                                                            ))}\r\n\r\n\r\n\r\n                                                        </div>) : null}\r\n\r\n\r\n\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                <div className='row' style={{ position: \"relative\", bottom: \"10px\", fontSize: \"8px\", left: \"20px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {/* page --------8 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\" >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    {feedbackData ? (<div >\r\n                                        <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                        <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                        <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Opportunities</span><br>\r\n                                                    </br><span>Overview</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                {impVal5 ? (\r\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", maxWidth: \"60%\" }}>\r\n                                                        <div className='row'>\r\n                                                            {impVal5.map((item, key) => (\r\n                                                                <div className='col-lg-4 m-2' style={{ border: \"1px solid #F1F1F1\", lineHeight: \"22px\", width: \"100px\", textAlign: \"center\" }}>{item.option}</div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>) : null}\r\n\r\n\r\n                                            </div>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Personal</span><br>\r\n                                                    </br><span>Brand Overview</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                {/* {console.log(impVal7)} */}\r\n                                                {impVal7 ? (\r\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\" }}>\r\n                                                        <div className='row'>\r\n                                                            {impVal7.map((item, key) => (\r\n                                                                <>\r\n                                                                    <div className=\"square col-lg-2\" style={{ height: \"2px\", width: \"2px\", padding: \"2px\", backgroundColor: \"black\", margin: \"5px\" }}></div>\r\n                                                                    <div className=\"square col-lg-2\" style={{ text: \"center\", marginTop: \"2px\", padding: \"2px\", fontWeight: \"lighter\" }}>{item.option}</div>\r\n                                                                </>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Additional</span><br>\r\n                                                    </br><span>Comments</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", color: \"black\" }}>\r\n                                                    {impVal8 ? (<div>{impVal8}</div>) : null}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>) : null}\r\n\r\n                                </div>\r\n\r\n\r\n                                <hr style={{ border: \"1px  black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"30px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"8px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                </div>\r\n            ) : null}\r\n\r\n            <fieldset>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"steps\">100%</h2>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-card\" style={{ height: 'auto' }}>\r\n\r\n                    <h2 className=\"purple-text text-center\"><strong>You did it!</strong> <br />\r\n                        Wasn’t that easy?</h2>\r\n                    <br />\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-3\">\r\n                            <div className=\"success-animation\">\r\n                                <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\r\n                                    <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" />\r\n                                    <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-7 text-center\">\r\n                            <h5 className=\"purple-text text-center\">Thank you for your time. We now hope others will return the favor for you someday. Wish you much success.</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </fieldset >\r\n\r\n\r\n\r\n\r\n\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn downloadbtn waves-effect\"\r\n                onClick={exportPDFWithMethod}\r\n            >\r\n                Download PDF   <i class=\"ml-1 zmdi zmdi-cloud-download\"></i>\r\n            </button>\r\n\r\n            {pdfShowDes > 0 ? (\r\n                <PDFExport paperSize=\"A4\" ref={pdfExportComponent} fileName={`${beliverName}-${history.location.pathname}`} >\r\n                    <div className=\"feed_block_row row \"  >\r\n                        <div className='circle' style={{ position: \"absolute\", top: \"23%\", left: \"272px\" }}>\r\n                            <Star style={{ fill: \"#FFFDFD\", fontSize: \"38px\", position: \"relative\", right: \"7px\", top: \"4px\" }} />\r\n                        </div>\r\n                        <div className='page1_circle2' style={{ position: \"absolute\", top: \"73%\", left: \"272px\" }}>\r\n                            <CheckIcon style={{ fill: \"#FFFDFD\", fontWeight: \"bold\", fontSize: \"38px\", position: \"relative\", right: \"7px\", top: \"4px\" }} />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 feed_block feed_block1 text-black\">\r\n                            <img className=\"logo_icon\" src={logo_icon} alt=\"company_logo\" />\r\n                            <div>\r\n                                <p >THE QUICK, BROWN FOX JUMPS OVER A LAZY DOG. DJS<br />\r\n                                    FLOCK BY WHEN MTV AX QUIZ PROG. JUNK MTV QUIZ <br />\r\n                                    GRACED BY FOX WHELPS. BAWDS JOG, FLICK QUARTZ, VEX<br />\r\n                                    NYMPHS. WALTZ, BAD NYMPH, FOR QUICK JIGS VEX! FOX<br />\r\n                                    NYMPHS GRAB QUICK-JIVED WALTZ BRICK QUIZ WHANGS<br />\r\n                                    JUMPY VELDT FOX. BRIGHT VIXENS JUMP; DOZY FOWL</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 feed_block feed_block2\">\r\n                            <div className='row ' >\r\n                                <div className='col-lg-6 text-white' >\r\n                                    Feedback Done Right\r\n                                </div>\r\n                                <div className='col-lg-6 text-white'>\r\n                                    www.amplioso.com\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='text-white' style={{ fontSize: \"40px\", fontWeight: \"bold\", position: \"relative\", left: \"16px\", top: \"225px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }}>\r\n                                {/* <p>Feedback Report</p> */}\r\n                                <span>Feedback</span><br>\r\n                                </br><span>Report</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 feed_block feed_block3 text-black\">\r\n                            <div style={{ fontSize: \"10px\", color: \"white\", float: \"left\", padding: \"20px 20px\" }}>Company Details</div>\r\n                            <div style={{ fontSize: \"40px\", color: \"white\", fontWeight: \"bold\", position: \"relative\", left: \"16px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }}>\r\n                                <span>Conversant</span><br>\r\n                                </br><span>Technologies</span>\r\n                            </div>\r\n\r\n                            <div style={{ position: \"relative\", color: \"white\", left: \"26px\", top: \"100px\", textAlign: \"justify\", MozTextAlignLast: \"justify\", textAlignLast: \"justify\" }} >\r\n                                <span style={{ fontSize: \"58px\", fontWeight: \"bold\" }}>{new Date().getFullYear()}</span><br>\r\n                                </br><span style={{ fontSize: \"10px\" }}>www.amplioso.com</span>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        {feedbackData ? (\r\n                            <>\r\n                                <div className=\"col-lg-6 feed_block feed_block4 text-black\">\r\n                                    <div style={{ fontSize: \"10px\", position: \"relative\", left: \"-85px\", padding: \"20px 20px\" }}>Employee Details</div>\r\n                                    {/* <span >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`}</span> */}\r\n                                    {/* {console.log(feedbackData)} */}\r\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"8px\" }}>\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\", textTransform: \"capitalize\" }}>{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`}</span><br />\r\n                                        <span style={{ fontSize: \"10px\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{`${feedbackData[0].user_email}`}</span>\r\n                                    </div>\r\n\r\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"46px\" }}>\r\n                                        <span style={{ fontSize: \"10px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Feedback Period</span><br />\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].period_start.split('T')[0]}</span><br />\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].period_end.split('T')[0]}</span><br />\r\n                                    </div>\r\n\r\n                                    <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", position: \"relative\", top: \"76px\" }}>\r\n                                        <span style={{ fontSize: \"10px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Created By</span><br />\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].ManagerId.first_name}</span><br />\r\n                                        <span style={{ fontSize: \"10px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>Generated On</span><br />\r\n                                        <span style={{ fontSize: \"22px\", fontWeight: \"bold\", position: \"relative\", right: \"9px\", padding: \"20px 20px\" }}>{feedbackData[0].createdAt.split('T')[0]}</span><br />\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : null}        </div>\r\n                    {/* <Pdf_page1 /> */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\" style={{ padding: \"25px 0px 0px 25px\" }} >\r\n                                <div >\r\n                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n\r\n                                    {impVal ? (\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"14px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div className=\"square_bar\"></div>\r\n                                            <div className='page_left_header' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <span>Overall</span><br>\r\n                                                </br><span>Performence</span>\r\n                                            </div>\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                            </div>\r\n                                            <div className='row p-5' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\", border: \"0px solid black\", width: \"100%\", position: \"relative\", left: \"5%\", top: \"-40px\" }}>\r\n                                                {impVal.map((item, key) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            {[Val.[`data${key}`][0].length > 0] ? (\r\n                                                                <>\r\n                                                                    <div className='col-2'>\r\n                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                            <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                                <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Self</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Assessment</span></div>\r\n                                                                        </div>\r\n                                                                        <div style={{ padding: parseFloat(item.answer * 9.2), width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: \"rgb(211, 65, 57)\" }} >\r\n                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='col-2' style={{ margin: \"0px 18px 0px 18px\" }}>\r\n                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                            <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                                <span style={{ fontSize: \"20px\", }}>{Math.ceil(Val.[`data${key}`][0].survey_mean).toFixed(1)}</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Survey</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Mean</span></div>\r\n                                                                        </div>\r\n\r\n                                                                        <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].survey_mean) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: \"#5e8ec4\" }} >\r\n                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='col-2' style={{ margin: \"0px 18px 0px 3px\" }}>\r\n                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                            <div style={{ position: \"relative\", top: \"300px\", paddingLeft: \"4px\" }}>\r\n                                                                                <span style={{ fontSize: \"20px\", }}>{Math.ceil(Val.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Internal</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\r\n                                                                        </div>\r\n\r\n                                                                        <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].internal_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: \"rgb(175, 199, 208)\" }} >\r\n                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='col-2'>\r\n                                                                        <div style={{ fontSize: \"16px\" }}>\r\n                                                                            <div style={{ position: \"relative\", top: \"300px\", right: \"-24%\" }}>\r\n                                                                                <span style={{ fontSize: \"20px\", }}>{Math.ceil(Val.[`data${key}`][0].external_bench).toFixed(1)}</span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>External </span><br />\r\n                                                                                <span style={{ fontWeight: \"initial\", fontSize: \"10px\" }}>Benchmark</span></div>\r\n                                                                        </div>\r\n\r\n                                                                        <div style={{ padding: Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) <= 92 ? Math.ceil(Math.ceil(Val.[`data${key}`][0].external_bench) * 9.2) : 92, width: 20, height: 20, transform: `translate(-50%,-50%)`, borderRadius: \"100%\", opacity: 0.8, backgroundColor: \"rgb(226, 235, 200)\" }} >\r\n                                                                            <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"300px\" }}></div>\r\n                                                                        </div>\r\n\r\n                                                                    </div>\r\n                                                                </>\r\n\r\n                                                            ) : null}\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </div>\r\n                                        </div>) : null}\r\n\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n                            </div >\r\n                        </>\r\n                    ) : null}\r\n                    {/* <Pdf_page2 /> */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            {impVal ? (\r\n                                <div className=\" row page-break feed_block_row\" >\r\n                                    <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                        <div >\r\n                                            {feedbackData ? (\r\n                                                <>\r\n                                                    <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                    <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                    <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                                </>\r\n                                            ) : null}\r\n                                            <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                                <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                    <div style={{ borderLeft: \"6px solid #799FCB\", height: \"84px\" }}></div>\r\n                                                    <div className='page_left_header'>\r\n                                                        <span>Personal Brand </span><br>\r\n                                                        </br><span>Favorability Rating</span>\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                    <div style={{ fontSize: \"7px\", fontWeight: \"lighter\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                        <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                        </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div style={{ position: \"relative\", bottom: \"30px\", left: \"18%\" }}>\r\n                                                    <div className='shubh' style={{ margin: \"5px\" }}>\r\n\r\n                                                        <> <div style={{ width: 312, height: 312, position: \"relative\", left: \"0%\" }}>\r\n                                                            {/* <h1>{impVal}</h1> */}\r\n\r\n                                                            {impVal.map((item, key) => {\r\n                                                                return (\r\n                                                                    <>\r\n                                                                        <div>\r\n                                                                            {console.log(item.answer)}\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"60px\", color: \"white\" }}>{item.answer ? (item.answer) : null}</div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"80px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean.toFixed(1))}</div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"100px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench.toFixed(1))}</div>\r\n                                                                            <div style={{ fontSize: \"8px\", position: \"relative\", top: \"120px\", color: \"white\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench.toFixed(1))}</div>\r\n                                                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                                        <CircularProgressbarWithChildren\r\n                                                                            value={Math.ceil(Val.[`data${key}`][0].survey_mean) * 10}\r\n                                                                            // text={`${percentage}%`}\r\n                                                                            // circleRatio={5}\r\n                                                                            strokeWidth={10}\r\n                                                                            styles={buildStyles({\r\n\r\n                                                                                // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                rotation: 1,\r\n\r\n                                                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                strokeLinecap: 'butt',\r\n\r\n                                                                                // Text size\r\n                                                                                textSize: '16px',\r\n\r\n                                                                                // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                pathTransitionDuration: 0.5,\r\n                                                                                pathTransition: 0.7,\r\n\r\n                                                                                // Can specify path transition in more detail, or remove it entirely\r\n                                                                                // pathTransition: 'none',\r\n\r\n                                                                                // Colors\r\n                                                                                pathColor: `rgb(236,101,94, ${Math.ceil(Val.[`data${key}`][0].survey_mean) * 10})`,\r\n\r\n                                                                                // pathColor: `rgb(236,101,94, ${item.answer * 10 / 100})`,\r\n                                                                                textColor: '#f88',\r\n                                                                                // trailColor: '#d6d6d6',\r\n                                                                                backgroundColor: '#3e98c7',\r\n                                                                            })}\r\n                                                                        >\r\n                                                                            {/* <hr style={{width:\"20%\"}} /> */}\r\n\r\n                                                                            <div style={{ width: 246, height: 246, }}>\r\n                                                                                <CircularProgressbarWithChildren\r\n                                                                                    value={Math.ceil(item.answer) * 10}\r\n                                                                                    // text={`${percentage}%`}\r\n                                                                                    // circleRatio={5}\r\n                                                                                    strokeWidth={14}\r\n                                                                                    styles={buildStyles({\r\n\r\n                                                                                        // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                        rotation: 1,\r\n\r\n                                                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                        strokeLinecap: 'butt',\r\n\r\n                                                                                        // Text size\r\n                                                                                        textSize: '16px',\r\n\r\n                                                                                        // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                        pathTransitionDuration: 0.5,\r\n                                                                                        pathTransition: 0.7,\r\n\r\n                                                                                        // Can specify path transition in more detail, or remove it entirely\r\n                                                                                        // pathTransition: 'none',\r\n\r\n                                                                                        // Colors\r\n                                                                                        pathColor: `rgb(90,90,147, ${Math.ceil(item.answer) * 10})`,\r\n                                                                                        textColor: '#f88',\r\n                                                                                        // trailColor: '#d6d6d6',\r\n                                                                                        backgroundColor: '#3e98c7',\r\n                                                                                    })}\r\n                                                                                >\r\n\r\n                                                                                    <div style={{ width: 172, height: 172 }}>\r\n                                                                                        <CircularProgressbarWithChildren\r\n                                                                                            value={Math.ceil(Val.[`data${key}`][0].internal_bench) * 10}\r\n                                                                                            // text={`${percentage}%`}\r\n                                                                                            // circleRatio={5}\r\n                                                                                            strokeWidth={18}\r\n                                                                                            styles={buildStyles({\r\n\r\n                                                                                                // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                                rotation: 1,\r\n\r\n                                                                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                                strokeLinecap: 'butt',\r\n\r\n                                                                                                // Text size\r\n                                                                                                textSize: '16px',\r\n\r\n                                                                                                // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                                pathTransitionDuration: 0.5,\r\n                                                                                                pathTransition: 0.7,\r\n\r\n                                                                                                // Can specify path transition in more detail, or remove it entirely\r\n                                                                                                // pathTransition: 'none',\r\n\r\n                                                                                                // Colors\r\n                                                                                                pathColor: `rgb(121,159,203, ${Math.ceil(Val.[`data${key}`][0].internal_bench) * 10})`,\r\n                                                                                                textColor: '#f88',\r\n                                                                                                // trailColor: '#d6d6d6',\r\n                                                                                                backgroundColor: '#3e98c7',\r\n                                                                                            })}\r\n                                                                                        >\r\n\r\n                                                                                            <div style={{ width: 123, height: 123 }}>\r\n                                                                                                <CircularProgressbarWithChildren\r\n                                                                                                    value={Math.ceil(Val.[`data${key}`][0].external_bench) * 10}\r\n                                                                                                    // text={`${percentage}%`}\r\n                                                                                                    // circleRatio={5}\r\n\r\n                                                                                                    strokeWidth={26}\r\n                                                                                                    styles={buildStyles({\r\n\r\n                                                                                                        // Rotation of path and trail, in number of turns (0-1)\r\n                                                                                                        rotation: 1,\r\n\r\n                                                                                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                                                                        strokeLinecap: 'butt',\r\n\r\n                                                                                                        // Text size\r\n                                                                                                        textSize: '16px',\r\n\r\n                                                                                                        // How long animation takes to go from one percentage to another, in seconds\r\n                                                                                                        pathTransitionDuration: 0.5,\r\n                                                                                                        pathTransition: 0.7,\r\n\r\n                                                                                                        // Can specify path transition in more detail, or remove it entirely\r\n                                                                                                        // pathTransition: 'none',\r\n\r\n                                                                                                        // Colors\r\n                                                                                                        pathColor: `rgb(214,225,185, ${Math.ceil(Val.[`data${key}`][0].external_bench) * 10})`,\r\n                                                                                                        textColor: '#f88',\r\n                                                                                                        // trailColor: '#d6d6d6',\r\n                                                                                                        backgroundColor: '#3e98c7',\r\n                                                                                                    })}\r\n                                                                                                >\r\n\r\n\r\n\r\n                                                                                                </CircularProgressbarWithChildren>\r\n                                                                                            </div>\r\n\r\n\r\n                                                                                        </CircularProgressbarWithChildren>\r\n                                                                                    </div>\r\n\r\n                                                                                </CircularProgressbarWithChildren>\r\n                                                                            </div>\r\n\r\n\r\n\r\n                                                                        </CircularProgressbarWithChildren>\r\n\r\n                                                                    </>\r\n                                                                )\r\n                                                            })}\r\n                                                        </div>\r\n\r\n                                                        </>\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    {impVal.map((item, key) => {\r\n                                        return (\r\n                                            <>\r\n                                                <div className='row block_sqr p-5'>\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: \"rgb(218,37,12)\" }}>\r\n                                                            </div>\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>{Math.ceil(Val.[`data${key}`][0].survey_mean).toFixed(1)}</span><br>\r\n                                                                </br><span>Survey</span><br>\r\n                                                                </br><span>Mean</span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                            </div>\r\n\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>{parseFloat(item.answer).toFixed(1)}</span><br>\r\n                                                                </br><span>Self</span><br>\r\n                                                                </br><span>Assessment</span>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\r\n                                                            </div>\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>{Math.ceil(Val.[`data${key}`][0].internal_bench).toFixed(1)}</span><br>\r\n                                                                </br><span>Internal</span><br>\r\n                                                                </br><span>Benchmark</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='col-lg-3' style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                        <div className='row'>\r\n                                                            <div className='single_sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\r\n                                                            </div>\r\n                                                            <div style={{\r\n                                                                // color:\"black\",\r\n                                                                fontSize: \"9px\",\r\n                                                                position: \"relative\",\r\n                                                                // bottom:\"90px\",\r\n                                                                left: \"-14px\",\r\n                                                            }}>\r\n                                                                <span style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>{Math.ceil(Val.[`data${key}`][0].external_bench).toFixed(1)}</span><br>\r\n                                                                </br><span>External</span><br>\r\n                                                                </br><span>Benchmark</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n\r\n                                    < hr style={{ border: \"1px solid black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"10px\" }} />\r\n                                    <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                        <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                        <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                        <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                    </div>\r\n                                </div >\r\n                            ) : null}\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {/* page ----3 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                            </>) : null}            <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Universal </span><br>\r\n                                                    </br><span>Competency Ratings</span>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"5px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"34px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"-5px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"-34px\", fontSize: \"8px\" }}>0.1</div>\r\n                                                </div>\r\n                                                {impVal2 ? (\r\n                                                    <>\r\n                                                        <div className='shubh' style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n                                                            {impVal2.map((item, key) => (\r\n                                                                <>\r\n                                                                    {[Val2.[`data${key}`][0].length > 0] ? (<>\r\n                                                                        <div style={{ marginLeft: \"10px\" }}>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? (\"rgb(55,55,94)\") : \"rgb(218,37,12)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 2 == 0 ? (\"rgb(86,86,151)\") : \"rgb(235,82,71)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 : 100, backgroundColor: key % 2 == 0 ? (\"rgb(140,140,210)\") : \"rgb(241,158,152)\", }}></div>\r\n                                                                            </div>\r\n                                                                            <div className='graph_bar'>\r\n                                                                                <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 : 100, backgroundColor: key % 2 == 0 ? (\"rgb(155,155,246)\") : \"rgb(249,218,216)\", }}></div>\r\n\r\n                                                                            </div>\r\n                                                                            <div style={{ width: \"16px\", height: \"10rem\", float: \"left\" }}></div>\r\n\r\n                                                                        </div>\r\n                                                                    </>) : null}\r\n                                                                </>\r\n                                                            ))}\r\n                                                            <div class=\"display-table\">\r\n                                                                <div style={{ fontSize: \"10px\", fontWeight: \"lighter\" }}>\r\n                                                                    {impVal2.map((item, key) => (\r\n                                                                        <div className='options2_1 '>{item.option}</div>\r\n\r\n                                                                    ))}\r\n\r\n\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n\r\n                                                    </>\r\n                                                ) : null}\r\n\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"-20px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(218,37,12)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(86,86,151)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(140,140,210)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(155,155,246)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {/* page -----4 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                            </>\r\n                                        ) : null}\r\n\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Universal</span><br>\r\n                                                    </br><span>Competency Ratings</span>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                                    </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\r\n                                                </div>\r\n\r\n                                                {impVal2Devided1 && Val2 ? (\r\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n\r\n                                                        {impVal2Devided1.map((item, key) => (\r\n                                                            <>\r\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\r\n                                                                    <>\r\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(218,37,12)\" : \"rgb(55,55,94)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 2 == 0 ? \"rgb(235,82,71)\" : \"rgb(86,86,151)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].internal_bench)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(241,158,152)\" : \"rgb(140,140,210)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key}`][0].external_bench)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(249,218,216)\" : \"rgb(155,155,246)\", }}></div>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                ) : null}\r\n                                                            </>))}\r\n\r\n\r\n\r\n\r\n                                                        <div className='row graph_labels2' >\r\n                                                            {impVal2Devided1.map((item, key) => (\r\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\r\n                                                                    {item.option}\r\n                                                                    {/* {console.log(item.option)} */}\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\" style={{ visibility: \"hidden\" }}></div>\r\n                                                <div className='page_left_header'>\r\n                                                    {/* <span>Universal</span><br>\r\n                                            </br><span>Competency Ratings</span> */}\r\n                                                </div>\r\n\r\n\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"80px\", left: \"16px\", color: \"#9C9C9C\" }}>\r\n                                                    {/* <span>the quick,brown fox jumps over a lazy dog, djs flock by when mtv ax quiz prog.junk mtv quiz graced by fox whelps.bawds jog,flick quartz, </span><br>\r\n                                            </br><span>vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j</span> */}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div style={{ position: \"relative\", bottom: \"100px\" }}>\r\n                                                <div style={{ position: \"relative\", top: \"100px\", right: \"290px\", fontWeight: \"lighter\" }}>\r\n                                                    <div style={{ position: \"relative\", bottom: \"60px\", fontSize: \"8px\" }}>10.0</div>\r\n                                                    <div style={{ position: \"relative\", bottom: \"12px\", fontSize: \"8px\" }}>5.0</div>\r\n                                                    <div style={{ position: \"relative\", top: \"50px\", fontSize: \"8px\" }}>1.0</div>\r\n                                                </div>\r\n\r\n                                                {impVal2Devided2 && Val2 ? (\r\n                                                    <div style={{ margin: \"5px\", width: \"520px\", height: \"138px\", border: \"1px solid #707070\", borderTop: \"#FFFFFF\", borderRight: \"#FFFFFF\" }}>\r\n                                                        {impVal2Devided2.map((item, key) => (\r\n                                                            <>\r\n                                                                {[Val2.[`data${key}`][0].length > 0] ? (\r\n                                                                    <>\r\n                                                                        <div style={{ width: \"36px\", height: \"12rem\", float: \"left\" }}></div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            {/* <span>{key+5}</span> */}\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(218,37,12)\" : \"rgb(55,55,94)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: item.answer * 10, backgroundColor: key % 2 == 0 ? \"rgb(235,82,71)\" : \"rgb(86,86,151)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(241,158,152)\" : \"rgb(140,140,210)\", }}></div>\r\n                                                                        </div>\r\n                                                                        <div className='graph_bar_2'>\r\n                                                                            <div style={{ width: \"100%\", height: [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 <= 100 ? [Math.ceil(Val2.[`data${key + 1}`][0].survey_mean)] * 10 : 100, backgroundColor: key % 2 == 0 ? \"rgb(249,218,216)\" : \"rgb(155,155,246)\", }}></div>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                ) : null}\r\n                                                            </>))}\r\n\r\n\r\n                                                        <div className='row graph_labels2' >\r\n                                                            {impVal2Devided2.map((item, key) => (\r\n                                                                <div className='col-lg-2 text-center' style={{ width: \"76px\", marginLeft: \"8px\", fontWeight: \"lighter\" }} >\r\n                                                                    {item.option}\r\n                                                                    {/* {console.log(item.option)} */}\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                <div className='row p-5' style={{ marginLeft: \"6%\", position: \"relative\", bottom: \"90px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(218,37,12)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(86,86,151)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(140,140,210)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                            </div>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(155,155,246)\" }}>\r\n                                            </div>\r\n                                            <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"2%\", left: \"-14px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"2px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"2px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"2px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 5 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"capitalize\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header' >\r\n                                                    <span className='text-future-potential'>Future Potential</span>\r\n                                                    {/* </br><span>Potential</span> */}\r\n                                                </div>\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\" }}>\r\n                                                    {impVal3 && Val3 ? (\r\n                                                        <div className='row ' >\r\n                                                            {impVal3.map((item, key) => (\r\n                                                                <div className='col-lg-6 ' style={{ borderLeft: key % 2 != 0 ? \"1px solid rgb(209,209,209)\" : \"\", borderBlockEnd: key != 4 ? \"1px solid rgb(209,209,209)\" : \"\" }} >\r\n\r\n                                                                    {[Val3.[`data${key}`][0].length > 0] ? (\r\n                                                                        <>\r\n\r\n                                                                            <div style={{ position: \"relative\", bottom: \"60px\", left: \"20px\", paddingTop: \"40px\" }}>\r\n\r\n                                                                                <div className='grp' style={{ position: \"relative\", left: \"5px\", textAlign: \"end\", fontSize: \"12px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"184px\", height: \"10px\" }}>\r\n                                                                                    {item.option}\r\n                                                                                </div>\r\n                                                                                <div className='grp' style={{ position: \"relative\", width: \"100px\", height: \"34px\", fontSize: \"10px\", }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].survey_mean)]} color={`rgb(236,101,94)`} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={item.answer} color={`rgb(55,55,94)`} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].internal_bench)]} color={`rgb(121,159,203)`} />\r\n\r\n                                                                                </div>\r\n                                                                                <div className='grp ' style={{ position: \"relative\", width: \"100px\", height: \"34px\" }}>\r\n                                                                                    <GraphVerticalBars percentage={[Math.ceil(Val3.[`data${key}`][0].external_bench)]} color={`rgb(214,225,185)`} />\r\n\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n                                                                        </>\r\n                                                                    ) : null}\r\n                                                                </div>\r\n\r\n                                                            ))}\r\n\r\n\r\n\r\n                                                            <div className='col-lg-6 ' style={{ borderLeft: \"1px solid rgb(209,209,209)\", fontWeight: \"lighter\" }} >\r\n                                                                <div style={{ position: \"relative\", bottom: \"5px\", left: \"50px\", paddingTop: \"40px\" }}>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: \"rgb(236,101,94)\" }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Survey Mean\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Self Assessment\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: \"rgb(121,159,203)\" }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            Internal Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className='row m-2' >\r\n                                                                        <div className='col-lg-3 single_sqr_list2' style={{ backgroundColor: \"rgb(214,225,185)\" }}>\r\n                                                                        </div>\r\n                                                                        <div className='col-lg-3 w-50' style={{ textAlign: \"left\", textSize: \"12px\", paddingLeft: \"50px\", marginTop: \"inherit\" }}>\r\n                                                                            External Benchmark\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    ) : null}\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <hr style={{ border: \"1px thin rgb(209,209,209)\", marginLeft: 0, position: \"absolute\", bottom: \"20px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"0px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 6 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div style={{ position: \"relative\", top: \"-22px\" }}>\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"24px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span className='Think-Act-Feel-Leadership-Rating'>Think-Act-Feel Leadership Rating</span>\r\n                                                    {/* </br><span style={{ position: \"relative\", top: \"-16px\" }}>Leadership Rating</span> */}\r\n                                                </div>\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"54px\" }}>\r\n\r\n                                                    <div className='row' >\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\" }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Think\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Act\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Feel\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {impVal4 && Val4 ? (\r\n                                                        <div className='row ' >\r\n                                                            {impVal4.map((item, key) => (\r\n                                                                <>\r\n\r\n\r\n\r\n                                                                    {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: key % 3 != 0 ? \"1px solid rgb(209,209,209)\" : \"\" }}>\r\n                                                                            <span style={{ fontWeight: \"lighter\", fontSize: \"10px\" }}>{item.option}</span>\r\n                                                                            <div style={{ position: \"relative\", bottom: \"0px\", left: \"-14px\" }}>\r\n\r\n                                                                                <Chart\r\n                                                                                    chartType=\"PieChart\"\r\n                                                                                    data={[\r\n                                                                                        [\"Task\", \"Hours per Day\"],\r\n                                                                                        [\"Survey Mean\", [Math.ceil(Val4.[`data${key}`][0].survey_mean)] * 10],\r\n                                                                                        [\"Self Assessment\", item.answer * 10],\r\n                                                                                        [\"Internal Benchmark\", [Math.ceil(Val4.[`data${key}`][0].internal_bench)] * 10],\r\n                                                                                        [\"External Benchmark\", [Math.ceil(Val4.[`data${key}`][0].external_bench)] * 10],\r\n                                                                                    ]}\r\n                                                                                    options={{\r\n                                                                                        // title: \"My Daily Activities\",\r\n                                                                                        legend: \"none\",\r\n                                                                                        // legend: \"none\",\r\n                                                                                        // pieSliceText: \"label\",\r\n                                                                                        // title: item.option,\r\n                                                                                        // pieStartAngle: 100,\r\n                                                                                        slices: {\r\n                                                                                            0: { color: \"rgb(214,225,185)\" },\r\n                                                                                            1: { color: \"rgb(121,159,203)\" },\r\n                                                                                            2: { color: \"rgb(55,55,94)\" },\r\n                                                                                            3: { color: \"rgb(236,101,94)\" },\r\n\r\n                                                                                        },\r\n                                                                                    }}\r\n                                                                                    height={\"80%\"}\r\n                                                                                    width={\"50%\"}\r\n\r\n                                                                                />\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    ) : null}\r\n                                                                </>\r\n\r\n                                                            ))}\r\n\r\n\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    ) : null}\r\n\r\n\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {/* <div className='row' style={{ position: \"relative\", bottom: \"40px\", fontSize: \"8px\", left: \"20px\" }}>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(214,225,185)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(121,159,203)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(236,101,94)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {/* page ------ 7 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\"  >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    <div >\r\n                                        {feedbackData ? (\r\n                                            <>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                                <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                                <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                            </>\r\n                                        ) : null}\r\n                                        <div style={{ position: \"relative\", top: \"48px\", left: \"-5px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div style={{ position: \"relative\", left: \"22px\" }}>\r\n                                                    <div className=\"square_bar\"></div>\r\n                                                    <div className='page_left_header' style={{}}>\r\n                                                        <span className='Think-Act-Feel-Leadership-Rating'>Think-Act-Feel Leadership Rating</span>\r\n\r\n                                                        {/* <span>Think-Act-Feel</span><br>\r\n                                                        </br><span>Leadership Rating</span> */}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"60px\" }}>\r\n                                                    <div className='row' >\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\" }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Think\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Act\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        <div className='col-lg-4 ' style={{ borderBlockEnd: \"1px solid rgb(209,209,209)\", borderLeft: \"1px solid rgb(209,209,209)\" }}>\r\n                                                            <div style={{ position: \"relative\", bottom: \"20px\", right: \"240px\", }}>\r\n                                                                <div className='grp' style={{ position: \"relative\", left: \"290px\", fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", top: \"30px\", width: \"100px\", height: \"40px\" }}>\r\n                                                                    Feel\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {impVal4 && Val4 ? (\r\n                                                        <div className='row' style={{ boder: \"1px solid black\" }}>\r\n                                                            {impVal4.map((item, key) => (\r\n                                                                <>\r\n                                                                    {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                        <div className='col-4' style={{\r\n                                                                            boder: \"1px solid black\",\r\n                                                                            height: \"190px\",\r\n                                                                            borderBlockEnd: key <= 5 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n                                                                            borderRight: parseInt((key + 1) % 3) != 0 ? \"1px solid rgb(209,209,209)\" : \"\",\r\n\r\n                                                                        }}>\r\n\r\n                                                                            <div className='row'>\r\n                                                                                {[Val4.[`data${key}`][0].length > 0] ? (\r\n                                                                                    <>\r\n                                                                                        {console.log((parseInt(key + 1) % 3) != 0)}\r\n                                                                                        <div className='col-1'>\r\n                                                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                    {/* <span style={{ fontSize: \"20px\", }}>{parseFloat(item.answer).toFixed(1)}</span><br /> */}\r\n\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            <div style={{\r\n                                                                                                padding: parseFloat(item.answer * 5),\r\n                                                                                                width: 20,\r\n                                                                                                height: 20,\r\n                                                                                                transform: `translate(-5%,50%)`,\r\n                                                                                                borderRadius: \"100%\",\r\n                                                                                                opacity: 0.8,\r\n                                                                                                position: \"relative\",\r\n                                                                                                backgroundColor: \"rgb(168,26,12)\",\r\n\r\n                                                                                            }} >\r\n                                                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}>\r\n                                                                                                </div>\r\n                                                                                                <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{parseFloat(item.answer).toFixed(1)}</span><br />\r\n\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className='col-1' >\r\n                                                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                    {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br /> */}\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div style={{\r\n                                                                                                padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].survey_mean) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].survey_mean) * 5) : 50,\r\n                                                                                                width: 20,\r\n                                                                                                height: 20,\r\n                                                                                                transform: `translate(-5%,50%)`,\r\n                                                                                                borderRadius: \"100%\",\r\n                                                                                                opacity: 0.8,\r\n                                                                                                position: \"relative\",\r\n                                                                                                backgroundColor: \"rgb(55,55,94)\"\r\n                                                                                            }} >\r\n                                                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].survey_mean).toFixed(1)}</span><br />\r\n\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className='col-1' >\r\n                                                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                    {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div style={{\r\n                                                                                                padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) : 50,\r\n                                                                                                width: 20,\r\n                                                                                                height: 20,\r\n                                                                                                transform: `translate(-5%,50%)`,\r\n                                                                                                borderRadius: \"100%\",\r\n                                                                                                opacity: 0.8,\r\n                                                                                                position: \"relative\",\r\n                                                                                                backgroundColor: \"rgb(53,98,136)\"\r\n                                                                                            }} >\r\n                                                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\r\n\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className='col-1' >\r\n                                                                                            <div style={{ fontSize: \"16px\" }}>\r\n                                                                                                <div style={{ position: \"relative\", paddingLeft: \"4px\" }}>\r\n                                                                                                    {/* <span style={{ fontSize: \"8px\",position:\"relative\",top:\"-10px\",left:\"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br /> */}\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div style={{\r\n                                                                                                padding: Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) <= 50 ? Math.ceil(Math.ceil(Val4.[`data${key}`][0].internal_bench) * 5) : 50,\r\n                                                                                                width: 20,\r\n                                                                                                height: 20,\r\n                                                                                                transform: `translate(-5%,50%)`,\r\n                                                                                                borderRadius: \"100%\",\r\n                                                                                                opacity: 0.8,\r\n                                                                                                position: \"relative\",\r\n                                                                                                backgroundColor: \"rgb(170,207,221)\"\r\n                                                                                            }} >\r\n                                                                                                <div className=\"sqr_bar \" style={{ borderLeft: \"1px solid rgb(38,38,38)\", height: \"66px\" }}></div>\r\n                                                                                                <span style={{ fontSize: \"8px\", position: \"relative\", top: \"-10px\", left: \"3px\" }}>{(Val4.[`data${key}`][0].internal_bench).toFixed(1)}</span><br />\r\n\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </>\r\n\r\n                                                                                ) : null}\r\n\r\n                                                                            </div>\r\n\r\n\r\n\r\n\r\n                                                                        </div>\r\n                                                                    ) : null}\r\n\r\n                                                                </>\r\n                                                            ))}\r\n\r\n\r\n\r\n                                                        </div>) : null}\r\n\r\n\r\n\r\n\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                                <div className='row' style={{ position: \"relative\", bottom: \"10px\", fontSize: \"8px\", left: \"20px\" }}>\r\n                                    <hr style={{ width: \"102%\", textAlign: 'left', marginLeft: 0 }} />\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(168,26,12)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Survey Mean</div>\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Survey Mean</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(235,82,71)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(55,55,94)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Self Assessment</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Self Assessment</div> */}\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(241,158,152)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(53,98,136)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>Internal Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>Internal Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='col-lg-3'>\r\n                                        <div className='row'>\r\n                                            {/* <div className='sqr_list2' style={{ backgroundColor: \"rgb(249,218,216)\" }}>\r\n                                    </div> */}\r\n                                            <div className='sqr_list2' style={{ backgroundColor: \"rgb(170,207,221)\" }}>\r\n                                                <div style={{ position: \"relative\", right: \"-18px\", width: \"max-content\", top: \"2px\" }}>External Benchmark</div>\r\n\r\n                                            </div>\r\n                                            {/* <div style={{ fontSize: \"10px\", position: \"relative\", right: \"40px\", top: \"10px\" }}>External Benchmark</div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {/* page --------8 */}\r\n                    {feedbackData ? (\r\n                        <>\r\n                            <div className=\" row page-break feed_block_row\" >\r\n                                <div className='row' style={{ padding: \"25px 0px 0px 25px\" }}>\r\n                                    {feedbackData ? (<div >\r\n                                        <span style={{ float: \"left\", paddingLeft: \"15px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >{`${feedbackData[0].first_name} ${feedbackData[0].last_name}`} </span>\r\n                                        <span style={{ float: \"left\", paddingLeft: \"5px\", fontSize: \"8px\", textTransform: \"uppercase\" }} >/ Jan-Jun 2021</span>\r\n                                        <span style={{ float: \"right\", paddingRight: \"15px\", fontSize: \"8px\" }} >amplioso</span>\r\n                                        <div style={{ position: \"relative\", top: \"58px\", left: \"15px\", fontSize: \"40px\", fontWeight: \"bold\" }}>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Opportunities</span><br>\r\n                                                    </br><span>Overview</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                {impVal5 ? (\r\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", maxWidth: \"60%\" }}>\r\n                                                        <div className='row'>\r\n                                                            {impVal5.map((item, key) => (\r\n                                                                <div className='col-lg-4 m-2' style={{ border: \"1px solid #F1F1F1\", lineHeight: \"22px\", width: \"100px\", textAlign: \"center\" }}>{item.option}</div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                    </div>) : null}\r\n\r\n\r\n                                            </div>\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Personal</span><br>\r\n                                                    </br><span>Brand Overview</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                {/* {console.log(impVal7)} */}\r\n                                                {impVal7 ? (\r\n                                                    <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\" }}>\r\n                                                        <div className='row'>\r\n                                                            {impVal7.map((item, key) => (\r\n                                                                <>\r\n                                                                    <div className=\"square col-lg-2\" style={{ height: \"2px\", width: \"2px\", padding: \"2px\", backgroundColor: \"black\", margin: \"5px\" }}></div>\r\n                                                                    <div className=\"square col-lg-2\" style={{ text: \"center\", marginTop: \"2px\", padding: \"2px\", fontWeight: \"lighter\" }}>{item.option}</div>\r\n                                                                </>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n\r\n\r\n                                            <div style={{ textAlign: \"justify\", MozTextAlignLast: \"justify\" }}>\r\n                                                <div className=\"square_bar\"></div>\r\n                                                <div className='page_left_header'>\r\n                                                    <span>Additional</span><br>\r\n                                                    </br><span>Comments</span>\r\n                                                </div>\r\n                                                {/* vex nymphs.waltz,bad nymph,for quick jigs vex! fox nymphs grab quick-j */}\r\n                                                <div style={{ fontSize: \"7px\", position: \"relative\", bottom: \"50px\", left: \"16px\", color: \"black\", fontWeight: \"lighter\", color: \"black\" }}>\r\n                                                    {impVal8 ? (<div>{impVal8}</div>) : null}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>) : null}\r\n\r\n                                </div>\r\n\r\n\r\n                                <hr style={{ border: \"1px  black\", width: \"500rem\", textAlign: 'left', marginLeft: 0, position: \"absolute\", bottom: \"30px\" }} />\r\n                                <div style={{ fontSize: \"8px\", position: \"absolute\", bottom: \"8px\" }}>\r\n                                    <span style={{ position: \"relative\", left: \"45%\", bottom: \"10px\" }}>www.amplioso.com</span>\r\n                                    <span style={{ position: \"relative\", left: \"-20%\", bottom: \"10px\" }}>{new Date().getFullYear()}</span>\r\n                                    <span style={{ position: \"relative\", left: \"-45%\", bottom: \"10px\" }}>{feedbackData[0].CompanyId.company_name}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n\r\n\r\n                </PDFExport>\r\n            ) : (null)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StepOne from \"./steps/Step1\"\r\nimport StepTwo from \"./steps/Step2\"\r\nimport StepThree from \"./steps/Step3\"\r\nimport StepFour from \"./steps/Step4\"\r\nimport StepFive from \"./steps/Step5\"\r\nimport StepSix from \"./steps/Step6\"\r\nimport StepSeven from \"./steps/Step7\"\r\nimport StepEight from \"./steps/Step8\"\r\nimport StepNine from \"./steps/Step9\"\r\nimport Pdf from \"./steps/Pdf\";\r\nexport default function SurveyForm() {\r\n    const [data, setData] = useState({\r\n        first_name: 0,\r\n        last_name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [width, setWidth] = useState(12);\r\n\r\n    const makeRequest = (formData) => {\r\n        console.log(\"Form Submitted\", formData);\r\n    };\r\n\r\n    const handleNextStep = (newData, final = false) => {\r\n        setData((prev) => ({ ...prev, ...newData }));\r\n        if (final) {\r\n            makeRequest(newData);\r\n            return;\r\n        }\r\n        setCurrentStep((prev) => prev + 1);\r\n        setWidth((prev) => prev + 11);\r\n    };\r\n\r\n    const handlePrevStep = (newData) => {\r\n        setData((prev) => ({ ...prev, ...newData }));\r\n        setCurrentStep((prev) => prev - 1);\r\n        setWidth((prev) => prev - 11);\r\n    };\r\n    const steps = [\r\n        // <Pdf />,\r\n        // <StepEight next={handleNextStep} data={data} />,\r\n        // <StepSeven next={handleNextStep} data={data} />,\r\n\r\n        <StepOne next={handleNextStep} data={data} />,\r\n        <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepThree next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepFour next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepFive next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepSix next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepSeven next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepEight next={handleNextStep} prev={handlePrevStep} data={data} />,\r\n        <StepNine next={handleNextStep} prev={handlePrevStep} data={data} />\r\n    ];\r\n\r\n    return (\r\n        <div className=\"content-body\">\r\n            <div className=\"container-fluid bg-img\">\r\n                <div className=\"form-head mb-4 flex-wrap align-items-center\">\r\n                    <div className=\"me-auto\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-lg-12 text-center p-0 mt-3 mb-2 form-box\" style={{ marginBottom: '40px !important' }}>\r\n                                <div className=\"px-0 pb-0 mt-3 mb-3\">\r\n                                    <div id=\"msform\">\r\n                                        {/* <div className=\"progress\">\r\n                                            <div className=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuemin={0} aria-valuemax={100} style={{ width: `${width}%` }} />\r\n                                        </div> */}\r\n                                        <div className=\"App\">{steps[currentStep]}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const stepOneValidationSchema = Yup.object({\r\n//     first_name: Yup.string().required().label(\"First name\"),\r\n//     last_name: Yup.string().required().label(\"Last name\")\r\n// });\r\n\r\n// const StepOne = (props) => {\r\n//     const handleSubmit = (values) => {\r\n//         props.next(values);\r\n//     };\r\n\r\n//     return (\r\n//         <Formik\r\n//             validationSchema={stepOneValidationSchema}\r\n//             initialValues={props.data}\r\n//             onSubmit={handleSubmit}\r\n//         >\r\n//             {() => (\r\n//                 <Form>\r\n//                     <p>First Name</p>\r\n//                     <Field name=\"first_name\" />\r\n//                     <ErrorMessage name=\"first_name\" />\r\n\r\n//                     <p>Last Name</p>\r\n//                     <Field name=\"last_name\" />\r\n//                     <ErrorMessage name=\"last_name\" />\r\n\r\n//                     <button type=\"submit\">Next</button>\r\n//                 </Form>\r\n//             )}\r\n//         </Formik>\r\n//     );\r\n// };\r\n\r\n// const stepTwoValidationSchema = Yup.object({\r\n//     email: Yup.string().required().email().label(\"Email\"),\r\n//     password: Yup.string().required().label(\"Password\")\r\n// });\r\n\r\n// const StepTwo = (props) => {\r\n//     const handleSubmit = (values) => {\r\n//         props.next(values, true);\r\n//     };\r\n\r\n//     return (\r\n//         <Formik\r\n//             validationSchema={stepTwoValidationSchema}\r\n//             initialValues={props.data}\r\n//             onSubmit={handleSubmit}\r\n//         >\r\n//             {({ values }) => (\r\n//                 <Form>\r\n//                     <p>Email</p>\r\n//                     <Field name=\"email\" />\r\n//                     <ErrorMessage name=\"email\" />\r\n\r\n//                     <p>Password</p>\r\n//                     <Field name=\"password\" />\r\n//                     <ErrorMessage name=\"password\" />\r\n\r\n//                     <button type=\"button\" onClick={() => props.prev(values)}>\r\n//                         Back\r\n//                     </button>\r\n//                     <button type=\"submit\">Submit</button>\r\n//                 </Form>\r\n//             )}\r\n//         </Formik>\r\n//     );\r\n// };\r\n","export default __webpack_public_path__ + \"static/media/default-logo.06ecaef6.png\";","import React, { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport image from '../../assets/images/default-logo.png'\r\n\r\nconst TokenExpiredPage = () => {\r\n  let location = useLocation();\r\n  useEffect(() => {\r\n    console.log(location)\r\n  }, [])\r\n  return (\r\n    // <div>{location.state ? location.state : \"token expired\"}</div>\r\n\r\n    <section className=\"about-area about-back-bg pt-120 pb-85 mb0\">\r\n      <img className='m-3' src={image} style={{ padding: \"5px\" }} height={`60px`} />\r\n\r\n      <div className=\"container fullwidthcont\">\r\n        <div className='text-center' style={{ fontSize: \"50px\", position: \"relative\", bottom: \"-350px\" }}>! {location.state ? location.state : \"token expired\"}</div>\r\n      </div>\r\n    </section>\r\n\r\n  )\r\n}\r\n\r\nexport default TokenExpiredPage","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useHistory,\r\n    useParams,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport SurveyHeader from \"./components/SurveyHeader\";\r\nimport Application from \"./pages/test\";\r\nimport Instruction from \"./pages/Survey/Instruction\";\r\nimport StepCheck from \"./pages/Survey/StepCheck\";\r\n\r\nimport WelcomeScreen from \"./pages/Survey/welcomescreen\";\r\nimport SurveyForm from \"./pages/Survey/SurveyForm\";\r\nimport TokenExpiredPage from \"./pages/Survey/TokenExpiredPage\";\r\n\r\nconst SuperAdminRouting = () => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() => (\r\n                <Redirect to=\"/unauthorized_tkn\" />\r\n            )} />\r\n\r\n            <Route path=\"/tkn/:token_ele\">\r\n                <WelcomeScreen />\r\n            </Route>\r\n            <Route path=\"/instruction\">\r\n                <SurveyHeader data={<Instruction />}\r\n                />\r\n            </Route>\r\n            <Route path=\"/StepCheck\">\r\n                <SurveyHeader data={<StepCheck />}\r\n                />\r\n            </Route>\r\n            <Route path=\"/surveyform\">\r\n                <SurveyHeader data={<SurveyForm />}\r\n                />\r\n            </Route>\r\n            <Route path=\"/unauthorized_tkn\">\r\n                <TokenExpiredPage />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\nexport default SuperAdminRouting","import React, { createContext, useEffect, useReducer } from \"react\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport SurveyRouting from \"./SurveyRouting\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={'/main_amp'} >\n      <SurveyRouting />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}